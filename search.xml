<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CentOS基本网络配置</title>
      <link href="/2021/10/21/centos-ji-ben-wang-luo-pei-zhi/"/>
      <url>/2021/10/21/centos-ji-ben-wang-luo-pei-zhi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="CentOS基本网络配置"><a href="#CentOS基本网络配置" class="headerlink" title="CentOS基本网络配置"></a>CentOS基本网络配置</h4><p>本课程要学习分布式数据库，需要主机（虚拟机）之间进行通信，需要设置基本的网络连接。</p><p>下列操作<br>1、    win10+R：输入<code>services.msc</code>，进入服务面板找到<code>VMware DHCP Service</code>和<code>VMware NAT Service</code>并启动服务。</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202110211214912.png"></p><p>2、打开VMware<br>3、系统，用root登录系统<br><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202110211215927.png"></p><p>4、执行命令<br>[hadoop@localhost root]$ vi /etc/sysconfig/network-scripts/ifcfg-ens33<br>打开网卡配置文件</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202110211215940.png"></p><blockquote><p>按下i键进入编辑模式，将最后一行：ONBOOT=no修改为yes<br>按ESC键，输入：wq保存并退出<br>执行命令<br>[hadoop@localhost root]$ nmcli conn up ens33<br>启用网卡，或者重新启动网卡<br>执行：ip add 查看你的虚拟机ip地址信息</p></blockquote><p>实验小结：<br>Linux基本网络设置：</p><ul><li>使用vi命令可以用文本编辑配置文件</li><li>使用i键可以快捷进入编辑模式</li><li>使用：wq可以对文本进行编辑后保存</li><li>使用：nmcli命令可以对网卡进行重启、重启操作</li><li>使用ip add可以查看centOS8的ip地址信息</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>封装案例</title>
      <link href="/2021/10/18/feng-zhuang-an-li/"/>
      <url>/2021/10/18/feng-zhuang-an-li/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="案例一"><a href="#案例一" class="headerlink" title="案例一"></a>案例一</h4><p>1.使用面向对象的思想，设计一个用户<code>（User）</code>类，包括用户名、密码 、<code>ID</code>、用户等级、用户积分、收货地址、余额这些属性；方法包括：展示用户信息、密码修改、充值。<br>要求：</p><blockquote><ol><li>设置属性的私有访问权限，通过公有的<code>get</code>,<code>set</code>方法实现对属性的访问</li><li>初始化对象时密码默认<code>111111</code>，余额默认<code>0.0</code>，等级默认<code>1</code>。</li><li>修改密码要求长度至少为<code>8</code>，如无效给用户提示。</li><li>充值金额必须大于<code>10</code>元，如无效给用户提示。</li><li>编写测试类，测试<code>User</code>对象及相关方法（测试数据信息自定义）。</li></ol></blockquote><p><strong><em>详细信息类</em></strong></p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> java1<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>     <span class="token keyword">private</span> String name<span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>     <span class="token keyword">private</span> String sex<span class="token punctuation">;</span>     <span class="token keyword">private</span> String pwd<span class="token operator">=</span><span class="token string">"111111"</span><span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">int</span> YE<span class="token punctuation">;</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户名长度不能小于6！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setpwd</span><span class="token punctuation">(</span>String pwd<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>pwd<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"长度不小于8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>pwd <span class="token operator">=</span> pwd<span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"修改成功！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setYE</span><span class="token punctuation">(</span><span class="token keyword">int</span> YE<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>YE <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"必须大于10元"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>YE <span class="token operator">+=</span> YE<span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"余额："</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>YE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> sex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSex</span><span class="token punctuation">(</span>String sex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> sex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//自定义构造</span>    <span class="token keyword">public</span> <span class="token function">Person</span><span class="token punctuation">(</span>String sex<span class="token punctuation">,</span><span class="token keyword">int</span> age<span class="token punctuation">,</span>String name<span class="token punctuation">,</span>String pwd<span class="token punctuation">,</span><span class="token keyword">int</span> YE<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> sex<span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>pwd <span class="token operator">=</span> pwd<span class="token punctuation">;</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>YE <span class="token operator">=</span> YE<span class="token punctuation">;</span>     <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//实例方法或成员方法</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">introduce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我叫"</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">",芳龄："</span><span class="token operator">+</span>age<span class="token operator">+</span><span class="token string">",性别："</span><span class="token operator">+</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><strong><em>测试类</em></strong></p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> java1<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PersonTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>          Person p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"女"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">"小红"</span><span class="token punctuation">,</span><span class="token string">"111111"</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          p<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//          System.out.println(p.getName());</span>          p<span class="token punctuation">.</span><span class="token function">setpwd</span><span class="token punctuation">(</span><span class="token string">"11111111"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          p<span class="token punctuation">.</span><span class="token function">setYE</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="案例二"><a href="#案例二" class="headerlink" title="案例二"></a>案例二</h4><ol start="2"><li>请使用面向对象的思想设计描述商品信息<br>要求：<blockquote><ol><li>分析商品类别和商品详细信息属性和方法，设计商品类别类和商品详细信息类</li><li>在商品详细信息类中通过属性描述该商品所属类别</li><li>设置属性的私有访问权限，通过公有的<code>get</code>,<code>set</code>方法实现对属性的访问</li><li>编写测试类，测试商品类别类和商品详细信息类的对象及相关方法（测试数据信息自定）</li><li>创建包<code>info</code>—存放商品类别类和商品详细信息类，创建包<code>test</code>—存放测试类<br>参考分析思路:<br>商品类别类：<br>属性：类别编号，类别名称<br>商品详细信息类：<br>属性：商品编号，商品名称，所属类别，商品数量（大于0），商品价格（大于0），<br>方法：盘点的方法，描述商品信息。内容包括商品名称，商品数量，商品价格，现在商品总价以及所属类别信息<br>运行效果图:</li></ol></blockquote></li></ol><p>*<strong>详细信息类</strong></p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> java3<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">info</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//  商品编号，商品名称，所属类别，商品数量（大于0），商品价格（大于0）    </span>    <span class="token keyword">private</span> <span class="token keyword">int</span> BH<span class="token punctuation">;</span>    <span class="token keyword">private</span> String MC<span class="token punctuation">;</span>    <span class="token keyword">private</span> String LB<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> SL<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> JG<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">double</span> ZJ<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getZJ</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        ZJ<span class="token operator">=</span>SL<span class="token operator">*</span>JG<span class="token punctuation">;</span>        <span class="token keyword">return</span> ZJ<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//get和set方法</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getBH</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> BH<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBH</span><span class="token punctuation">(</span><span class="token keyword">int</span> bH<span class="token punctuation">)</span> <span class="token punctuation">{</span>        BH <span class="token operator">=</span> bH<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getMC</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> MC<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMC</span><span class="token punctuation">(</span>String mC<span class="token punctuation">)</span> <span class="token punctuation">{</span>        MC <span class="token operator">=</span> mC<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getLB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> LB<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLB</span><span class="token punctuation">(</span>String lB<span class="token punctuation">)</span> <span class="token punctuation">{</span>        LB <span class="token operator">=</span> lB<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getSL</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> SL<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSL</span><span class="token punctuation">(</span><span class="token keyword">int</span> sL<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SL <span class="token operator">=</span> sL<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">double</span> <span class="token function">getJG</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> JG<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setJG</span><span class="token punctuation">(</span><span class="token keyword">double</span> jG<span class="token punctuation">)</span> <span class="token punctuation">{</span>        JG <span class="token operator">=</span> jG<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setZJ</span><span class="token punctuation">(</span><span class="token keyword">double</span> zJ<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ZJ <span class="token operator">=</span> zJ<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//商品数量必须大于0元</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">SetSL</span><span class="token punctuation">(</span><span class="token keyword">int</span> SL<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>SL <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//            System.out.println("==================================");</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>SL <span class="token operator">+=</span> SL<span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"商品数量必须大于0元  !  "</span><span class="token operator">+</span><span class="token string">"("</span><span class="token operator">+</span><span class="token string">"商品数量："</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>SL<span class="token operator">+</span><span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>SL <span class="token operator">+=</span> SL<span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"商品数量："</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>SL<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//商品价格必须大于0元</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">SetJG</span><span class="token punctuation">(</span><span class="token keyword">double</span> JG<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>JG <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"库存数量异常，请联系管理员！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>JG <span class="token operator">=</span> JG<span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"商品价格必须大于0元  !  "</span><span class="token operator">+</span><span class="token string">"("</span><span class="token operator">+</span><span class="token string">"商品数量："</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>JG<span class="token operator">+</span><span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>JG <span class="token operator">=</span> JG<span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"商品价格："</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">.</span>JG<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">//    public void SetSG(int SL,double JG) {</span><span class="token comment" spellcheck="true">//    if(SL &lt; 0 | JG &lt; 0) {</span><span class="token comment" spellcheck="true">//        System.out.println("库存数量异常，请联系管理员！");</span><span class="token comment" spellcheck="true">////        this.JG = JG;</span><span class="token comment" spellcheck="true">////        System.out.println("商品价格必须大于0元  !  "+"("+"商品数量："+this.JG+")");</span><span class="token comment" spellcheck="true">////        </span><span class="token comment" spellcheck="true">////        this.SL += SL;</span><span class="token comment" spellcheck="true">////        System.out.println("商品数量必须大于0元  !  "+"("+"商品数量："+this.SL+")");</span><span class="token comment" spellcheck="true">//    }else {</span><span class="token comment" spellcheck="true">//        this.SL += SL;</span><span class="token comment" spellcheck="true">//        System.out.println("商品数量："+this.SL);</span><span class="token comment" spellcheck="true">//        </span><span class="token comment" spellcheck="true">//        this.JG = JG;</span><span class="token comment" spellcheck="true">//        System.out.println("商品价格："+this.JG);</span><span class="token comment" spellcheck="true">//    }</span><span class="token comment" spellcheck="true">//    </span><span class="token comment" spellcheck="true">//}    </span>  <span class="token comment" spellcheck="true">//自定义构造</span>    <span class="token keyword">public</span> <span class="token function">info</span><span class="token punctuation">(</span><span class="token keyword">int</span> BH<span class="token punctuation">,</span>String MC<span class="token punctuation">,</span>String LB<span class="token punctuation">,</span><span class="token keyword">int</span> SL<span class="token punctuation">,</span><span class="token keyword">double</span> JG<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>BH <span class="token operator">=</span> BH<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>MC <span class="token operator">=</span> MC<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>LB <span class="token operator">=</span> LB<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>SL <span class="token operator">=</span> SL<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>JG <span class="token operator">=</span> JG<span class="token punctuation">;</span>     <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">introduce</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"商品名称："</span><span class="token operator">+</span>MC<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"商品编号："</span><span class="token operator">+</span>BH<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"商品数量："</span><span class="token operator">+</span>SL<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"商品价格"</span><span class="token operator">+</span>JG<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"所属类别："</span><span class="token operator">+</span>LB<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总价"</span><span class="token operator">+</span><span class="token punctuation">(</span>ZJ<span class="token operator">=</span>SL<span class="token operator">*</span>JG<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">XHX</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"=================================="</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><strong><em>测试类</em></strong></p><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> java3<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//import java1.Person;</span><span class="token keyword">import</span> java3<span class="token punctuation">.</span>info<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">test</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        info p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">info</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">,</span> <span class="token string">"飘柔洗发水450ml"</span><span class="token punctuation">,</span> <span class="token string">"洗发水"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span><span class="token function">introduce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span><span class="token function">XHX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span><span class="token function">SetJG</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span><span class="token function">SetSL</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//        p.SetSG(0,0);</span>        p<span class="token punctuation">.</span><span class="token function">introduce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//          System.out.println(p.getName());  </span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jmeter接口测试</title>
      <link href="/2021/10/16/jmeter-jie-kou-ce-shi/"/>
      <url>/2021/10/16/jmeter-jie-kou-ce-shi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="jmeter接口测试"><a href="#jmeter接口测试" class="headerlink" title="jmeter接口测试"></a>jmeter接口测试</h4><h5 id="一、JMeter简介"><a href="#一、JMeter简介" class="headerlink" title="一、JMeter简介"></a>一、JMeter简介</h5><blockquote><p>  JMeter是Apache组织开发的基于Java的压力测试工具。具有开源免费、框架灵活、多平台支持等优势。<br>除了压力测试外，JMeter在接口测试方面也有广泛的应用。<br>   Jmeter是一个非常优秀的开源性能测试工具。从功能来来讲，Jmeter不输给任何一款商业性能测试工具，<br>但由于Jmeter具有典型的开源工具的特点（界面不美观），因此在国内的软件测试行业中，Jmeter未被广<br>泛使用。另一方面，Jmeter本身没有完善的中文文档，这也在一定程度上阻碍来jmeter成为广大中国软件<br>测试工程师的助手。</p></blockquote><h5 id="Jmeter的优点"><a href="#Jmeter的优点" class="headerlink" title="Jmeter的优点"></a>Jmeter的优点</h5><ul><li>（1）<code>Jmeter</code>工具的拓展性非常好。用户可以把自己的客户端用于与服务端通信的相关部分提取处理，包装为<code>Jmeter</code>的<code>Sampler</code>。<code>Jmeter</code>用于向服务器发送请求的单元），然后使用自己的Sampler向服务器产生压力。</li><li>（2）<code>Jmeter</code>工具是开源的。开源不仅仅意味着免费，更重要的是意味着用户可以通过开放的源代码，充分了解工具的一切行为。</li><li>（3）与商业性能测试工具相比，<code>Jmeter</code>工具就像是一把瑞士军刀，虽然没有像商业工具那样提供庞大的“套件”，却凭借着自己的灵活性几乎无所不能<h5 id="二、jmeter基础概念"><a href="#二、jmeter基础概念" class="headerlink" title="二、jmeter基础概念"></a>二、jmeter基础概念</h5></li><li>Test Plan 测试计划</li><li>Thread group 线程组</li><li>Sampler</li><li>Logic Controller 逻辑控制器</li><li>Listener 监听器</li></ul><h5 id="二、jmeter基础概念-1"><a href="#二、jmeter基础概念-1" class="headerlink" title="二、jmeter基础概念"></a>二、<code>jmeter</code>基础概念</h5><ul><li>Test Plan 测试计划</li></ul><p>用来描述一个测试，包含与本次测试相关的所有内容。</p><ul><li>Thread group 线程组</li></ul><p>是在一个<code>Test Plan</code>中需要使用到的线程组。通俗地说，一个<code>Thread Group</code>可以看做是一个虚拟用户组，Thread Group中的每个线程都可以理解为一个虚拟用户。Thread Group中包含的线程数量在测试执行过程中是不会发生改变的。</p><ul><li>Sampler</li></ul><p>是测试中向服务器发送请求、记录响应信息、记录响应时间的最小单元，Jmeter原生支持多个不同的Sampler，如Http Request Sampler、FTP Request Sampler、TCP Rwquest Sampler等，每一种不同类型的Sampler可以根据设置的参数向服务器发出不同类型的请求。</p><ul><li>Logic Controller 逻辑控制器</li></ul><p>包括两类元件，一类是用于控制<code>Test Plan</code>中<code>Sampler</code>节点发送请求的逻辑顺序的控制器，常用的有if Controller、Switch Controller等。另一类是用来组织和控制Sampler节点的，如Transaction Controller、Throughput Controller.</p><ul><li>Listener 监听器</li></ul><p>用来对测试结果数据进行处理和可视化展示的一系列元件。Summary Report、View Results in Table和View Results Tree是常用的一些Listener。</p><h6 id="JMeter安装"><a href="#JMeter安装" class="headerlink" title="JMeter安装"></a>JMeter安装</h6><ul><li>访问JMeter官网：<br><a href="https://jmeter.apache.org/download_jmeter.cgi">https://jmeter.apache.org/download_jmeter.cgi</a>，点击下载后解压缩，依次打开\apache-jmeter-4.0\JMeter\bin，运行jmeter.bat或者jmeterw.cmd即可。（建议在桌面创建jmeterw.cmd的快捷方式，方便快速打开）</li></ul><ul><li>苹果电脑启动方式：<br>打开终端，进入\apache-jmeter-4.0\JMeter\bin，执行sh jmeter即可</li></ul><h5 id="三、建立第一个简单的Jmeter-Test-Plan"><a href="#三、建立第一个简单的Jmeter-Test-Plan" class="headerlink" title="三、建立第一个简单的Jmeter Test Plan"></a>三、建立第一个简单的Jmeter Test Plan</h5><p><strong><em>测试需求如下</em></strong></p><ul><li>（1）测试的目标网站是<a href="http://www.google.cn/">www.google.cn</a></li><li>（2）测试仅需要访问网站首页</li></ul><p>1、启动<code>Jmeter</code>后，<code>jmeter</code>会自动生成一个空的<code>TestPlan</code><br><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202110161648245.png"></p><p>2、为TestPlan增加Thread Group<br>Thread Group是用于执行具体操作的线程组，一个Test Plan必须有一个线程组。向Test Plan添加Thread Group的方式很简单，在Test Plan上单击鼠标右键，选择Add-&gt;Thread Group<br><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202110161652676.png"></p><p><code>Thread Group</code>的主要参数包括<code>Number of Threads</code>(线程数量)、<code>Ramp-UpPeriod</code>(准备时长)和<code>Loop Count</code>(循环次数)</p><p>演示循环次数</p><p>3.增加<code>Http Request Sampler</code><br><code>Sampler</code>是与服务器交互的单元。一个<code>Sampler</code>通常进行3部分工作：向服务器发送请求，记录服务器的响应数据和记录响应时间信息。<br><code>Add-&gt;Sampler-&gt;HTTP Request</code><br><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202110161653830.png"></p><ul><li>(1)Name:名称。用于标识一个<code>Sampler</code>，建议使用一个有意义的名称。</li><li>(2)Comments:注释。</li><li>(3)Server Name or IP:HTTP请求发送的目标服务器名称或IP地址。</li><li>(4)Port Number:目标服务器端口号，默认80</li><li>(5)Protocol:向目标服务器发送<code>HTTP</code>请求时的协议，可以时<code>http</code>或者<code>https</code>，默认是<code>http</code></li><li>(6)Method:发送<code>HTTP</code>请求的方法，可用方法包括GET、POST、HEAD、PUT、OPTIONS、TRACE、DELETE</li><li>(7)Content encoding：内容的编码方式</li><li>(8)Path：目标URL路径（不包括服务端地址和端口）</li><li>(9)Use KeepAlive：当该选项被选中时，<code>jmeter</code>和目标服务器之间使用<code>KEEP-Alive</code>方式进行<code>http</code>通信，默认选中</li><li>(10)Send Parameters With the Request：在请求中发送URL参数，对于带参数的URL，<code>Jmeter</code>提供了一个简单的对参数进行参数化的方式，用户可以将URL中的所有参数设置在本表中，变种的每一行是一个参数值对</li></ul><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202110161654457.png"></p><p>4.调试<code>Test Plan</code><br>向<code>Test Plan</code>添加了<code>Thread Group和Sampler</code>之后，可以通过某些手段来验证是否能够按照预期的方式执行。<br><code>Jmeter</code>提供来多种不同的<code>Listenser</code>（<code>Listener</code>的作用是将<code>Sampler</code>收集的信息，包括服务器的响应数据和响应时间等以汇总或可视化的方式输出），其中View Results in Table和View Results Tree是两个简单且易使用的调试装置。<br>View Results Tree：该<code>Listener</code>以树状图的方式显示<code>Thread Group</code>中的每一个线程发出的每一个请求，显示结果包含该请求本身的详细信息以及响应的详细信息</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202110161655168.png"></p><p>四、添加断言<br>在每一个<code>http</code>请求下，都应该增加一层判断机制（<code>response</code>的关键字），即添加结果断言。<br>在<code>http请求</code>打开鼠标右键–&gt;添加–&gt;Assertions–&gt;response Assertion</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202110161655067.png"></p><p>五、正则表达式<br>所谓正则表达式，即一个用来描述或者匹配一系列符合某个句法规则的字符串的单个字符串。<br>在<code>http请求</code>打开鼠标右键–&gt;添加–&gt;post processions–&gt;Regular Expression Extractor<br>Name of created variable：正则表达式名称，我们使用${名称}来进行引用；</p><p>Regular Expression：设置提取规则</p><ul><li><p>.  匹配任何字符</p></li><li><ul><li>重复0次或更多次</li></ul></li><li><p>?    停止在第一个匹配成功时</p></li></ul><p>Templates：表示用哪个正则表达式模板获取的值 ，默认使用<code>$1$</code>，如果有多个正则表达式，则可以使用<code>$2$</code>，<code>$3$</code>等，表示解析到的第几个值给<code>test</code>。</p><p>Match No.：-1表示全部，0随机，1第一个，2第二个</p><p>Default value：如果没有取到值，则默认使用该值，可以为空</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202110161656218.png"></p><p><code>Jmeter</code>中配置元件之HTTP Header Manager(<code>Http</code>头文件管理器)<br>使用<code>HTTP</code>信息头管理，可以帮助测试人员设定<code>JMeter</code>发送的<code>HTTP</code>请求头所包含的信息。<code>HTTP</code>信息头中包含有<code>User-Agent</code>、<code>Pragma</code>、<code>Referer</code>等属性。尽可能放在线程组一级。除非因为某些原因，测试人员希望不同的<code>HTTP</code>请求使用不同的<code>HTTP</code>信息头。<br><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202110161656402.png"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java抽象与封装</title>
      <link href="/2021/10/14/java-chou-xiang-yu-feng-zhuang/"/>
      <url>/2021/10/14/java-chou-xiang-yu-feng-zhuang/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="打印姓名、性别和年龄"><a href="#打印姓名、性别和年龄" class="headerlink" title="打印姓名、性别和年龄"></a>打印姓名、性别和年龄</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> Server<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>     <span class="token keyword">private</span> String name<span class="token punctuation">;</span>     <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>     <span class="token keyword">private</span> String sex<span class="token punctuation">;</span>     <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> sex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSex</span><span class="token punctuation">(</span>String sex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> sex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//自定义构造</span>    <span class="token keyword">public</span> <span class="token function">Person</span><span class="token punctuation">(</span>String sex<span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token keyword">this</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> sex<span class="token punctuation">;</span>     <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//实例方法或成员方法</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">introduce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>     System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"我叫"</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">",芳龄："</span><span class="token operator">+</span>age<span class="token operator">+</span><span class="token string">",性别："</span><span class="token operator">+</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> Server<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PersonTest</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>          Person per <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//          Person per2 = new Person("男");</span>          per<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"小明"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          per<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          per<span class="token punctuation">.</span><span class="token function">setSex</span><span class="token punctuation">(</span><span class="token string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          per<span class="token punctuation">.</span><span class="token function">introduce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随机加减法</title>
      <link href="/2021/10/14/sui-ji-jia-jian-fa/"/>
      <url>/2021/10/14/sui-ji-jia-jian-fa/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="案例分析与实践"><a href="#案例分析与实践" class="headerlink" title="案例分析与实践"></a>案例分析与实践</h4><h5 id="生成50道100以内加法或减法算是习题"><a href="#生成50道100以内加法或减法算是习题" class="headerlink" title="生成50道100以内加法或减法算是习题"></a>生成50道100以内加法或减法算是习题</h5><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> chapter<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Random<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Operation</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> left<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//左边操作数</span>        <span class="token keyword">int</span> right<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//右边操作数</span>        <span class="token keyword">int</span> result<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//计算的结果</span>        Random r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//new一个r，为r开辟一个空间</span>        <span class="token keyword">char</span> op<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//运算符'op'</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">50</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            left <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//随机生成1个100以内的整数</span>            right <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//根据随机数来判断运算符是'+'或'-'</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//如果生成随机数为1，则为加法运算</span>                op <span class="token operator">=</span> <span class="token string">'+'</span><span class="token punctuation">;</span>                result <span class="token operator">=</span> left <span class="token operator">+</span> right<span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//否则为减法运算</span>                op <span class="token operator">=</span> <span class="token string">'-'</span><span class="token punctuation">;</span>                result <span class="token operator">=</span> left <span class="token operator">-</span> right<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//打印输出</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第"</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">"题："</span><span class="token operator">+</span>left<span class="token operator">+</span>op<span class="token operator">+</span>right<span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h5 id="无相同算式的基础构造"><a href="#无相同算式的基础构造" class="headerlink" title="无相同算式的基础构造"></a>无相同算式的基础构造</h5><pre class=" language-java"><code class="language-java"><span class="token keyword">package</span> cha2<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Random<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//代码2.2</span><span class="token comment" spellcheck="true">/* 分解成4个部分：（1）增加一个程序头打印函数void printHeader()，比如简单说明本程序的作用和使用。（2）函数void generateEquations()，产生加法或减法算式的符号串并存入一个数组。（3）输出习题的函数void printExercise()，它接收generateEquations的输出，按         照要求打印输出所有的算式。（4）输出习题中每个算式的计算结果void printCalculations()。 */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Operation_4_part</span> <span class="token punctuation">{</span>    <span class="token keyword">static</span> String <span class="token punctuation">[</span><span class="token punctuation">]</span> e <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//存储算式（不带结果）</span>    <span class="token keyword">static</span> <span class="token keyword">short</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">short</span><span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//存储计算结果</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--------------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- 程序输出50道100以内的加法减法算式的习题 -"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- 每次运行程序可得到一套50道题的习题及答案 -"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--------------------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">generateEquations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">short</span> m<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>v<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>ov <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//定义m:左操作数，n：右操作数，v:计算结果，ov: 运算符数字</span>        <span class="token keyword">char</span> o<span class="token operator">=</span><span class="token string">'+'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//运算符</span>        Random random <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">50</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            ov <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             m <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span>random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 随机产生运算数</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>ov <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">do</span> <span class="token punctuation">{</span>                    n <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span>random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     v <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>m <span class="token operator">+</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">&lt;</span> v <span class="token operator">||</span> v <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//若算式结果大于100或小于0，重新计算        </span>                o <span class="token operator">=</span> <span class="token string">'+'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">do</span> <span class="token punctuation">{</span>                    n <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span>random<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    v <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>m <span class="token operator">-</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">&lt;</span> v <span class="token operator">||</span> v <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                o <span class="token operator">=</span> <span class="token string">'-'</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>                        e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">""</span><span class="token operator">+</span>m<span class="token operator">+</span>o<span class="token operator">+</span>n<span class="token operator">+</span><span class="token string">"="</span><span class="token punctuation">;</span>            r<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>v<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printExercise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>e<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token operator">+</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"："</span><span class="token operator">+</span>e<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printCalculations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>r<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token operator">+</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"："</span><span class="token operator">+</span>r<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">printHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//打印头函数</span>        <span class="token function">generateEquations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//生成算式和答案，并存入数组</span>        <span class="token function">printExercise</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//打印算式</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"---------------------------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"- 下面是习题的参考答案    "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printCalculations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//打印答案</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux目录和文件管理</title>
      <link href="/2021/09/13/linux-mu-lu-he-wen-jian-guan-li/"/>
      <url>/2021/09/13/linux-mu-lu-he-wen-jian-guan-li/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="linux目录和文件管理"><a href="#linux目录和文件管理" class="headerlink" title="linux目录和文件管理"></a>linux目录和文件管理</h4><h5 id="实验目的："><a href="#实验目的：" class="headerlink" title="实验目的："></a>实验目的：</h5><p><strong><em>1．掌握linux的文件和目录管理的常用命令pwd,ls,cd,mkdir,rmdir,cp,mv,rm,touch等。</em></strong></p><blockquote><ol><li>Pwd：显示用户当前工作目录路径</li><li>Ls /var：显示目录/var下文件和子目录的简单信息(列出所有的子目录和文件信息)</li><li>Cd  /etc：更改用户的工作目录</li><li>Mkdir：可以在linux系统中创建目录</li><li>Mv：文件名、移动文件和目录路径</li><li>Cp可以复制文件和目录大全哦其他目录</li><li>Rm:可以删除系统中的文件或目录</li><li>Touch：可以创建文件以及更改文件时间</li></ol></blockquote><p><strong><em>2．    体会并掌握linux中相对路径和绝对路径的区别。</em></strong></p><p>Linux下的绝对路径和相对路径可以这样理解：</p><p>对于linux是以目录来组织的。最上层的是根目录（/），如果一路径是从根目录（/）开始，则这是绝对路径，比如（/usr,/usr/local）而相对路径则是相对于当前目录。<br>书写时直接输入对应的目录即可表示（/usr,usr/local）举例说明：如果当前目录在/usr，local则表示的绝对路径为/usr/loca</p><h4 id="实验内容及步骤"><a href="#实验内容及步骤" class="headerlink" title="实验内容及步骤"></a>实验内容及步骤</h4><h5 id="1-Linux文件类型"><a href="#1-Linux文件类型" class="headerlink" title="1.Linux文件类型"></a>1.Linux文件类型</h5><p>(1)普通文件:”-rw——-“<br>ls -lh:查看文件属性</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# ls -lh /root/anaconda-ks.cfg -rw-------. 1 root root 2.3K 7月  13 11:05 /root/anaconda-ks.cfg</code></pre><p>(2)目录文件:drwxr-xr-x</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# ls -lh /root总用量 16K-rw-------. 1 root root 2.3K 7月  13 11:05 anaconda-ks.cfgdrwxr-xr-x. 2 root root    6 9月   8 12:22 Desktopdrwxr-xr-x. 2 root root    6 9月   8 12:22 Documentsdrwxr-xr-x. 2 root root    6 9月   8 12:22 Downloads-rw-------. 1 root root 2.3K 7月  13 11:06 initial-setup-ks.cfgdrwxr-xr-x. 2 root root    6 9月   8 12:22 Music-rw-r--r--. 1 root root 6.0K 11月 12 2015 mysql-community-release-el7-5.noarch.rpmdrwxr-xr-x. 2 root root    6 9月   8 12:22 Picturesdrwxr-xr-x. 2 root root    6 9月   8 12:22 Publicdrwxr-xr-x. 2 root root    6 9月   8 12:22 Templatesdrwxr-xr-x. 2 root root    6 9月   8 12:22 Videosdrwxr-xr-x. 2 root root   55 7月  13 12:08 桌面</code></pre><p>(3)设备文件<br>块设备文件：brw-rw—-</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# ls -l /dev|grep sda1brw-rw----. 1 root disk      8,   1 9月  12 14:33 sda1</code></pre><p>字符串文件：crw–w—-</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# ls -l /dev/tty5crw--w----. 1 root tty 4, 5 9月  12 14:33 /dev/tty5</code></pre><p>(4)管道文件:</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# ls -l /run/systemd/inhibit/9.ref prw-------. 1 root root 0 9月  12 14:34 /run/systemd/inhibit/9.ref</code></pre><p>(5)连接文件<br>软连接文件：另外一种连接称之为符号连接（Symbolic Link），也叫软连接。软链接文件有类似于Windows的快捷方式。<br>它实际上是一个特殊的文件。在符号连接中，文件实际上是一个文本文件，其中包含的有另一文件的位置信息。</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# ls -l /etc/httpd/logslrwxrwxrwx. 1 root root 19 7月  13 10:52 /etc/httpd/logs -> ../../var/log/httpd</code></pre><p>硬链接文件：硬连接指通过索引节点来进行连接。在Linux的文件系统中，保存在磁盘分区中的文件不管是什么类型都给它分配一个编号，称为索引节点号(Inode Index)。<br>在Linux中，多个文件名指向同一索引节点是存在的。一般这种连接就是硬连接。硬连接的作用是允许一个文件拥有多个有效路径名，这样用户就可以建立硬连接到重要文件，以防止“误删”的功能。<br>其原因如上所述，因为对应该目录的索引节点有一个以上的连接。只删除一个连接并不影响索引节点本身和其它的连接，只有当最后一个连接被删除后，文件的数据块及目录的连接才会被释放。<br>也就是说，文件真正删除的条件是与之相关的所有硬连接文件均被删除。</p><h5 id="2-Linux目录结构"><a href="#2-Linux目录结构" class="headerlink" title="2.Linux目录结构"></a>2.Linux目录结构</h5><table><thead><tr><th>目录</th><th>描述</th></tr></thead><tbody><tr><td>/root</td><td>该目录为系统管理员，也称作超级权限者的用户主目录。</td></tr><tr><td>/home</td><td>用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的，如上图中的 alice、bob 和 eve。</td></tr><tr><td>/bin</td><td>bin 是 Binaries (二进制文件) 的缩写, 这个目录存放着最经常使用的命令。</td></tr><tr><td>/boot</td><td>这里存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件。</td></tr><tr><td>/dev</td><td>dev 是 Device(设备) 的缩写, 该目录下存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的。</td></tr><tr><td>/etc</td><td>etc 是 Etcetera(等等) 的缩写,这个目录用来存放所有的系统管理所需要的配置文件和子目录。</td></tr><tr><td>/sbin</td><td>包括系统管理员和root用户文件使用的命令文件</td></tr><tr><td>/usr</td><td>包括可以供所有用户的程序和数据</td></tr></tbody></table><h5 id="3-文件和目录操作"><a href="#3-文件和目录操作" class="headerlink" title="3.文件和目录操作"></a>3.文件和目录操作</h5><p><strong><em>3.1 pwd：显示工作目录路径</em></strong></p><table><thead><tr><th>选项</th><th>项目环境</th></tr></thead><tbody><tr><td>-L</td><td>目录链接时，输出链接路径</td></tr><tr><td>-P</td><td>输出物理路径</td></tr></tbody></table><p>(1)显示用户当前工作目录路径</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# pwd/root//用户当前的工作目录路径是/root</code></pre><p><strong><em>3.2 cd: 更改工作目录文件</em></strong></p><table><thead><tr><th>选项</th><th>项目环境</th></tr></thead><tbody><tr><td>-P</td><td>如果是链接路径，则进入链接路径的源物理路径</td></tr></tbody></table><p>(1)更改用户工作目录路径为/etc</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# cd /etc[root@localhost etc]# pwd/etc//查看当前用户的工作目录，可以看到已经更改的/etc</code></pre><p>(2)变用户工作目录路径位置至当前目录的父目录</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost etc]# pwd/etc//查看用户的当前工作目录路径/etc[root@localhost etc]# cd ..[root@localhost /]# pwd///可以看到工作目录路径已经更改为当前目录的父目录'/'了</code></pre><p>(3)改用户工作目录路径位置为用户主目录</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost /]# pwd///查看用户的当前用户目录路径'/'\[root@localhost /]# cd ~[root@localhost ~]# pwd/root//可以看到用户的工作目录路径已经更改为当前用户的主目录</code></pre><p>(4)改用户工作目录路径位置至用户lisi的主目录</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# cd ~lisi[root@localhost lisi]# pwd/home/lisi//可以看到用户的工作目录路径已经更改为用户lisi的主目录/home/lisi</code></pre><p><strong><em>3.3 ls；列出目录文件和文件信息</em></strong></p><table><thead><tr><th>选项</th><th>选项含义</th></tr></thead><tbody><tr><td>a：</td><td>显示所有档案及目录（ls内定将档案名或目录名称为“.”的视为影藏，不会列出）；</td></tr><tr><td>-A：</td><td>显示除影藏文件“.”和“..”以外的所有文件列表；</td></tr><tr><td>-C：</td><td>多列显示输出结果。这是默认选项；</td></tr><tr><td>-F：</td><td>在每个输出项后追加文件的类型标识符，具体含义：“*”表示具有可执行权限的普通文件，“/”表示目录，“@”表示符号链接，“</td></tr><tr><td>-b：</td><td>将文件中的不可输出的字符以反斜线“”加字符编码的方式输出；</td></tr><tr><td>-c：</td><td>与“-lt”选项连用时，按照文件状态时间排序输出目录内容，排序的依据是文件的索引节点中的ctime字段。与“-l”选项连用时，则排序的一句是文件的状态改变时间；</td></tr><tr><td>-d：</td><td>仅显示目录名，而不显示目录下的内容列表。显示符号链接文件本身，而不显示其所指向的目录列表；</td></tr><tr><td>-f：</td><td>此参数的效果和同时指定“aU”参数相同，并关闭“lst”参数的效果；</td></tr><tr><td>-i：</td><td>显示文件索引节点号（inode）。一个索引节点代表一个文件；</td></tr><tr><td>–file-type：</td><td>与“-F”选项的功能相同，但是不显示“*”；</td></tr><tr><td>-k：</td><td>以KB（千字节）为单位显示文件大小；</td></tr><tr><td>-l：</td><td>以长格式显示目录下的内容列表。输出的信息从左到右依次包括文件名，文件类型、权限模式、硬连接数、所有者、组、文件大小和文件的最后修改时间等；</td></tr><tr><td>-m：</td><td>用“,”号区隔每个文件和目录的名称；</td></tr><tr><td>-n：</td><td>以用户识别码和群组识别码替代其名称；</td></tr><tr><td>-r：</td><td>以文件名反序排列并输出目录内容列表；</td></tr><tr><td>-s：</td><td>显示文件和目录的大小，以区块为单位；</td></tr><tr><td>-F：</td><td>显示文件类型</td></tr><tr><td>-t：</td><td>用文件和目录的更改时间排序；</td></tr><tr><td>-L：</td><td>如果遇到性质为符号链接的文件或目录，直接列出该链接所指向的原始文件或目录；</td></tr><tr><td>-R：</td><td>递归处理，将指定目录下的所有文件及子目录一并处理；</td></tr><tr><td>–full-time：</td><td>列出完整的日期与时间；</td></tr><tr><td>–color[=WHEN]：</td><td>使用不同的颜色高亮显示不同类型的。</td></tr></tbody></table><p>(1)显示目录/var下文件和子目录的简单信息</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost lisi]# ls /varaccount  cache  db     ftp    gopher    lib    lock  mail   nis  preserve  spool   tmp  ypadm      crash  empty  games  kerberos  local  log   named  opt  run       target  www</code></pre><p>(2)显示/root目录下所有文件和子目录的详细信息，包括隐藏文件</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# ls -al /root总用量 68dr-xr-x---. 19 root root 4096 9月  12 14:34 .dr-xr-xr-x. 17 root root 4096 7月  13 11:04 ..-rw-------.  1 root root 2255 7月  13 11:05 anaconda-ks.cfg-rw-------.  1 root root 1375 9月   8 12:24 .bash_history-rw-r--r--.  1 root root   18 12月 29 2013 .bash_logout-rw-r--r--.  1 root root  176 12月 29 2013 .bash_profile-rw-r--r--.  1 root root  176 12月 29 2013 .bashrcdrwx------. 12 root root 4096 9月   8 12:07 .cachedrwxr-xr-x. 15 root root 4096 9月   8 12:22 .config-rw-r--r--.  1 root root  100 12月 29 2013 .cshrcdrwx------.  3 root root   24 7月  13 11:06 .dbusdrwxr-xr-x.  2 root root    6 9月   8 12:22 Desktopdrwxr-xr-x.  2 root root    6 9月   8 12:22 Documentsdrwxr-xr-x.  2 root root    6 9月   8 12:22 Downloads-rw-------.  1 root root   16 7月  13 11:07 .esd_authdrwx------.  3 root root   19 7月  13 11:10 .gnome2drwx------.  2 root root    6 7月  13 11:10 .gnome2_private-rw-------.  1 root root 1864 9月  12 14:34 .ICEauthority-rw-------.  1 root root 2348 7月  13 11:06 initial-setup-ks.cfgdrwx------.  3 root root   18 7月  13 11:07 .localdrwxr-xr-x.  4 root root   37 7月  13 11:10 .mozilladrwxr-xr-x.  2 root root    6 9月   8 12:22 Music-rw-r--r--.  1 root root 6140 11月 12 2015 mysql-community-release-el7-5.noarch.rpm-rw-------.  1 root root  230 7月  13 13:25 .mysql_historydrwxr-xr-x.  2 root root    6 9月   8 12:22 Picturesdrwxr-xr-x.  2 root root    6 9月   8 12:22 Publicdrwxr-xr-x.  3 root root   16 7月  13 11:07 .redhat-rw-r--r--.  1 root root  129 12月 29 2013 .tcshrcdrwxr-xr-x.  2 root root    6 9月   8 12:22 Templatesdrwxr-xr-x.  2 root root    6 9月   8 12:22 Videos-rw-------.  1 root root    0 9月   8 12:24 .Xauthoritydrwxr-xr-x.  2 root root   55 7月  13 12:08 桌面</code></pre><p>(3)显示/etc目录下的文件和子目录信息，用户标记出文件类型</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# ls -F /etcabrt/                       foomatic/                 mime.types               rsyncd.confadjtime                     fprintd.conf              mke2fs.conf              rsyslog.confakonadi/                    fstab                     modprobe.d/              rsyslog.d/aliases                     fuse.conf                 modules-load.d/          rwtabaliases.db                  gconf/                    motd                     rwtab.d/alsa/                       gcrypt/                   mtab@                    samba/alternatives/               gdbinit                   mtools.conf              sane.d/amanda/                     gdbinit.d/                multipath/               sasl2/anacrontab                  gdm/                      named/                   scl/ant.conf                    geoclue/                  named.conf               securettyant.d/                      ghostscript/              named.iscdlv.key         security/asound.conf                 gnome-vfs-2.0/            named.rfc1912.zones      selinux/at.deny                     gnupg/                    named.root.key           servicesat-spi2/                    GREP_COLORS               nanorc                   sestatus.confaudisp/                     groff/                    netconfig                setroubleshoot/audit/                      group                     NetworkManager/          setuptool.d/autofs.conf                 group-                    networks                 sgml/autofs_ldap_auth.conf       grub2.cfg@                nfsmount.conf            shadowauto.master                 grub.d/                   nsswitch.conf            shadow-auto.master.d/              gshadow                   nsswitch.conf.bak        shellsauto.misc                   gshadow-                  ntp/                     skel/auto.net*                   gss/                      ntp.conf                 slp.confauto.smb*                   gssproxy/                 numad.conf               slp.regavahi/                      hba.conf                  oddjob/                  slp.reg.d/bash_completion.d/          host.conf                 oddjobd.conf             slp.spibashrc                      hostname                  oddjobd.conf.d/          smartmontools/binfmt.d/                   hosts                     openldap/                softhsm2.confbonobo-activation/          hosts.allow               openlmi/                 sos.confbrltty/                     hosts.deny                openwsman/               sound/brltty.conf                 hp/                       opt/                     speech-dispatcher/certmonger/                 httpd/                    os-release               ssh/cgconfig.conf               ibm_hosts                 PackageKit/              ssl/cgconfig.d/                 idmapd.conf               pam.d/                   sssd/cgrules.conf                init.d@                   pam_pkcs11/              statetabcgsnapshot_blacklist.conf   inittab                   passwd                   statetab.d/chkconfig.d/                inputrc                   passwd-                  subversion/chrony.conf                 ipa/                      pbm2ppa.conf             sudo.confchrony.keys                 iproute2/                 pcp.conf                 sudoerscifs-utils/                 ipsec.conf                Pegasus/                 sudoers.d/cron.d/                     ipsec.d/                  pinforc                  sudo-ldap.confcron.daily/                 ipsec.secrets             pkcs11/                  sysconfig/cron.deny                   iscsi/                    pki/                     sysctl.confcron.hourly/                issue                     plymouth/                sysctl.d/cron.monthly/               issue.net                 pm/                      systemd/crontab                     java/                     pnm2ppa.conf             system-release@cron.weekly/                jvm/                      polkit-1/                system-release-cpecrypttab                    jvm-commmon/              popt.d/                  target/csh.cshrc                   kde/                      portreserve/             tcsd.confcsh.login                   kde4rc                    ppp/                     terminfo/cups/                       kderc                     prelink.conf.d/          tmpfiles.d/cupshelpers/                kdump.conf                printcap                 tomcat/dbus-1/                     keepalived/               profile                  Trolltech.confdconf/                      kernel/                   profile.d/               trusted-key.keydefault/                    krb5.conf                 protocols                tuned/depmod.d/                   ksmtuned.conf             pulse/                   udev/dhcp/                       ksysguarddrc              purple/                  udisks2/DIR_COLORS                  ld.so.cache               python/                  unbound/DIR_COLORS.256color         ld.so.conf                qemu-ga/                 updatedb.confDIR_COLORS.lightbgcolor     ld.so.conf.d/             qemu-kvm/                UPower/dirsrv/                     libaudit.conf             radvd.conf               usb_modeswitch.confdleyna-server-service.conf  libibverbs.d/             ras/                     usb_modeswitch.d/dnsmasq.conf                libnl/                    rc0.d@                   vconsole.confdnsmasq.d/                  libreport/                rc1.d@                   vimrcdovecot/                    libuser.conf              rc2.d@                   vircdracut.conf                 libvirt/                  rc3.d@                   virtuoso/dracut.conf.d/              locale.conf               rc4.d@                   vmware-tools/drirc                       localtime@                rc5.d@                   vsftpd/e2fsck.conf                 login.defs                rc6.d@                   wgetrcenscript.cfg                logrotate.conf            rc.d/                    wpa_supplicant/environment                 logrotate.d/              rc.local@                wvdial.confethertypes                  lsm/                      rdma/                    X11/exports                     lvm/                      reader.conf.d/           xdg/exports.d/                  machine-id                redhat-access-insights/  xinetd.d/extlinux.conf@              magic                     redhat-release           xml/favicon.png@                mail/                     request-key.conf         yum/fcoe/                       mailcap                   request-key.d/           yum.conffestival/                   mail.rc                   resolv.conf              yum.repos.d/filesystems                 makedumpfile.conf.sample  rhsm/firewalld/                  man_db.conf               rpcfonts/                      maven/                    rpm/</code></pre><p><strong><em>3.4 touch：创建空文件、更改文件时间</em></strong><br>(1)创建空文件file1和file2</p><pre class=" language-Linux"><code class="language-Linux">#[root@localhost ~]# touch file1[root@localhost ~]# touch file1 file2[root@localhost ~]# ls -l file1 file2ls: 无法访问file3: 没有那个文件或目录-rw-r--r--. 1 root root 0 9月  12 16:47 file1-rw-r--r--. 1 root root 0 9月  12 16:47 file2//两个文件都是空文件，没有任何数据</code></pre><p>(2)将文件file1的时间记录更改为10月10日 14:30（2021年）</p><table><thead><tr><th>选项</th><th>选项含义</th></tr></thead><tbody><tr><td>-a</td><td>只更改访问时间（atime）</td></tr><tr><td>-m</td><td>只更改文件修改使劲记录（mtime）</td></tr><tr><td>-c</td><td>假如目标文件不存在，则不会创建新的文件</td></tr><tr><td>-r&lt;文件&gt;</td><td>使用指定文件的时间属性而非当前时间</td></tr><tr><td>-d&lt;字符串&gt;</td><td>使用指定字符串的时间属性而非当前时间</td></tr><tr><td>-t&lt;日期时间&gt;</td><td>使用[[CC]YY]MMDDhhmm[.ss]</td></tr></tbody></table><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# ls -l /root/file1-rw-r--r--. 1 root root 0 9月  12 16:47 /root/file1//空文件/root/file1的创建日期9月12日 16:47（2021）[root@localhost ~]# touch -c -t 10101430 /root/file1[root@localhost ~]# ls -l /root/file1-rw-r--r--. 1 root root 0 10月 10 2021 /root/file1//文件/root/file1更新atime和mtime，现在的时间更改为10月10日 14:30（2021年）</code></pre><blockquote><p>时间格式YYYYMMDDHHmm其中YYYY（年）、MM（月）、DD（日）、HH（时）、MM（分）</p><p><strong><em>3.5 mkdir：创建目录</em></strong></p></blockquote><table><thead><tr><th>选项</th><th>选项含义</th></tr></thead><tbody><tr><td>-m&lt;权限模式&gt;</td><td>对创建的目录设置权限，在没有-m时，默认权限是755</td></tr><tr><td>-v</td><td>每次创建目录都会显示信息</td></tr><tr><td>-p</td><td>可以是一个路径名称。此时若路径中的某写项目上不存在，加上此选项后，系统自动创建那些尚不存在的目录，即一次可以创建多个目录</td></tr><tr><td>(1)创建目录newdir1，默认权限为755</td><td></td></tr></tbody></table><pre class=" language-linux"><code class="language-linux">[root@localhost ~]# mkdir newdir1[root@localhost ~]# ls -l总用量 20-rw-------. 1 root root 2255 7月  13 11:05 anaconda-ks.cfgdrwxr-xr-x. 2 root root    6 9月   8 12:22 Desktopdrwxr-xr-x. 2 root root    6 9月   8 12:22 Documentsdrwxr-xr-x. 2 root root    6 9月   8 12:22 Downloads-rw-r--r--. 1 root root   25 9月  12 17:00 file1-rw-r--r--. 1 root root    0 9月  12 16:52 file2-rw-r--r--. 1 root root    0 9月  12 16:52 file3-rw-------. 1 root root 2348 7月  13 11:06 initial-setup-ks.cfgdrwxr-xr-x. 2 root root    6 9月   8 12:22 Music-rw-r--r--. 1 root root 6140 11月 12 2015 mysql-community-release-el7-5.noarch.rpmdrwxr-xr-x. 2 root root    6 9月  12 17:53 newdir1drwxr-xr-x. 2 root root    6 9月   8 12:22 Picturesdrwxr-xr-x. 2 root root    6 9月   8 12:22 Publicdrwxr-xr-x. 2 root root    6 9月   8 12:22 Templatesdrwxr-xr-x. 2 root root    6 9月   8 12:22 Videosdrwxr-xr-x. 2 root root   55 7月  13 12:08 桌面[root@localhost ~]# ls -ld newdir1drwxr-xr-x. 2 root root 6 9月  12 17:53 newdir1//目录newdir1，权限为rwxr-xr-x（755）</code></pre><p>(2)创建目录newdir2，权限为777</p><pre class=" language-linux"><code class="language-linux">[root@localhost ~]# mkdir -m 777 newdir2[root@localhost ~]# ls -ld newdir2drwxrwxrwx. 2 root root 6 9月  12 17:56 newdir2//目录newdir2，权限为rwxrwxrwx（777）</code></pre><p>注：</p><pre class=" language-Linux"><code class="language-Linux">下面列出常用的linux文件权限：r=4，w=2，x=1若要rwx属性则4+2+1=7;若要rw-属性则4+2=6;若要r-x属性则4+1=7;444 r--r--r--600 rw-------644 rw-r--r--666 rw-rw-rw-700 rwx------744 rwxr--r--755 rwxr-xr-x777 rwxrwxrwx</code></pre><p><strong><em>3.6 rmdir：删除空目录</em></strong></p><table><thead><tr><th>选项</th><th>选项含义</th></tr></thead><tbody><tr><td>-p</td><td>递归删除目录，当子目录删除后父目录为空时，也一同删除</td></tr><tr><td>-v</td><td>输出处理目录详情</td></tr></tbody></table><p>(1)删除目录newdir1</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# rmdir newdir1</code></pre><p>(2)同时删除/root/newdir2/和/root/newdir2/newdir3两个空目录</p><pre class=" language-linux"><code class="language-linux">[root@localhost ~]# mkdir /root/newdir2[root@localhost ~]# mkdir /root/newdir2/newdir3[root@localhost ~]# rmdir -p /root/newdir2/newdir3rmdir: 删除目录 "/root" 失败: 目录非空//这个命令将删除空目录/root/newdir2/和/root/newdir2/newdir3，//但由于/root目录不是空的，所以/root目录不能删除，而其他目录已经删除了</code></pre><p><strong><em>3.7 cp：复制文件目录</em></strong></p><table><thead><tr><th>选项</th><th>选项含义</th></tr></thead><tbody><tr><td>-a：</td><td>此选项通常在复制目录时使用，它保留链接、文件属性，并复制目录下的所有内容。其作用等于dpR参数组合。</td></tr><tr><td>-d：</td><td>复制时保留链接。这里所说的链接相当于Windows系统中的快捷方式。</td></tr><tr><td>-f：</td><td>覆盖已经存在的目标文件而不给出提示。</td></tr><tr><td>-i：</td><td>与-f选项相反，在覆盖目标文件之前给出提示，要求用户确认是否覆盖，回答”y”时目标文件将被覆盖。</td></tr><tr><td>-p：</td><td>除复制文件的内容外，还把修改时间和访问权限也复制到新文件中。</td></tr><tr><td>-r：</td><td>若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。</td></tr><tr><td>-l：</td><td>不复制文件，只是生成链接文件。</td></tr><tr><td>(1)将/etc/grub2.cfg文件复制到/root目录下，并改名为grub</td><td></td></tr></tbody></table><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# cp /etc/grub2.cfg /root/grunb</code></pre><p>(2)将/etc/grub2.cfg文件复制到/root目录下</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# cp /etc/grub2.cfg /root</code></pre><p>(3)将/boot目录以及目录中所有文件和子目录复制到/root目录中</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# cp -r /boot /root</code></pre><p><strong><em>3.8 mv：文件可目录更名、移动文件和目录文件</em></strong></p><table><thead><tr><th>选项</th><th>选项含义</th></tr></thead><tbody><tr><td>-i</td><td>覆盖前询问</td></tr><tr><td>-f</td><td>覆盖前不询问</td></tr><tr><td>-n</td><td>不覆盖已存在文件</td></tr><tr><td>-u</td><td>只有在源文件比目录文件新，或者目标文件不存在时才进行移动</td></tr><tr><td>-T</td><td>将目标文件视作普通文件处理</td></tr><tr><td>(1)将/root/pic目录文件下所有的后缀名为’.png’文件移动到/usr/local/share/pic目录下</td><td></td></tr></tbody></table><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# mv -f /root/pic/*.png /usr/local/share/pic</code></pre><p>(2)把/root/pic/kpic.png文件改名为/root/pic/life.png</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# mv /root/pic/kpic.png /root/pic/life.png</code></pre><p>(3)把/root/pic目录名称更改为/root/mypic</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# mv /root/pic /root/mypic</code></pre><p><strong><em>3.9 rm：删除文件或目录</em></strong></p><table><thead><tr><th>选项</th><th>选项含义</th></tr></thead><tbody><tr><td>-f</td><td>强制删除。忽略不存在的文件，不给出提示信息</td></tr><tr><td>-r</td><td>递归删除目录及其内容</td></tr><tr><td>-i</td><td>在删除前需要确认</td></tr><tr><td>(1)删除当前目录下</td><td></td></tr></tbody></table><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# touch file4[root@localhost ~]# rm file4rm：是否删除普通空文件 "file4"？y</code></pre><p>(2)连同/root/ab/a文件和/root/ab目录一起删除</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# mkdir /root/ab[root@localhost ~]# mkdir /root/ab/a[root@localhost ~]# rm -rf /root/ab</code></pre><p><strong><em>3.10 wc：统计文件行数、单词数和字符数</em></strong></p><table><thead><tr><th>选项</th><th>选项含义</th></tr></thead><tbody><tr><td>-i</td><td>统计行数</td></tr><tr><td>-w</td><td>统计单词数</td></tr><tr><td>-c</td><td>统计字节数</td></tr><tr><td>-m</td><td>统计字符数</td></tr><tr><td>-L</td><td>统计文件中最长的长度</td></tr><tr><td>(1)统计/root/aa文件的行数、单词数、字节数</td><td></td></tr></tbody></table><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# cat /root/aaa sc de h中国 g h[root@localhost ~]# wc /root/aa 3  8 22 /root/aa</code></pre><p>(2)统计/root目录下有多少个子目录和文件</p><pre class=" language-Linux"><code class="language-Linux">[root@localhost ~]# ls /root|wc -l20</code></pre><pre class=" language-Linux"><code class="language-Linux">cd 切换目录时要注意的几点" ~ "表示为home directory（家目录或者叫用户目录）的意思 " . "  表示目前所在的目录 " .. " 表示目前目录位置的上一层目录。实例cd    进入用户主目录；cd ~  进入用户主目录；cd -  返回进入此目录之前所在的目录；cd ..  返回上级目录（若当前目录为“/“，则执行完后还在“/"；".."为上级目录的意思）；cd ../..  返回上两级目录；cd !$  把上个命令的参数作为cd参数使用。pwd 显示用户当前工作目录pwd（选项）pwd是用来显示用户当前的工作路径的 ，他是以绝对路径的形式呈现的</code></pre><h5 id="4-体会绝对路径与相对路径的不同。"><a href="#4-体会绝对路径与相对路径的不同。" class="headerlink" title="4.体会绝对路径与相对路径的不同。"></a>4.体会绝对路径与相对路径的不同。</h5><blockquote><p>相对路径是相对于程序当前所在的目录，当前目录随着程序的执行不断地发生变化。<br>但是，绝对路径是相对于根路径/的，根路径是恒定不变的。作为一个工科生，对标准性和灵活性的关系应该比较清楚。<br>绝对路径虽然有失灵活，但是比较安全，你不必在意当前所处的目录，定位任何文件或者目录都从根路径开始。<br>相对路径虽然灵活，但是不大安全，很可能遗漏了或者混淆了当前所处目录，造成出错。<br>因此，平时个人随意地操作，可以使用相对路径，但是软件安装目录必须保证正确，绝对路径是唯一的明智选择。</p></blockquote><p>#####5.试着举个例子，说明绝对路径与相对路径的不同用法。<br>如果你现在在peng目录下：</p><pre class=" language-linux"><code class="language-linux">[root@localhost peng]# pwd/lives/human/man/peng你想从当前peng目录跳转到bo目录下，你怎么做？如果采用绝对路径：[root@localhost peng]# cd  /lives/human/man/bo/[root@localhost bo]#如果采用相对路径：[root@localhost peng]# cd ../bo/[root@localhost bo]#</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux系统安装实验</title>
      <link href="/2021/09/12/linux-xi-tong-an-zhuang-shi-yan/"/>
      <url>/2021/09/12/linux-xi-tong-an-zhuang-shi-yan/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="在虚拟机中安装linux系统"><a href="#在虚拟机中安装linux系统" class="headerlink" title="在虚拟机中安装linux系统"></a>在虚拟机中安装linux系统</h4><p>实验目的：<br>   熟练掌握linux7系统的安装过程</p><h4 id="实验要求："><a href="#实验要求：" class="headerlink" title="实验要求："></a>实验要求：</h4><blockquote><p>1．    掌握虚拟机软件VM的安装使用<br>2．    在vm中安装一个自动分区的最小化系统的linua<br>3．    在vm中安装一个自定义分区的带GUI的服务器系统，比较GNOME与KDE桌面<br>4．    虚拟控制台的切换，startx命令<br>5．    练习开机系统引导为图形界面还是字符终端的命令<br>6．    补充任务:. 比较linux安装与windows server安装的不同点。要求200字。</p></blockquote><blockquote><ol><li>启动vm，创建虚拟机，使用典型配置，选稍后安装操作系统，在客户机操作系统中选择linux，版本选 redhat enterprise linux 7,设置虚拟机存储的位置，最大磁盘大小至少为20G。</li><li>在该虚拟机的硬件设备中 选择使用 iso镜像。并指定redhat7 系统的iso镜像的位置。</li><li>开启刚才创建的虚拟机。进入安装界面。按照课本所示步骤完成整个安装过程。有以下几个需要注意的地方：<br>a)    分区 注意自动分区，自定义分区两种情况都要尝试。<br>b)    软件组选择，<br>装一个带GUI的服务器<br>再装一个最小安装。<br>注意，要选择安装至少一种桌面gnome或kde。否则将来无法进入图形界面。这里我们要求大家两种桌面都安装.装完要看看二者不同.分别抓图</li></ol></blockquote><h4 id="实验内容及步骤"><a href="#实验内容及步骤" class="headerlink" title="实验内容及步骤"></a>实验内容及步骤</h4><p><code>一、</code>    准备工作首先下载虚拟机VMware Workstation Pro和linux操作系统镜像文件rhel-server-7.2-x86_64-dvd.iOS<br><code>二、</code>    然后安装VMware Workstation Pro如图所示<br><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121021708.png"></p><p><code>三、</code>  点击创建虚拟机选择自定义（高级）安装——》点击下一步</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121026007.png"></p><p><code>四、</code> 选择硬件的兼容性最低可选择12版有更高版本可以选择15等根据情况可是当选择</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121027610.png"></p><p><code>五、</code>选择安装程序光盘映像文件路径点击稍后安装————》点击下一步</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121029489.png"></p><p><code>六、</code>选择linux选择版本————》linux 7 64 位——》点击下一步</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121029227.png"></p><p><code>七、</code>更改虚拟机名称，选择安装路径————》点击点击下一步</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121034962.png"></p><p><code>八、</code>默认点击下一步</p><p><img src="D:\blog\myblog\source_posts\linux系统安装实验.assets\image-20210912103538581.png" alt="image-20210912103538581"></p><p>`九、可更改虚拟机内存默认20G——》个根据个情况设置内存大小</p><p><img src="D:\blog\myblog\source_posts\linux系统安装实验.assets\image-20210912103606904.png" alt="image-20210912103606904"></p><p><code>十、</code>默认是网络地址转换————》点击使用桥接网络，客户机的操作系统可以直接访问外部以太网的权限</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121036767.png"></p><p><code>十一、</code> 默认使用推荐————）》点击下一步</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121037999.png"></p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121037810.png"></p><p><code>十二、</code> 创建新虚拟机磁盘————》点击下一步</p><p><img src="D:\blog\myblog\source_posts\linux系统安装实验.assets\image-20210912103802566.png" alt="image-20210912103802566">、</p><p><code>十三、</code>最大磁盘大小默认20G，可适当调整大小。根据个人情况调整——》下一步</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121038266.png"></p><p><code>十四、</code>更改磁盘文件名 ——》点击下一步</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121039220.png"></p><p><code>十五、</code> 点击自定义硬件</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121043731.png"></p><p><code>十六、</code> 点击自定义硬件之后如图所示。选择CD/DVD在右侧选择使用IOS映像文件浏览文件路径选择映像文件</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121051784.png"></p><p><code>十七、</code>点击开启虚拟机进入虚拟机</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121051737.png"></p><p><code>十八、</code>初始化界面</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121052821.png"></p><p><code>十九、</code> 进入语言选择区，选择适合的语言。在此我选择的是中文</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121052525.png"></p><p><code>二十、</code>点击软件选择——》选择带GUI的服务器 ，也可以先择最小安装。</p><p>最小安装纯终端 代码页面，而GUI 是图形界面类似于win10界面图标</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121052705.png"></p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121052097.png"></p><p><code>二十一、</code>点击安装 目录位置选择我要配置分区点击完整 ，选择标准分区，对磁盘如图四所示进行分区，点击完成。再弹出框中点击接受更改。</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121053283.png"></p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121053148.png"></p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121053933.png"></p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121053816.png"></p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121053493.png"></p><p><code>二十二、</code>点击网络和 主机名对以太网进行配置——》点击界面上的配置</p><p> 1、在常规中勾选第一项 2、在IPV4中添加IP地址，子网掩码，默认网关和DNS。IPV6第一项选择忽略。</p><p>用打开cmd使用dos命令查找IP地址、DNS等点击保存显示已连接</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121054970.png"></p><p><img src="D:\blog\myblog\source_posts\linux系统安装实验.assets\image-20210912105419471.png" alt="image-20210912105419471"></p><p><img src="D:\blog\myblog\source_posts\linux系统安装实验.assets\image-20210912105424501.png" alt="image-20210912105424501"></p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121054588.png"></p><p><code>二十三、</code>完成配置——》点击开始安装</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121055429.png"></p><p><code>二十四、</code>一、  1、点击root添加root密码2、点击创建用户添加用户和密码</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121055469.png"></p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121055607.png"></p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121056159.png"></p><p><code>二十五、</code>一、  1、点击root添加root密码2、点击创建用户添加用户和密码</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121056922.png"></p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121056245.png"></p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121056765.png"></p><p><code>二十六、</code>一、  选择语言打开Linux如下图所示</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121056689.png"></p><p><code>二十七、</code>在vm中安装一个自定义分区的带GUI的服务器系统，比较GNOME与KDE桌面1、点击注销登录root2、点击登录旁边的齿轮状图标选择KDE，输入密码后登录比较GNOME与KDE桌面相比较，前者</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121058862.png"></p><h4 id="1、比较GNOME与KDE桌面"><a href="#1、比较GNOME与KDE桌面" class="headerlink" title="1、比较GNOME与KDE桌面"></a>1、比较GNOME与KDE桌面</h4><p>​        GNOME 正在它的外观中体现它的设计理念，即为用户提供一个直观和易用的控制面板。你可能认为那并不是什么大事，但是，在我看来，它确实是我认为值得称赞并且有必要被提及的方面。KDE 给它的用户提供了更多的传统桌面使用体验，并通过提供相似的启动器和一种更加类似的获取软件的方式的能力来迎合来自 Windows 的用户。</p><h4 id="2、比较linux安装与windows-server安装的不同点"><a href="#2、比较linux安装与windows-server安装的不同点" class="headerlink" title="2、比较linux安装与windows server安装的不同点"></a>2、比较linux安装与windows server安装的不同点</h4><p>​       首先,平均故障时间少,只要配置和使用得当,linux的平均故障(就是需要关机或者重启)的时间为一年多,每年重启维护一次不算过分吧?windows能做到一年只重启一次么?</p><p>​       其次,<a href="https://baike.sogou.com/v7854576.htm?ch=ww.wap.chain.baike">类unix</a>从文件系统起就有严谨的安全机制,最简单的例子,windows下你把任何<a href="https://baike.sogou.com/v190718.htm?ch=ww.wap.chain.baike">文件扩展名</a>改为exe就具有可执行权限,linux里需要用chmod加执行位的,没有执行位即使这个文件是可执行的,也无权获得执行需要的系统资源,这就是linux为什么不容易中病毒.当然,也有黑客通过修改系统已存在的脚本以达到执行破坏的目的,但是这种破坏范围是相当小的,因为所有脚本都有其执行者,而执行者具有的权限即该脚本具有的权限,脚本不能逾越这条限制,而正常运行的server很少会有以<a href="https://baike.sogou.com/v10507430.htm?ch=ww.wap.chain.baike">超级用户</a>身份运行的脚本,普通用户身份运行的脚本根本不能搞多大破坏,文件系统上大部分文件的所有者都是超级用户,普通用户的身份是不能改写的.</p><p>​       再说说linux对内存的管理,linux可以在设备不使用时自动从内存卸载该设备的驱动程序以节省内存使用量,windows能么?linux完全可以不装图形,所有的服务与应用都通过shell配置与启动,windows少了图形啥也不是,它的命令行没那么强大的功能.</p><h4 id="4、虚拟控制台的切换，startx命令"><a href="#4、虚拟控制台的切换，startx命令" class="headerlink" title="4、虚拟控制台的切换，startx命令"></a>4、虚拟控制台的切换，startx命令</h4><p>​       服务器系统通常只有虚拟控制台 •如果图形控制台不活动，则可以手动启动 • X Server 必须由系统管理员预先配置 •登录虚拟控制台并运行startx •通过按 Ctrl-Alt-F[1-6] 组合键在虚拟控制台之间切换 •通过按 Ctrl-Alt-F7 组合键访问图形控制台 通过虚拟控制台，即便不使用 X Window 系统，用户也可以多次登录。虚拟控制台可以提供对系统的全屏、非图形访问。通过按 Ctrl-Alt-F1 到 Ctrl-Alt-F6 组合键，可以访问虚拟控制台。</p><p> 5、练习开机系统引导为图形界面还是字符终端的命令</p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121100352.png"></p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121100343.png"></p><p>6、终端界面练习</p><p>（1）虚拟机控制台：1、字符界面：Alt+Fn；2、图形界面：Ctlrl+Alt+Fn（终端命令startx）</p><p>（2)    注销：logout或Ctrl+D</p><p>（3)    显示pwd命令的man手册</p><p> <img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121100139.png"></p><p>（4)    使用——help选项查看mkdir命令的帮助信息</p><p> <img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121100973.png"></p><p>（5)    Shell基础：显示当前登录linux系统用户为root</p><p> <img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202109121101593.png"></p><p>（6)    Vi编辑器的使用输入</p><blockquote><p>1、#：w保存文件</p><p>2、#：q退出vi编辑器</p><p>3、#：q！强行退出</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Servlet</title>
      <link href="/2021/08/16/servlet/"/>
      <url>/2021/08/16/servlet/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="JSP-Chapter-05-：Servlet"><a href="#JSP-Chapter-05-：Servlet" class="headerlink" title="JSP Chapter 05 ：Servlet"></a>JSP Chapter 05 ：Servlet</h2><hr><ul><li>jsp页面翻译成的java文件就是servlet</li><li>servlet用来处理客户端发送到tomcat容器的请求，返回响应</li><li>对于那些完全用于控制而不会向客户端展示任何信息的jsp页面，适合直接使用servlet</li></ul><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/202108161523583.png"></p><h3 id="第一招-使用Servlet1"><a href="#第一招-使用Servlet1" class="headerlink" title="第一招:使用Servlet1"></a>第一招:使用<code>Servlet1</code></h3><p>1、新建一个类，继承<code>HttpServlet</code></p><p>2、重写<code>doGet</code>和<code>doPost</code>方法，不要调用父类原实现</p><p>3、<code>web. xml</code>中注册<code>servlet</code></p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>mys<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--名字--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>com.demo.servlet.Myservlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--位置--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>mys<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--访问路径--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/my.do<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span></code></pre><blockquote><p>当get请求访问<code>my.do</code>时，会使用<code>doGet()</code>处理; <code>post</code>请求访问<code>my.d</code>时，会使用<code>doPost()</code>处理；</p><p>使用<code>URl</code>提交<code>doGet()</code>处理; Web网站提交<code>doPost()</code>处理；</p></blockquote><h3 id="第二招-Servlet的生命周期"><a href="#第二招-Servlet的生命周期" class="headerlink" title="第二招: Servlet的生命周期"></a>第二招: Servlet的生命周期</h3><p>1、解析请求，创建<code>Servlet</code>实例</p><p>2、初始化<code>Servlet</code>，调用<code>init()</code>方法</p><p>3、每次被请求，都调用一次<code>service()</code>方法，根据请求类型转发到<code>doGet()</code> 或<code>doPost()</code></p><p>4、当<code>tomcat</code>停止服务后,调用<code>destroy()</code>方法进行销毁</p><h3 id="第三招：设置参数"><a href="#第三招：设置参数" class="headerlink" title="第三招：设置参数"></a>第三招：设置参数</h3><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--全局参数，所有Servlet都可用--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>globalPar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>Hello Servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>myServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>com.demo.servlet.Myservlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--仅限于在特定Servlet中使用--></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">></span></span>pageSize<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">></span></span>10<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>myServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/hr.do<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span></code></pre><pre class=" language-java"><code class="language-java">String global<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getInitParameter</span><span class="token punctuation">(</span><span class="token string">"globalPar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取全局变量</span>String local<span class="token operator">=</span><span class="token function">getInitParameter</span><span class="token punctuation">(</span><span class="token string">"pageDize"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取局部参数     </span></code></pre><h3 id="第四招：在Servlet中网客户端发送js弹窗提示"><a href="#第四招：在Servlet中网客户端发送js弹窗提示" class="headerlink" title="第四招：在Servlet中网客户端发送js弹窗提示"></a>第四招：在<code>Servlet</code>中网客户端发送js弹窗提示</h3><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//向浏览器发送相应信息，out对象：专门一个往浏览器写响应数据工具</span>resp<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置数据传送到客户时的编码</span>resp<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html; charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//告诉浏览器以UTF-8解析</span>PrintWriter out <span class="token operator">=</span> resp<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"&lt;script type=\"text/javascript\">"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"alter(\"添加成功\")"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"location.href\"list.jsp\""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"&lt;/script>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre><code>//override(重写):子类继承父类，会把父类很多方法都继承过来。不直接用可以重写一遍即覆盖//overload(重载):统一各类里面有有两个方法名字一样，参数不一样（参数的个数、类型、数据不一样）</code></pre>]]></content>
      
      
      <categories>
          
          <category> Servlet </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Servlet </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sakuraplus主题教程</title>
      <link href="/2021/07/31/sakuraplus-zhu-ti-jiao-cheng/"/>
      <url>/2021/07/31/sakuraplus-zhu-ti-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hexo-theme-sakuraplus"><a href="#hexo-theme-sakuraplus" class="headerlink" title="hexo-theme-sakuraplus"></a>hexo-theme-sakuraplus</h1><hr><p> <span class="github-emoji"><span>1⃣</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/0031-20e3.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>  <span class="github-emoji"><span>🔜</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f51c.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 看一看瞧一瞧，再决定做不做</p><ul><li><p>示例站：<a href="https://cungudafa.top/">cungudafa.top</a>   </p><p>  现在看这个：<a href="https://cungudafa.js.org/">cungudafa.js.org</a></p></li><li><p>预览视频： <a href="https://www.bilibili.com/video/BV1C7411N762">bilibili</a>  </p></li><li><p>源码地址：<a href="https://gitee.com/cungudafa/hexo-theme-sakuraplus">hexo-theme-sakuraplus</a></p></li></ul><blockquote><p>Hexo主题Sakura由<a href="https://www.hojun.cn/">Hojun大佬</a>修改自WordPress主题<a href="https://github.com/mashirozx/Sakura/">Sakura</a>，感谢原作者<a href="https://2heng.xin/">Mashiro</a></p></blockquote><p>由于sakura最近没有再更新了，我对之前的<a href="https://blog.csdn.net/cungudafa/category_9714183.html">魔改笔记</a>进行了调整和整理，开源<a href="https://gitee.com/cungudafa/hexo-theme-sakuraplus">hexo-theme-sakuraplus</a>版本。</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及自动切换 <code>Banner</code> 图片</li><li>背景壁纸切换（增加）</li><li>时间轴式的归档页</li><li>支持pjax刷新</li><li>友情链接页面 （增加了config可选设置提示语和本网站信息）</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持文章置顶和文章打赏（增加了提示语）</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>缓加载动画</li><li>增加了相册页面（一个快速查找文章的接口，后面可能会美化）</li><li>增加了豆瓣读书、豆瓣电影页面</li><li>增加了<a href="https://artitalk.js.org/">个性说说在线发布</a>页面（增加了）</li><li>优化了文章底部作者信息不填写时显示为空的问题</li><li>优化了<a href="https://valine.js.org/">Valine</a>评论模块（最新可定制表情等）</li><li>可设置复制文章内容时追加版权信息（可设置是否追加版权信息）</li><li>增加了 <a href="http://www.daovoice.io/">DaoVoice</a>在线聊天功能</li><li>增加了可设置代码块相关（是否显示名称、是否可复制，是否可收缩，是否可折行）</li><li>增加了ICP备案信息显示（可选）</li><li>增加了标签云页面（如果需要更多功能，后面可补充）</li><li>增加了看板娘动画</li><li>增加了可设置首页音乐提示</li><li>增加了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能（需要安装hexo-wordcount）</li><li>优化了<a href="https://www.bootcdn.cn/botui/">自我介绍</a>页面</li><li>增加了自定义logo的接口</li><li>增加了fancybox查看大图功能（可选）</li><li>增加了外链转知乎卡片形式</li><li>增加了谷歌分析和<a href="https://tongji.baidu.com/">百度分析</a></li><li>增加了<a href="https://widgetpack.com/">widgetpack星星评分</a></li><li>多种背景和点击动画（可选设置）</li><li>优化css和js在config可配置</li><li>优化文章图片阴影显示和引用样式（阅读butter）</li><li>增加播放器隐藏选项</li><li>新增了分析页面（echarts图）</li><li>归档页新增<a href="https://echarts.apache.org/zh/option.html#calendar">文章日历</a>（echarts图）</li><li>新增文章描述为空时，自动获取文章前50字</li><li>新增404页面</li><li>新增左侧悬浮框（回到顶部，打开左侧目录，跳转评论，黑夜模式，背景音乐播放<code>在config设置</code>）</li></ul><hr><p> <span class="github-emoji"><span>2⃣</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/0032-20e3.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>   <span class="github-emoji"><span>⏩</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/23e9.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 使用方法</p><h2 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h2><p>当你看到这里的时候，应该已经有一个自己的 <a href="https://hexo.io/zh-cn/">Hexo</a> 博客了。如果还没有的话，不妨使用 Hexo 和 <a href="https://www.appinn.com/markdown/">Markdown</a> 来写博客和文章。</p><p>点击 <a href="https://gitee.com/cungudafa/hexo-theme-sakuraplus/repository/archive/master.zip">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-sakuraplus</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>Git clone</code> 命令来下载:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://gitee.com/cungudafa/hexo-theme-sakuraplus.git</code></pre><h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2.配置"></a>2.配置</h2><h3 id="2-1切换主题"><a href="#2-1切换主题" class="headerlink" title="2.1切换主题"></a>2.1切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-sakuraplus</code></p><p> <strong><code>_config.yml</code> 文件的其它修改建议</strong> </p><ul><li><p>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</p></li><li><p>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</p></li><li><p>建议修改permalink，可修改为<a href="https://blog.csdn.net/cungudafa/article/details/104312892">短链接</a>。<br>安装插件：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-abbrlink --save</code></pre><p>  主配置文件修改和添加：</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">#permalink: :year/:month/:day/:title/ #主题默认文章链接配置</span>permalink: post/:abbrlink.html <span class="token comment" spellcheck="true">#修改</span><span class="token comment" spellcheck="true">## 启用算法生成不重复文件编号，添加</span>abbrlink:      alg: crc16   <span class="token comment" spellcheck="true">#算法： crc16(default) and crc32</span>      rep: hex   <span class="token comment" spellcheck="true">#进制： dec(default) and hex: dec #输出进制：十进制和十六进制，默认为10进制。丨dec为十进制，hex为十六进制</span></code></pre></li></ul><h3 id="2-2新建分类-categories-页"><a href="#2-2新建分类-categories-页" class="headerlink" title="2.2新建分类 categories 页"></a>2.2新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 分类<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-04-21 00:00:00</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">photos</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/cungudafa/cdn/img/banner/donate.jpg<span class="token key atrule">comments</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span></code></pre><h3 id="2-3新建标签-tags-页"><a href="#2-3新建标签-tags-页" class="headerlink" title="2.3新建标签 tags 页"></a>2.3新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">type</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-02-13 20:24:16</span><span class="token key atrule">photos</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/cungudafa/cdn/img/banner/donate.jpg<span class="token key atrule">comments</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token punctuation">---</span></code></pre><h3 id="2-4新建关于我-about-页"><a href="#2-4新建关于我-about-页" class="headerlink" title="2.4新建关于我 about 页"></a>2.4新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"about"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><blockquote><p><code>Tips:</code> 这里用了<a href="https://www.bootcdn.cn/botui/">botui</a>，还需要单独配置（/js/third-party/botui.js）</p></blockquote><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> about<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-2-12 22:14:36</span><span class="token key atrule">keywords</span><span class="token punctuation">:</span> 关于<span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token key atrule">comments</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">photos</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/cungudafa/cdn/img/banner/about.jpg<span class="token punctuation">---</span>&lt;<span class="token tag">!--</span> https<span class="token punctuation">:</span>//www.bootcdn.cn/botui/ <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">></span>&lt;link href="https<span class="token punctuation">:</span>//cdn.bootcss.com/botui/0.3.9/botui<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>default.css" rel="stylesheet"<span class="token punctuation">></span>&lt;link href="https<span class="token punctuation">:</span>//cdn.bootcss.com/botui/0.3.9/botui.min.css" rel="stylesheet"<span class="token punctuation">></span>&lt;<span class="token tag">!--</span> 因为vue和botui更新导至bug<span class="token punctuation">,</span>现将对话移至js下的botui中配置 <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">></span>&lt;div class="entry<span class="token punctuation">-</span>content"<span class="token punctuation">></span>  &lt;div class="moe<span class="token punctuation">-</span>cungudafa" style="text<span class="token punctuation">-</span>align<span class="token punctuation">:</span>center; font<span class="token punctuation">-</span><span class="token key atrule">size</span><span class="token punctuation">:</span> 50px; margin<span class="token punctuation">-</span><span class="token key atrule">bottom</span><span class="token punctuation">:</span> 20px;"<span class="token punctuation">></span>姑的小屋&lt;/div<span class="token punctuation">></span>  &lt;div id="hello<span class="token punctuation">-</span>cungudafa" class="popcontainer" style="min<span class="token punctuation">-</span><span class="token key atrule">height</span><span class="token punctuation">:</span> 300px; padding<span class="token punctuation">:</span> 2px 6px 4px; background<span class="token punctuation">-</span><span class="token key atrule">color</span><span class="token punctuation">:</span> rgb(36<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> 255); border<span class="token punctuation">-</span><span class="token key atrule">radius</span><span class="token punctuation">:</span> 10px;"<span class="token punctuation">></span>    &lt;center<span class="token punctuation">></span>    &lt;p<span class="token punctuation">></span>    &lt;/p<span class="token punctuation">></span>    &lt;h4<span class="token punctuation">></span>    与<span class="token important">&amp;nbsp</span>;&lt;ruby<span class="token punctuation">></span>    cungduafa<span class="token important">&amp;nbsp</span>;&lt;rp<span class="token punctuation">></span>    （&lt;/rp<span class="token punctuation">></span>    &lt;rt<span class="token punctuation">></span>    真（ま）白（しろ）&lt;/rt<span class="token punctuation">></span>    &lt;rp<span class="token punctuation">></span>    ）&lt;/rp<span class="token punctuation">></span>    &lt;/ruby<span class="token punctuation">></span>    对话中<span class="token punctuation">...</span>&lt;/h4<span class="token punctuation">></span>    &lt;p<span class="token punctuation">></span>    &lt;/p<span class="token punctuation">></span>    &lt;/center<span class="token punctuation">></span>    &lt;bot<span class="token punctuation">-</span>ui<span class="token punctuation">></span>  &lt;/bot<span class="token punctuation">-</span>ui<span class="token punctuation">></span>&lt;/div<span class="token punctuation">></span>&lt;/div<span class="token punctuation">></span>&lt;script src="/js/botui.js"<span class="token punctuation">></span>&lt;/script<span class="token punctuation">></span>&lt;script<span class="token punctuation">></span> bot_ui_ini()&lt;/script<span class="token punctuation">></span></code></pre><h3 id="2-5新建留言板-comment-页（可选的）"><a href="#2-5新建留言板-comment-页（可选的）" class="headerlink" title="2.5新建留言板 comment 页（可选的）"></a>2.5新建留言板 comment 页（可选的）</h3><p><code>conmment</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>conmment/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"conmment"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 留言板<span class="token key atrule">type</span><span class="token punctuation">:</span> comment<span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"comment"</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-04-21 20:17:58</span><span class="token key atrule">photos</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//gitee.com/cungudafa/source/raw/master/img/bg/hyo/3.jpg<span class="token punctuation">---</span>&lt;h2 align="center"<span class="token punctuation">></span>有什么想说的<span class="token punctuation">?</span>&lt;/h2<span class="token punctuation">></span>&lt;h2 align="center"<span class="token punctuation">></span>有什么想问的<span class="token punctuation">?</span>&lt;/h2<span class="token punctuation">></span></code></pre><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。</p></blockquote><h3 id="2-6新建友情链接-links-页（可选的）"><a href="#2-6新建友情链接-links-页（可选的）" class="headerlink" title="2.6新建友情链接 links 页（可选的）"></a>2.6新建友情链接 links 页（可选的）</h3><p><code>links</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>links/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"links"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/links/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> links<span class="token key atrule">title</span><span class="token punctuation">:</span> links<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-02-13 23:11:06</span><span class="token key atrule">keywords</span><span class="token punctuation">:</span> 友人帐<span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token key atrule">comments</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">photos</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/cungudafa/img/images/pic01.jpg<span class="token key atrule">links</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token key atrule">group</span><span class="token punctuation">:</span> 多站快速门    <span class="token key atrule">desc</span><span class="token punctuation">:</span>     <span class="token key atrule">items</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//blog.csdn.net/cungudafa      <span class="token key atrule">img</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/cungudafa/cdn/img/custom/cungudafa.jpg      <span class="token key atrule">name</span><span class="token punctuation">:</span> CSDN      <span class="token key atrule">desc</span><span class="token punctuation">:</span> 我的技术栈  <span class="token punctuation">-</span> <span class="token key atrule">group</span><span class="token punctuation">:</span> 友情链接    <span class="token key atrule">desc</span><span class="token punctuation">:</span>     <span class="token key atrule">items</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//blog.csdn.net/cungudafa      <span class="token key atrule">img</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/cungudafa/cdn/img/custom/cungudafa.jpg      <span class="token key atrule">name</span><span class="token punctuation">:</span> CSDN      <span class="token key atrule">desc</span><span class="token punctuation">:</span> 我的技术栈    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 总站导航      <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cungudafa.js.org/      <span class="token key atrule">img</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cungudafa.top/img/avatar.png      <span class="token key atrule">desc</span><span class="token punctuation">:</span> cungudafa.js.org<span class="token punctuation">---</span></code></pre><blockquote><p><code>Tips：</code>注意前面的空格哦，很重要！</p></blockquote><p>增加了友链要求提示项<code>tips</code>（支持html标签格式），在主题配置文件，<code>name、desc、url、img</code>可以直接写入你的网站信息。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 友链页信息,tips支持html语言</span><span class="token key atrule">mylinkinfo</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">tips</span><span class="token punctuation">:</span> '&lt;p<span class="token punctuation">></span>&lt;strong<span class="token punctuation">></span>Tips<span class="token punctuation">:</span>&lt;/strong<span class="token punctuation">></span>网站不要求https强制加锁，但头像图片尽量用安全链接哦！&lt;/p<span class="token punctuation">></span> &lt;p style="font<span class="token punctuation">-</span><span class="token key atrule">size</span><span class="token punctuation">:</span> <span class="token key atrule">13px;color</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#ff9999;"> 1. 请先 &lt;font color=#ff1234 size=5>添加本站链接&lt;/font>，在本站留言，待站长审核通过即添加友链。&lt;br>2. 拒绝广告站，技术博客优先~&lt;br>3. 对于取消本站链接或死链，站长会定期移除。&lt;/p>'</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> cungudafa  <span class="token key atrule">desc</span><span class="token punctuation">:</span> 一个学习记录者  <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cungudafa.top  <span class="token key atrule">img</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/cungudafa/cdn/img/custom/cungudafa.jpg</code></pre><h3 id="3-菜单导航配置"><a href="#3-菜单导航配置" class="headerlink" title="3.菜单导航配置"></a>3.菜单导航配置</h3><p> <strong>配置基本菜单导航的名称、路径url和图标icon.</strong> </p><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)<br>2.图标icon 可以在<a href="http://www.fontawesome.com.cn/faicons/">Font Awesome v4</a> 中查找   </p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">menus</span><span class="token punctuation">:</span>  <span class="token key atrule">首页</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>fort<span class="token punctuation">-</span>awesome faa<span class="token punctuation">-</span>shake <span class="token punctuation">}</span>  <span class="token key atrule">归档</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /archives<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>archive faa<span class="token punctuation">-</span>shake<span class="token punctuation">,</span> <span class="token key atrule">submenus</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>     <span class="token key atrule">统计</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">path</span><span class="token punctuation">:</span> /analytics/ <span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>line<span class="token punctuation">-</span>chart <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token key atrule">标签</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">path</span><span class="token punctuation">:</span> /tags<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>tags <span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token key atrule">技术</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">path</span><span class="token punctuation">:</span> /categories/技术/<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>code <span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token key atrule">生活</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">path</span><span class="token punctuation">:</span> /categories/生活/<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>file<span class="token punctuation">-</span>text<span class="token punctuation">-</span>o <span class="token punctuation">}</span> <span class="token comment" spellcheck="true">#, </span>    <span class="token comment" spellcheck="true">#资源: {path: /categories/资源/, fa: fa-cloud-download }, </span>    <span class="token comment" spellcheck="true">#随想: {path: /categories/随想/, fa: fa-commenting-o },</span>    <span class="token comment" spellcheck="true">#转载: {path: /categories/转载/, fa: fa-book }</span>  <span class="token punctuation">}</span> <span class="token punctuation">}</span>  <span class="token key atrule">清单</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> javascript<span class="token punctuation">:</span>;<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>list<span class="token punctuation">-</span>ul faa<span class="token punctuation">-</span>vertical<span class="token punctuation">,</span> <span class="token key atrule">submenus</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>     <span class="token key atrule">说说</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">path</span><span class="token punctuation">:</span> /artitalk/<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>commenting<span class="token punctuation">-</span>o fa<span class="token punctuation">-</span>commenting <span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token key atrule">相册</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">path</span><span class="token punctuation">:</span> /photos/<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>photo <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token key atrule">悦读</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">path</span><span class="token punctuation">:</span> /books/<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>book <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token key atrule">追剧</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">path</span><span class="token punctuation">:</span> /movies/<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>film faa<span class="token punctuation">-</span>vertical <span class="token punctuation">}</span>  <span class="token punctuation">}</span> <span class="token punctuation">}</span>  <span class="token key atrule">留言板</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /comment/<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>pencil<span class="token punctuation">-</span>square<span class="token punctuation">-</span>o faa<span class="token punctuation">-</span>tada <span class="token punctuation">}</span>  <span class="token key atrule">友人帐</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /links/<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>link faa<span class="token punctuation">-</span>shake <span class="token punctuation">}</span>  <span class="token key atrule">赞赏</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /donate/<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>heart faa<span class="token punctuation">-</span>pulse <span class="token punctuation">}</span>  <span class="token key atrule">关于</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>leaf faa<span class="token punctuation">-</span>wrench <span class="token punctuation">,</span> <span class="token key atrule">submenus</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>     <span class="token key atrule">我？</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">path</span><span class="token punctuation">:</span> /about/<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>meetup<span class="token punctuation">}</span><span class="token punctuation">,</span>     <span class="token key atrule">主题</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">path</span><span class="token punctuation">:</span> /theme<span class="token punctuation">-</span>sakura/<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> iconfont icon<span class="token punctuation">-</span>sakura <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># Lab: {path: /lab/, fa: fa-cogs },</span>    <span class="token comment" spellcheck="true"># valine: {path: /valine/, fa: fa-cogs }</span>  <span class="token punctuation">}</span> <span class="token punctuation">}</span>  <span class="token key atrule">项目</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /client/<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>android faa<span class="token punctuation">-</span>vertical <span class="token punctuation">}</span>  <span class="token key atrule">RSS</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token key atrule">path</span><span class="token punctuation">:</span> /atom.xml<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>rss faa<span class="token punctuation">-</span>pulse <span class="token punctuation">}</span><span class="token comment" spellcheck="true">#social  url, img PC端配置</span><span class="token key atrule">social</span><span class="token punctuation">:</span>  <span class="token key atrule">gitee</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//gitee.com/cungudafa<span class="token punctuation">,</span> <span class="token key atrule">img</span><span class="token punctuation">:</span> /img/social/gitee.png<span class="token punctuation">}</span>  <span class="token key atrule">github</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//github.com/cungudafa<span class="token punctuation">,</span> <span class="token key atrule">img</span><span class="token punctuation">:</span> /img/social/github.png<span class="token punctuation">}</span>  <span class="token key atrule">csdn</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//blog.csdn.net/cungudafa<span class="token punctuation">,</span> <span class="token key atrule">img</span><span class="token punctuation">:</span> /img/social/csdn.png<span class="token punctuation">}</span>  <span class="token key atrule">zhihu</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//www.zhihu.com/people/cungudafa<span class="token punctuation">,</span> <span class="token key atrule">img</span><span class="token punctuation">:</span> /img/social/zhihu.png<span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">#jianshu: {url: /https://www.jianshu.com/u/9b726a534140, img: /img/social/jianshu.png}</span>  <span class="token comment" spellcheck="true"># sina: {url: http://weibo.com/3829198906/info, img: /img/social/sina.png}</span>  <span class="token key atrule">bilibili</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//space.bilibili.com/430247358<span class="token punctuation">,</span> <span class="token key atrule">img</span><span class="token punctuation">:</span> /img/social/bilibili.png<span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">#wangyiyun: {url: https://music.163.com/#/user/home?id=337394988, img: /img/social/wangyiyun.png}</span>  <span class="token key atrule">wechat</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">url</span><span class="token punctuation">:</span> /<span class="token comment" spellcheck="true">#, qrcode: /img/custom/cungudafa.png, img: /img/social/wechat.png}</span><span class="token comment" spellcheck="true">#social  url, img 移动端配置</span><span class="token key atrule">msocial</span><span class="token punctuation">:</span>  <span class="token key atrule">github</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//github.com/cungudafa<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>github<span class="token punctuation">,</span> <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token number">333</span><span class="token punctuation">}</span>  <span class="token key atrule">weibo</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//weibo.com/3829198906/info<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>weibo<span class="token punctuation">,</span> <span class="token key atrule">color</span><span class="token punctuation">:</span> dd4b39<span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">#qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=2627039020&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe}</span>  <span class="token key atrule">csdn</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//blog.csdn.net/cungudafa<span class="token punctuation">,</span> <span class="token key atrule">fa</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>star<span class="token punctuation">,</span> <span class="token key atrule">color</span><span class="token punctuation">:</span> ff9900<span class="token punctuation">}</span></code></pre><blockquote><p><code>Tips:</code>注意二级菜单和图标的写法</p></blockquote><h3 id="4-代码高亮"><a href="#4-代码高亮" class="headerlink" title="4.代码高亮"></a>4.代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># default false</span>  custom_css<span class="token punctuation">:</span></code></pre><h3 id="5-搜索"><a href="#5-搜索" class="headerlink" title="5.搜索"></a>5.搜索</h3><p>本主题中还使用到了 <a href="https://www.npmjs.com/package/hexo-generator-json-content">hexo-generator-json-content</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-json-content --save</code></pre><h3 id="6-文章字数统计插件（建议安装）"><a href="#6-文章字数统计插件（建议安装）" class="headerlink" title="6.文章字数统计插件（建议安装）"></a>6.文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount</code></pre><h3 id="7-添加emoji表情支持（可选的）"><a href="#7-添加emoji表情支持（可选的）" class="headerlink" title="7.添加emoji表情支持（可选的）"></a>7.添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save</code></pre><p>在 Hexo <strong>根目录</strong>下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span></code></pre><h3 id="8-添加-RSS-订阅支持（可选的）"><a href="#8-添加-RSS-订阅支持（可选的）" class="headerlink" title="8.添加 RSS 订阅支持（可选的）"></a>8.添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save</code></pre><p>在 Hexo <strong>根目录</strong>下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="9-添加-DaoVoice-在线聊天功能（可选的）"><a href="#9-添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="9.添加 DaoVoice 在线聊天功能（可选的）"></a>9.添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Online contact ##在线聊天 https://www.daocloud.io/</span><span class="token key atrule">daovoice</span><span class="token punctuation">:</span>   <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">app_id</span><span class="token punctuation">:</span> f6b2a0b1 <span class="token comment" spellcheck="true">##这里替换成你DaoVoice上的appid</span></code></pre><h3 id="10-在线发布说说页面"><a href="#10-在线发布说说页面" class="headerlink" title="10.在线发布说说页面"></a>10.在线发布说说页面</h3><p>根据官网教程配置<a href="https://artitalk.js.org/">artitalk.js.org</a>，本主题融合了自定义配置背景的功能，具体可以参考<a href="https://cungudafa.blog.csdn.net/article/details/106224223">个性定制教程</a>。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 动态说说页面</span><span class="token comment" spellcheck="true"># You can get your appid and appkey from https://leancloud.cn</span><span class="token comment" spellcheck="true"># more info please open https://artitalk.js.org</span><span class="token key atrule">artitalk</span><span class="token punctuation">:</span>  <span class="token key atrule">appID</span><span class="token punctuation">:</span> CiSXX5nyVSt0RIztkC1oLL9P<span class="token punctuation">-</span>MdYXbMMI  <span class="token key atrule">appKEY</span><span class="token punctuation">:</span> vrfkqkuHou88MuRKfF3OeExc  <span class="token key atrule">per</span><span class="token punctuation">:</span> <span class="token number">7 </span><span class="token comment" spellcheck="true">#每页显示说说的数量</span>  <span class="token key atrule">username</span><span class="token punctuation">:</span> cungudafa <span class="token comment" spellcheck="true"># Leancloud中设置的用户名</span>  <span class="token key atrule">placeholder1</span><span class="token punctuation">:</span> 没有密码，不能评论！ <span class="token comment" spellcheck="true"># 密码框提示语</span>  <span class="token key atrule">lazy</span><span class="token punctuation">:</span> <span class="token number">1 </span><span class="token comment" spellcheck="true"># 加载动画1:加载,0:取消加载</span>  <span class="token key atrule">img</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/cungudafa/cdn/img/custom/cungudafa.jpg <span class="token comment" spellcheck="true">#用户默认头像</span>  <span class="token key atrule">bgimg</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//gitee.com/cungudafa/source/raw/master/img/gif/Sitich/Sitich16.gif <span class="token comment" spellcheck="true"># 输入框小动画</span>  <span class="token comment" spellcheck="true"># 极简黑白主题minimalist、渐变主题gradient、壁纸wallpaper </span>  <span class="token comment" spellcheck="true"># 参考 https://blog.csdn.net/cungudafa/article/details/106224223</span>  <span class="token key atrule">style</span><span class="token punctuation">:</span>     <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true">#个性定制</span>    <span class="token key atrule">wallpaper</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//ae01.alicdn.com/kf/H21b5f6b8496141a1979a33666e1074d9x.jpg <span class="token comment" spellcheck="true">#https://bing.rthe.net/wallpaper  # 壁纸</span>    <span class="token key atrule">color</span><span class="token punctuation">:</span> white   <span class="token comment" spellcheck="true">#字体颜色</span>    <span class="token key atrule">linear_gradient</span><span class="token punctuation">:</span> rgba(255<span class="token punctuation">,</span> <span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> 0.5) 5%<span class="token punctuation">,</span> rgba(0<span class="token punctuation">,</span> <span class="token number">228</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> 0.35) 95% <span class="token comment" spellcheck="true"># 渐变规律颜色+百分比 rgb(109, 208, 242) 15%, rgb(245, 154, 190) 85%</span>    <span class="token key atrule">border_right_color</span><span class="token punctuation">:</span> '<span class="token comment" spellcheck="true">#FFC0BE' #三角颜色</span>    <span class="token key atrule">animation</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true">#true打开动画渐变渲染(壁纸和动画渐变渲染建议只开一个)</span></code></pre><blockquote><p>根据你的爱好修改字体颜色，背景，动画等。</p></blockquote><h3 id="11-修改页脚"><a href="#11-修改页脚" class="headerlink" title="11.修改页脚"></a>11.修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="12-修改打赏的二维码图片"><a href="#12-修改打赏的二维码图片" class="headerlink" title="12.修改打赏的二维码图片"></a>12.修改打赏的二维码图片</h3><p>在主题config里面可以修改路径，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">donate</span><span class="token punctuation">:</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> 谢谢饲主了喵~  <span class="token key atrule">message</span><span class="token punctuation">:</span> 我能想到最浪漫的事，就是我喝奶茶你付钱~  <span class="token key atrule">paypal</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#https://www.paypal.me/hojuncn</span>  <span class="token key atrule">alipay</span><span class="token punctuation">:</span> /img/custom/donate/AliPay.jpg <span class="token comment" spellcheck="true">#大图</span>  <span class="token key atrule">alipayQR</span><span class="token punctuation">:</span> /img/custom/donate/AliPayQR.jpg  <span class="token key atrule">wechat</span><span class="token punctuation">:</span> /img/custom/donate/WeChatPay.png <span class="token comment" spellcheck="true">#大图</span>  <span class="token key atrule">wechatQR</span><span class="token punctuation">:</span> /img/custom/donate/WeChanQR.jpg  <span class="token key atrule">wechatSQ</span><span class="token punctuation">:</span> /img/custom/donate/WeChanSQ.jpg</code></pre><p><code>donates</code> 页是单独的打赏页面（可选），如果在你的博客 <code>source</code> 目录下还没有 <code>donate/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"donate"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/donate/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> donate<span class="token key atrule">title</span><span class="token punctuation">:</span> donate<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-02-13 23:13:05</span><span class="token key atrule">keywords</span><span class="token punctuation">:</span> 谢谢饲主了喵~<span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token key atrule">comments</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">photos</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/cungudafa/cdn/img/banner/donate.jpg<span class="token punctuation">---</span></code></pre><p>在主题文件的 <code>themes\sakura\layout\donate.ejs</code> 文件中，可以增加更多的打赏方式。</p><h3 id="13-配置视频、音乐播放器（可选的）"><a href="#13-配置视频、音乐播放器（可选的）" class="headerlink" title="13.配置视频、音乐播放器（可选的）"></a>13.配置视频、音乐播放器（可选的）</h3><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下</span><span class="token key atrule">movies</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//cdn.jsdelivr.net/gh/honjun/hojun@1.2  <span class="token comment" spellcheck="true"># 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> Unbroken.mp4<span class="token key atrule">aplayer</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true">##媒体播放引擎，移动端会禁止自动播放</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">2660651585</span>  <span class="token key atrule">server</span><span class="token punctuation">:</span> netease  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true">##开启吸底模式，固定到底部</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true">##音频自动播放</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> all  <span class="token comment" spellcheck="true">##音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> random <span class="token comment" spellcheck="true">##音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> auto <span class="token comment" spellcheck="true">##预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7 </span><span class="token comment" spellcheck="true">##默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">mutex</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true">##互斥，阻止多个播放器同时播放</span></code></pre><h3 id="14-评论"><a href="#14-评论" class="headerlink" title="14.评论"></a>14.评论</h3><p>根据官网的配置教程，严格配置：<a href="https://valine.js.org/">valine.js.org</a></p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Valine ##极简留言功能</span><span class="token comment" spellcheck="true"># You can get your appid and appkey from https://leancloud.cn</span><span class="token comment" spellcheck="true"># more info please open https://valine.js.org</span><span class="token key atrule">valine</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true">##打开valine评论功能true</span>  <span class="token key atrule">appId</span><span class="token punctuation">:</span> cBzr9TtJ0xY0s6f3H8bpmB3M<span class="token punctuation">-</span>gzGzoHsz  <span class="token key atrule">appKey</span><span class="token punctuation">:</span> 3opMyv2Vyx3mHa0IWitRGSoi  <span class="token key atrule">notify</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true">#true自带评论mail回复提醒，第三方邮件提醒就设置为false</span>  <span class="token key atrule">verify</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true">#验证码</span>  <span class="token key atrule">visitor</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true">#统计阅读量</span>  <span class="token key atrule">comment_count</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true">#统计评论数</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> monsterid <span class="token comment" spellcheck="true"># Gravatar style : mp/identicon/monsterid/wavatar/retro/hide</span>  <span class="token key atrule">guest_info</span><span class="token punctuation">:</span> nick <span class="token comment" spellcheck="true">#,mail,link # custom comment header</span>  <span class="token key atrule">pageSize</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">palaceholder</span><span class="token punctuation">:</span> 你是我一生只会遇见一次的惊喜 <span class="token comment" spellcheck="true"># Comment Box placeholder</span>  <span class="token key atrule">requiredFields</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'nick'</span><span class="token punctuation">,</span><span class="token string">'mail'</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#设置必填项</span>  <span class="token key atrule">background</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//gitee.com/cungudafa/source/raw/master/img/gif/Sitich/Sitich2.gif</code></pre><h3 id="15-文章分析"><a href="#15-文章分析" class="headerlink" title="15.文章分析"></a>15.文章分析</h3><p>日历页面（在归档页面下方，可选择性开启），文章分析页面（选择性开启，若关闭，请在菜单栏中删除即可）</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Whether to display post-calender in the `archive` page</span><span class="token comment" spellcheck="true"># 设置在归档页面achive中是否显示'文章日历'控件</span><span class="token key atrule">postCalendar</span><span class="token punctuation">:</span> <span class="token boolean important">true </span></code></pre><hr><p> <span class="github-emoji"><span>3⃣</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/0033-20e3.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>  <span class="github-emoji"><span>📢</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e2.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> hexo特性设置及文章撰写</p><h2 id="1-文章-Front-matter-介绍"><a href="#1-文章-Front-matter-介绍" class="headerlink" title="1.文章 Front-matter 介绍"></a>1.文章 Front-matter 介绍</h2><p> <strong>Front-matter 选项详解</strong> </p><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者 ，也可以修改</td></tr><tr><td>authorLink</td><td>无</td><td>链接</td></tr><tr><td>avatar</td><td>无</td><td>头像</td></tr><tr><td>authorAbout</td><td>无</td><td>简介（非文章页设置为一言）</td></tr><tr><td>photos</td><td><code>bg</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>description</td><td>默认取文章前40个字</td><td>一句话描述摘要</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>photos</code> 属性不填写的话，首页会在主题配置文件的bg下，随机选择一张图片，同时进入文章内部不显示顶部图像。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的。</li><li>建议文章标签和文章分类填写上。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><p> <strong>最简示例</strong> </p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-05-20 09:25:00</span><span class="token punctuation">---</span></code></pre><p> <strong>最全示例</strong> </p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 阿里云部署hexo完整教程<span class="token key atrule">author</span><span class="token punctuation">:</span> cungudafa<span class="token key atrule">authorLink</span><span class="token punctuation">:</span> <span class="token string">'https://cungudafa.top'</span><span class="token key atrule">avatar</span><span class="token punctuation">:</span> <span class="token string">'https://cdn.jsdelivr.net/gh/cungudafa/cdn/img/custom/cungudafa.jpg'</span><span class="token key atrule">authorAbout</span><span class="token punctuation">:</span> 姑，一个学习记录者<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> nginx  <span class="token punctuation">-</span> https  <span class="token punctuation">-</span> SSL<span class="token key atrule">categories</span><span class="token punctuation">:</span> 技术<span class="token key atrule">comment</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">photos</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//test.png<span class="token key atrule">description</span><span class="token punctuation">:</span> 描述一句话摘要<span class="token key atrule">abbrlink</span><span class="token punctuation">:</span> ccbf<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-03-02 13:59:10</span><span class="token punctuation">---</span></code></pre><h3 id="2-文章统计"><a href="#2-文章统计" class="headerlink" title="2.文章统计"></a>2.文章统计</h3><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><p>代码块是否可复制、图片大图查看功能、知乎外链样式、文章字数统计等。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Whether to activate the copyright information of the blog and author when copying the post content.</span><span class="token comment" spellcheck="true"># minCharNumber: Approve copyright information by copying at least how many characters.</span><span class="token comment" spellcheck="true"># 是否激活复制文章时追加博客和作者的版权信息.</span><span class="token key atrule">copyright</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">minCharNumber</span><span class="token punctuation">:</span> <span class="token number">120 </span><span class="token comment" spellcheck="true"># 至少复制多少个字符就追加版权信息.</span>  <span class="token key atrule">description</span><span class="token punctuation">:</span> 本文章著作权归作者所有，任何形式的转载都请注明出处。<span class="token comment" spellcheck="true"># 代码块相关</span><span class="token key atrule">code</span><span class="token punctuation">:</span>  <span class="token key atrule">lang</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 代码块是否显示名称</span>  <span class="token key atrule">copy</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 代码块是否可复制</span>  <span class="token key atrule">shrink</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 代码块是否可以收缩</span>  <span class="token key atrule">break</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 代码是否折行</span><span class="token comment" spellcheck="true"># 查看大图</span><span class="token key atrule">fancybox</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token comment" spellcheck="true"># 外链转知乎卡片形式 </span><span class="token key atrule">linkcard</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 是否开启字数统计 (可以在formatton设置no_word_count: true)</span><span class="token comment" spellcheck="true">#不需要使用，直接设置值为false，或注释掉</span><span class="token key atrule">word_count</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token comment" spellcheck="true"># busuanzi(http://busuanzi.ibruce.info/) website statistics</span><span class="token comment" spellcheck="true"># 不蒜子(http://busuanzi.ibruce.info/) 网站统计</span><span class="token key atrule">busuanziStatistics</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">totalTraffic</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 总访问量</span>  <span class="token key atrule">totalNumberOfvisitors</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 总人次</span></code></pre><h3 id="3-五星评分"><a href="#3-五星评分" class="headerlink" title="3.五星评分"></a>3.五星评分</h3><p>需要在 <a href="https://widgetpack.com/">widgetpack.com</a>注册申请，</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># widgetpack 星星评分</span><span class="token comment" spellcheck="true"># To get your ID visit https://widgetpack.com</span><span class="token key atrule">widgetpack</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true">#false</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">23889 </span><span class="token comment" spellcheck="true">#&lt;app_id></span>  <span class="token key atrule">color</span><span class="token punctuation">:</span> fc6423</code></pre><hr><p> <span class="github-emoji"><span>🌺</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f33a.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 其他花里胡哨</p><h3 id="16-天气"><a href="#16-天气" class="headerlink" title="16.天气"></a>16.天气</h3><p>需要在官网<a href="http://weatherdt.com/">weatherdt.com</a>注册配置，具体<a href="https://blog.csdn.net/cungudafa/article/details/104312892">天气教程</a>。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 天气显示 http://weatherdt.com/</span><span class="token key atrule">weather</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">app_id</span><span class="token punctuation">:</span> yqRrzxwtvs <span class="token comment" spellcheck="true">##这里替换成你的appid</span></code></pre><blockquote><p>更多：</p><ol><li>豆瓣页面：<a href="https://cungudafa.blog.csdn.net/article/details/105773983">豆瓣读书和电影</a></li><li>访问者地图：<a href="https://cungudafa.blog.csdn.net/article/details/105925710">访问者地图</a></li></ol></blockquote><h3 id="17-文章分析"><a href="#17-文章分析" class="headerlink" title="17.文章分析"></a>17.文章分析</h3><p>包括<a href="https://tongji.baidu.com/">百度分析</a>和谷歌分析，都需要去注册申请。（可选操作）</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Add google analytics configuration</span><span class="token comment" spellcheck="true"># 添加 Google Analytics 配置</span><span class="token key atrule">googleAnalytics</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span><span class="token comment" spellcheck="true"># Add baidu analytics configuration</span><span class="token comment" spellcheck="true"># 添加 baidu Analytics 配置 https://tongji.baidu.com/</span><span class="token key atrule">baiduAnalytics</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 百度分析</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> b05d6287bdeab72f3886bffe3cff054a</code></pre><p> <strong>效果预览</strong> </p><p>示例站：<a href="https://cungudafa.top/">cungudafa.top</a></p><p>视频：<a href="https://www.bilibili.com/video/BV1C7411N762">bilibili</a></p><h2 id="18-自定制修改"><a href="#18-自定制修改" class="headerlink" title="18.自定制修改"></a>18.自定制修改</h2><p>背景和一些常用的优化，在主题配置文件中都以可选配置了（防止动画冲突，建议背景和点击效果只打开一个），<br>如果更多有新的样式，可以留言或者pr，酌情添加。</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 建议一项只开一个</span><span class="token key atrule">js</span><span class="token punctuation">:</span>  <span class="token key atrule">hititle</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true">#浏览器搞笑标题</span>  <span class="token key atrule">KeyBlock</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true">#按键屏蔽,不能F12调试和查看源代码</span>  <span class="token key atrule">bg</span><span class="token punctuation">:</span>    <span class="token key atrule">sakura_petals</span><span class="token punctuation">:</span> <span class="token boolean important">false  </span><span class="token comment" spellcheck="true">#仅在首页花瓣飘落（大内存）</span>    <span class="token key atrule">snow_petals</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 雪花飘落（大内存）</span>    <span class="token key atrule">piao</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true">#飘动彩带</span>    <span class="token key atrule">live2d_widget</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true">#看板娘 需jq（大内存）</span>    <span class="token key atrule">bgchange</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 是否开启壁纸切换</span>  <span class="token key atrule">clink</span><span class="token punctuation">:</span>    <span class="token key atrule">word</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true">#点击出现字效</span>    <span class="token key atrule">love</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true">#点击出现爱心</span>    <span class="token key atrule">cursor</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 星星跟随坠落(大内存)</span></code></pre><blockquote><p>给出一系列魔改的笔记：</p><ol><li><a href="https://blog.csdn.net/cungudafa/article/details/104330959">logo</a></li><li><a href="https://blog.csdn.net/cungudafa/article/details/104295156">花里胡哨教程</a></li><li><a href="https://blog.csdn.net/cungudafa/article/details/104651901">今日诗词、一言接口</a></li></ol></blockquote><hr><p> <span class="github-emoji"><span>🌚</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f31a.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 总结时间</p><h2 id="参与贡献"><a href="#参与贡献" class="headerlink" title="参与贡献"></a>参与贡献</h2><p> @<a href="https://gitee.com/cungudafa">cungudafa</a></p><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><p><strong>2.4</strong> </p><p>文字总数统计wordcount修改为非必要选项，可以不展示文字统计总字数</p><p><strong>9.8 &amp; 10.15</strong> </p><p>更新了valine和artitalk，添加了gitalk评论作为选择</p><p><strong>6.9</strong> </p><p>补充粘贴复制（<a href="https://blog.csdn.net/cungudafa/article/details/106647255">教程</a>）</p><p><strong>6.2</strong></p><p>修复代码块样式（删掉<code>npm uninstall hexo-prism-plugin</code>插件）<br>新增左侧悬浮框（回到顶部，打开左侧目录<code>小屏幕生效，否则只显示顶部目录</code>，跳转评论，黑夜模式，背景音乐播放<code>在config设置bg_music</code>）</p><p><strong>5.28</strong></p><p>修复了<a href="https://cdn.jsdelivr.net/gh/cungudafa/cdn/css/style.css">css</a>（首页bug）<br>修改了post文章引用样式（以前的不明显）<br>增加了post文章图片样式（增加阴影）、段落h12345增加阿拉伯编号<br>添加了tags页面多种词云效果</p><p><strong>5.25</strong></p><p>修复了没有设置文章时首页显示404图片，（bg中随机选择）<br>新增了分析页面（echarts图），来源于drew整理matery主题的效果<br>归档页新增文章日历（echarts图）<br>新增标题下显示浏览数<br>新增自动获取前50字为文章描述</p><p><strong>5.23</strong></p><p>计划修改文章页面展现效果（对代码块和表格图片展现更加优化）</p><p><strong>5.22</strong></p><p>重铸</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3D相册</title>
      <link href="/2021/07/31/3d-xiang-ce/"/>
      <url>/2021/07/31/3d-xiang-ce/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="css-3d"><a href="#css-3d" class="headerlink" title="css-3d"></a>css-3d</h1><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>程序员女朋友的相册是这样的</p><h4 id="博客链接"><a href="#博客链接" class="headerlink" title="博客链接"></a>博客链接</h4><p><a href="https://blog.csdn.net/cungudafa/article/details/103163313">https://blog.csdn.net/cungudafa/article/details/103163313</a></p><h4 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h4><ol><li>下载源码</li><li>修改img文件夹下的图片（图片名称不变）</li><li>双击index.html即可显示3d相册效果</li></ol><h4 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h4><ol><li>css中可以修改背景颜色</li><li>音乐播放需要编译工具运行，双击触发不了</li></ol><p>2020.2.26修改：</p><ol><li>引入网易云外链播放：（双击index.html不会显示网易云播放界面，只有编译运行到端口，才会自动播放音乐）</li></ol><pre class=" language-bash"><code class="language-bash">                <span class="token operator">&lt;</span><span class="token operator">!</span>-- 网易云外链音乐 --<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span>-- 只有发布和编译到端口才会自动播放 --<span class="token operator">></span>        <span class="token operator">&lt;</span>div style<span class="token operator">=</span><span class="token string">"position:absolute;right:0px;bottom:0px;"</span><span class="token operator">></span>            <span class="token operator">&lt;</span>iframe frameborder<span class="token operator">=</span><span class="token string">"no"</span> border<span class="token operator">=</span><span class="token string">"0"</span> marginwidth<span class="token operator">=</span><span class="token string">"0"</span> marginheight<span class="token operator">=</span><span class="token string">"100%"</span> width<span class="token operator">=</span>330 height<span class="token operator">=</span>86                 src<span class="token operator">=</span><span class="token string">"//music.163.com/outchain/player?type=2&amp;id=1370748318&amp;auto=1&amp;height=66"</span><span class="token operator">></span><span class="token operator">&lt;</span>/iframe<span class="token operator">></span>        <span class="token operator">&lt;</span>/div<span class="token operator">></span></code></pre><p><img src="https://images.gitee.com/uploads/images/2020/0226/150702_cfbea7be_5490475.png" alt="输入图片说明"></p><ol start="2"><li>这里我显示了播放条，方便双击index.html控制；<br>（tips：在audio标签加上controls属性，显示播放条；删除则隐藏）<pre class=" language-bash"><code class="language-bash">             <span class="token operator">&lt;</span><span class="token operator">!</span>-- 隐藏播放条：删除ontrols<span class="token operator">=</span><span class="token string">"controls"</span>部分 --<span class="token operator">></span>             <span class="token operator">&lt;</span>audio autoplay<span class="token operator">=</span><span class="token string">"autopaly"</span> loop<span class="token operator">=</span><span class="token string">"loop"</span> controls<span class="token operator">=</span><span class="token string">"controls"</span> id<span class="token operator">=</span><span class="token string">"audios"</span><span class="token operator">></span></code></pre></li></ol><p><img src="https://images.gitee.com/uploads/images/2020/0226/151759_3c9077e6_5490475.png" alt="输入图片说明"></p>]]></content>
      
      
      <categories>
          
          <category> Html </category>
          
          <category> Css </category>
          
          <category> Js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Html </tag>
            
            <tag> Css </tag>
            
            <tag> Js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国内Github访问加速</title>
      <link href="/2021/07/30/guo-nei-github-fang-wen-jia-su/"/>
      <url>/2021/07/30/guo-nei-github-fang-wen-jia-su/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>绕过国内DNS解析，直接访问GitHub的CDN节点，从而达到加速的目的。该方法也可加速其他因为CDN被屏蔽导致访问慢的网站。</p><p>大白话：其实就是不用默认DNS解析到的IP，而是直接指定一个IP去访问；比如：你去访问github.com，默认的DNS给你解析到52.74.223.119，而我用hosts文件给系统指定了一个IP，以后再访问github.com，就直接去访问我配置的那个IP。</p><p>所以如果你配置的那个IP就成了访问效果好坏的关键。</p><h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><p>分别查询以下三个链接的DNS解析地址：</p><ul><li><p>github.com</p></li><li><p>assets-cdn.github.com</p></li><li><p>github.global.ssl.fastly.net<br>查询DNS的解析网站有：</p></li><li><p><a href="https://tool.chinaz.com/dns">站长工具</a></p></li><li><p><a href="http://www.ip138.com/">http://www.ip138.com</a></p></li><li><p><a href="https://www.ipaddress.com/">https://www.ipaddress.com</a><br>记得多查几次，选择延迟小、稳定不丢包的IP，然后记下来</p></li></ul><p>然后修改<code>hosts</code>文件</p><p>Windows系统：进入目录：<code>C:\Windows\System32\drivers\etc\</code>，复制 <code>hosts</code>文件 到桌面，用编辑器打开，在末尾加上刚才查询到的IP和对应的域名，格式为：<code>IP (空格) 域名</code>。我的hosts文件：<br><img src="https://images.sky03.cn/img/20191215154455.png"></p><p>保存之后再将这个文件复制到目录：<code>C:\Windows\System32\drivers\etc\</code>中，会提示拒绝访问，用管理员点确认即可 。</p><blockquote><p>为什么不直接改？因为系统文件不让你修改<br>也可以vscode直接改，保存的时候会有个提示，点击Retry as Admin即可</p></blockquote><p>然后再手动刷新系统DNS缓存，命令：Win+R cmd ，输入<code>ipconfig /flushdns</code> 即可<br><img src="https://images.sky03.cn/img/20191215142731.png"></p><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><img src="https://images.sky03.cn/img/20191215142948.png"></p><p><img src="https://images.sky03.cn/img/20191215143032.png"></p><p><img src="https://images.sky03.cn/img/20191215140315.png"></p><p><img src="https://images.sky03.cn/img/20191215154829.png"></p><center>校园网的2M/s宽带</center>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
          <category> Hexo </category>
          
          <category> DNS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Server </tag>
            
            <tag> DNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客优化加速</title>
      <link href="/2021/07/30/hexo-bo-ke-you-hua-jia-su/"/>
      <url>/2021/07/30/hexo-bo-ke-you-hua-jia-su/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="Hexo优化加速"><a href="#Hexo优化加速" class="headerlink" title="Hexo优化加速"></a>Hexo优化加速</h4><p>把Hexo托管在GH Pages上，每次full load速度都非常的慢。于是，我deploy到Coding Pages进行对比测试，发现Coding的服务器也全部在境外，速度不如GH且不稳定。</p><p>在网上疯狂搜索有关于Hexo加速教程，经过几番折腾，总结几点实用的。</p><p>个人博客原链接：<a href="https://links.jianshu.com/go?to=https://ashin.wang/Hexo-Accelerate/">https://ashin.wang/Hexo-Accelerate/</a></p><h4 id="一、删繁就简"><a href="#一、删繁就简" class="headerlink" title="一、删繁就简"></a>一、删繁就简</h4><p>去掉一些不必要的功能，关掉了pace、canvas_lines、tag-icon等，安心留田种地。</p><h4 id="二、使用CDN加载部分css、js"><a href="#二、使用CDN加载部分css、js" class="headerlink" title="二、使用CDN加载部分css、js"></a>二、使用CDN加载部分css、js</h4><p>外部资源加载使用jsDeliver<br><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/20210730145716.jpg"></p><h4 id="三、使用gulp压缩Blog资源"><a href="#三、使用gulp压缩Blog资源" class="headerlink" title="三、使用gulp压缩Blog资源"></a>三、使用gulp压缩Blog资源</h4><p>使用gulp压缩Blog静态资源，可以减少文件体积，加快速度。</p><h5 id="1-安装相关插件"><a href="#1-安装相关插件" class="headerlink" title="1.安装相关插件"></a>1.安装相关插件</h5><p>在这使用taobao cnpm加快安装速度</p><pre class=" language-gulp"><code class="language-gulp"># 全局安装gulpcnpm install gulp -g</code></pre><pre class=" language-gulp"><code class="language-gulp"># 在博客根目录下gulp压缩相关插件cnpm install gulp --savecnpm install gulp-minify-css --savecnpm install gulp-uglify --savecnpm install gulp-htmlmin --savecnpm install gulp-htmlclean --savecnpm install gulp-imagemin --save</code></pre><p>为解决出现<code>GulpUglifyError: unable to minify JavaScript</code></p><p><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/20210730145717.jpg"></p><pre class=" language-babel"><code class="language-babel"># 安装babelcnpm install babel-core@6.26.3 --savecnpm install gulp-babel@7.0.1 --savecnpm install babel-preset-es2015@6.24.1 --save</code></pre><pre class=" language-babel"><code class="language-babel"># gulp-babel 取消严格模式方法cnpm install babel-plugin-transform-remove-strict-mode --save</code></pre><h4 id="2-添加gulpfile-js配置文件"><a href="#2-添加gulpfile-js配置文件" class="headerlink" title="2.添加gulpfile.js配置文件"></a>2.添加gulpfile.js配置文件</h4><p>gulp -v查看gulp的版本，如果gulp的版本大于等于4.0，新建gulpfile.js复制下面内容，并放置站点根目录</p><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> minifycss <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-minify-css'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-uglify'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlmin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlclean'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> imagemin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-imagemin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> babel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-babel'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩css文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-css'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.css'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">minifycss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩html文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-html'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.html'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            removeComments<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            minifyJS<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            minifyCSS<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            minifyURLs<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩js文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-js'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/**/*.js'</span><span class="token punctuation">,</span> <span class="token string">'!./public/**/*.min.js'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">babel</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//将ES6代码转译为可执行的JS代码</span>            presets<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'es2015'</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">// es5检查机制</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 压缩 public/images 目录内图片(Version>3)</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-images'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>    gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/images/**/*.*'</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">imagemin</span><span class="token punctuation">(</span><span class="token punctuation">[</span>            imagemin<span class="token punctuation">.</span><span class="token function">gifsicle</span><span class="token punctuation">(</span><span class="token punctuation">{</span>interlaced<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            imagemin<span class="token punctuation">.</span><span class="token function">jpegtran</span><span class="token punctuation">(</span><span class="token punctuation">{</span>progressive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            imagemin<span class="token punctuation">.</span><span class="token function">optipng</span><span class="token punctuation">(</span><span class="token punctuation">{</span>optimizationLevel<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            imagemin<span class="token punctuation">.</span><span class="token function">svgo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>                    <span class="token punctuation">{</span>removeViewBox<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                    <span class="token punctuation">{</span>cleanupIDs<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span>                <span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/images'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//4.0以后的写法</span><span class="token comment" spellcheck="true">// 执行 gulp 命令时执行的任务</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">series</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">'minify-html'</span><span class="token punctuation">,</span> <span class="token string">'minify-css'</span><span class="token punctuation">,</span> <span class="token string">'minify-js'</span><span class="token punctuation">,</span> <span class="token string">'minify-images'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"----------gulp Finished----------"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// Do something after a, b, and c are finished.</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="3-添加-babelrc文件"><a href="#3-添加-babelrc文件" class="headerlink" title="3.添加.babelrc文件"></a>3.添加.babelrc文件</h4><p>内容如下，同样放置站点根目录<br><img src="https://gitee.com/yi-yezhiqiu/Images/raw/master/img/20210730145718.jpg"></p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul><li><p><a href="https://links.jianshu.com/go?to=https://www.wandouip.com/t5i382912/">Hexo博客使用gulp压缩静态资源</a></p></li><li><p><a href="https://links.jianshu.com/go?to=http://blog.fangchengjin.cn/hexo-gulp-post.html">Hexo博客静态资源压缩</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决picgo安装插件中</title>
      <link href="/2021/07/29/jie-jue-picgo-an-zhuang-cha-jian-zhong/"/>
      <url>/2021/07/29/jie-jue-picgo-an-zhuang-cha-jian-zhong/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="picgo一直安装插件中，使用离线安装解决办法-附安装问题解决"><a href="#picgo一直安装插件中，使用离线安装解决办法-附安装问题解决" class="headerlink" title="picgo一直安装插件中，使用离线安装解决办法-附安装问题解决"></a>picgo一直安装插件中，使用离线安装解决办法-附安装问题解决</h4><ul><li><p>插件一直安装中是一个非常烦的事情，当时等了好久也是在安装中，尝试使用离线安装插件的方法，也发现报错，下面记录下解决办法，希望能够帮到各位。</p></li><li><p><a href="https://asteria.lanzous.com/iJMmjol7vwf">picgo下载地址</a>、<a href="https://asteria.lanzous.com/i7t6Dol7vud">gitee插件地址</a>、<a href="https://asteria.lanzous.com/i5xPtol7vtc">mdnice工具桌面版</a>、<a href="https://asteria.lanzous.com/ig0MLol7zgd">lantern</a></p></li><li><p>总是会在离线安装过程中报错，就不妨仔细看看下面这个办法 </p></li></ul><blockquote><p>值得注意一点，需要提前备份picgo设置，不然可能会给你全部清空。</p></blockquote><p><a href="https://www.beiwangshan.com/tag/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/">环境配置</a></p><p>离线安装插件的时候需要有Node.js环境，先在CMD中查看自己的Node.js是否安装，运行下面的指令：</p><pre class=" language-csharp"><code class="language-csharp">npm <span class="token operator">-</span>v</code></pre><p><img src="https://img-blog.csdnimg.cn/img_convert/871bd51c854c3da375a24aefcbfdc615.png"></p><blockquote><p>如果没有安装，推荐一篇廖雪峰大佬的教程：<a href="https://www.liaoxuefeng.com/wiki/1022910821149312/1023025597810528">安装node.js和npm</a></p></blockquote><p>切换镜像</p><p>国外镜像下载安装较慢，推荐使用国内镜像</p><p>如果安装缓慢 长时间卡住不动 去设置npm 的数据源为淘宝的。<br>1、命令</p><pre class=" language-csharp"><code class="language-csharp"> npm config <span class="token keyword">set</span> registry https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org</code></pre><p>2、验证命令</p><pre class=" language-csharp"><code class="language-csharp"> npm config <span class="token keyword">get</span> registry</code></pre><p>如果返回 <a href="https://registry.npm.taobao.org,说明镜像配置成功./">https://registry.npm.taobao.org，说明镜像配置成功。</a></p><p><strong><em>安装插件</em></strong><br>首先推荐两个picgo插件目录的地方：</p><p>1、<a href="https://www.beiwangshan.com/go/aHR0cHM6Ly9jb2RlY2hpbmEuY3Nkbi5uZXQvbWlycm9ycy9QaWNHby9Bd2Vzb21lLVBpY0dvP3V0bV9zb3VyY2U9Y3Nkbl9naXRodWJfYWNjZWxlcmF0b3I">国内加速地址</a><br>2、<a href="https://www.beiwangshan.com/go/aHR0cHM6Ly9naXRodWIuY29tL1BpY0dvL0F3ZXNvbWUtUGljR28">GitHub原地址</a><br>这两个地方的东西是一样的，哪个打得开用哪个吧。</p><p>切换目录</p><p>1.首先我们需要找到C:\Users\XXX\AppData\Roaming\picgo目录；XXX表示你的用户名；</p><p><img src="https://img-blog.csdnimg.cn/img_convert/dbaec20e5a209e226356c301be565be9.png"><br>2.得到这个地址之后，继续在CMD中执行，指令中的地址换成你自己的。</p><pre class=" language-csharp"><code class="language-csharp"> cd C<span class="token punctuation">:</span>\Users\XXX\AppData\Roaming\picgo</code></pre><p>此时运行目录就会变为：</p><p><img src="https://img-blog.csdnimg.cn/img_convert/12813a23ee2d6091bd53e6483a063d64.png"></p><p>3.然后继续执行安装指令：</p><pre class=" language-csharp"><code class="language-csharp">npm install XXX<span class="token comment" spellcheck="true">//例如</span>npm install picgo<span class="token operator">-</span>plugin<span class="token operator">-</span>watermark</code></pre><p>XXX请更换为具体的插件名称，例如 picgo-plugin-gitee-uploader</p><p>4.重启picgo，安装完成</p><p><strong><em>错误解决</em></strong><br>错误一</p><p>在安装过程中，如果遇到下面的这个问题：</p><p><strong><em>Python is not set from command line or npm configuration</em></strong><br><img src="https://img-blog.csdnimg.cn/img_convert/c5a4e2db5173262064f16c8fe8b70f8e.png"></p><p>这就是提示缺少环境，我们继续执行下面的指令</p><pre class=" language-csharp"><code class="language-csharp"> npm install <span class="token operator">--</span><span class="token keyword">global</span> <span class="token operator">--</span>production windows<span class="token operator">-</span>build<span class="token operator">-</span>tools</code></pre><p>等待安装完成Visual Studio Build Tools和 Python2.7<br><img src="https://img-blog.csdnimg.cn/img_convert/171134a37f9f77eb925dda68faef0dbf.png"></p><p>然后重新执行以下<a href="https://www.beiwangshan.com/tag/%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/">插件安装</a>的指令，最后重启picgo即可。</p><p>错误二<br><img src="https://img-blog.csdnimg.cn/img_convert/cefab7088b200c845e8e01b76599a532.png"></p><p>访问：<a href="https://www.beiwangshan.com/go/aHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlLWd5cCNvbi13aW5kb3dz">https://github.com/nodejs/node-gyp#on-windows</a></p><p>然后下载并安装<a href="https://www.beiwangshan.com/go/aHR0cHM6Ly92aXN1YWxzdHVkaW8ubWljcm9zb2Z0LmNvbS90aGFuay15b3UtZG93bmxvYWRpbmctdmlzdWFsLXN0dWRpby8_c2t1PUJ1aWxkVG9vbHM">Visual Studio Build Tools</a><br><img src="https://img-blog.csdnimg.cn/img_convert/567672728e2b18c0810570c389b9f8b6.png"></p><p>然后选择 C++生成工具，其他默认<br><img src="https://img-blog.csdnimg.cn/img_convert/e8cf32bbfbd2089a5008cac7cc600759.png"></p><p>然后在CMD中设置</p><pre class=" language-csharp"><code class="language-csharp"> npm config <span class="token keyword">set</span> msvs_version <span class="token number">2017</span></code></pre><blockquote><p>如果后面的版本号错误，就根据提示修改为对应的版本号，例如下面这张图，就需要修改为2019</p></blockquote><p><img src="https://img-blog.csdnimg.cn/img_convert/05fea0d1d22a8f9d91ea3fac72e72195.png"></p><p>错误三</p><p>Python环境安装不上，那就自己下载一个Python安装，网上有很多安装教程，推荐使用下载.mis一键安装。</p><p><strong><em>总结</em></strong><br>通过解决以上的问题，我的插件已经安装好啦，不知道你们的可以了不。</p><p>值得注意一点，需要提前备份picgo设置，不然可能会给你全部清空。</p>]]></content>
      
      
      <categories>
          
          <category> PicGo </category>
          
          <category> Cmd </category>
          
          <category> Gitee </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PicGo </tag>
            
            <tag> Gitee </tag>
            
            <tag> Cmd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决picgo图片上传失败</title>
      <link href="/2021/07/29/jie-jue-picgo-tu-pian-shang-chuan-shi-bai/"/>
      <url>/2021/07/29/jie-jue-picgo-tu-pian-shang-chuan-shi-bai/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="解决picgo图片上传失败"><a href="#解决picgo图片上传失败" class="headerlink" title="解决picgo图片上传失败"></a>解决picgo图片上传失败</h2><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><ul><li>昨天才刚搭建好的 typora+picGo+gitee的token 兴高采烈的写笔记，今天在typora中就图片上传失败了。</li><li>我的的解决办法就是更换picGo的图床，从gitee 更换为SM.MS</li></ul><hr><h4 id="一、注册SM-MS账号"><a href="#一、注册SM-MS账号" class="headerlink" title="一、注册SM.MS账号"></a>一、注册SM.MS账号</h4><p>过程太简单，邮箱都不用验证，图都不用贴了，直接地址去regist 就好，</p><pre class=" language-csharp"><code class="language-csharp">https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>sm<span class="token punctuation">.</span>ms<span class="token operator">/</span></code></pre><h4 id="二、登录后生成token"><a href="#二、登录后生成token" class="headerlink" title="二、登录后生成token"></a>二、登录后生成token</h4><p>登录后点击框选部分<br><img src="https://img-blog.csdnimg.cn/20210514150218709.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwMDIwNDQ3,size_16,color_FFFFFF,t_70"><br>进入这个面板页面，按照过程以及界面相关提示，生成token，<br><img src="https://img-blog.csdnimg.cn/20210514150319433.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwMDIwNDQ3,size_16,color_FFFFFF,t_70"><br>然后把这个token复制到picGo 中<br><img src="https://img-blog.csdnimg.cn/20210514150421414.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwMDIwNDQ3,size_16,color_FFFFFF,t_70"><br>然后可以在上传区 测试上传，在相册中查看结果。<br>然后回到typora中，一切都正常了。</p>]]></content>
      
      
      <categories>
          
          <category> PicGo </category>
          
          <category> Typora </category>
          
          <category> Gitee </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PicGo </tag>
            
            <tag> Typora </tag>
            
            <tag> Gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>平台简介</title>
      <link href="/2021/07/23/ping-tai-jian-jie/"/>
      <url>/2021/07/23/ping-tai-jian-jie/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="平台简介"><a href="#平台简介" class="headerlink" title="平台简介"></a>平台简介</h2><p>若依是一套全部开源的快速开发平台，毫无保留给个人及企业免费使用。</p><ul><li>前端采用Vue、Element UI。</li><li>后端采用Vue、Element UI。</li><li>权限认证使用Jwt，支持多终端认证系统。</li><li>支持加载动态权限菜单，多方式轻松权限控制。</li><li>高效率开发，使用代码生成器可以一键生成前后端代码。</li><li>提供了单应用版本<a href="https://github.com/yangzongzhuan/RuoYi-Vue-fast">RuoYi-Vue-fast</a>，Oracle版本<a href="https://github.com/yangzongzhuan/RuoYi-Vue-Oracle">RuoYi-Vue-Oracle</a>，保持同步更新。</li><li>不分离版本，请移步<a href="https://gitee.com/y_project/RuoYi">RuoYi</a>，微服务版本，请移步<a href="https://gitee.com/y_project/RuoYi-Cloud">RuoYi-Cloud</a></li><li>特别鸣谢：<a href="https://github.com/ElemeFE/element">element</a>，<a href="https://github.com/PanJiaChen/vue-element-admin">vue-element-admin</a>，<a href="https://github.com/elunez/eladmin-web">eladmin-web</a>。</li><li>阿里云折扣场：<a href="http://aly.ruoyi.vip/">点我进入</a>，腾讯云秒杀场：<a href="http://txy.ruoyi.vip/">点我进入</a>&nbsp;&nbsp;</li><li>阿里云优惠券：<a href="https://www.aliyun.com/minisite/goods?userCode=brki8iof&amp;share_source=copy_link">点我领取</a>，腾讯云优惠券：<a href="https://cloud.tencent.com/redirect.php?redirect=1025&amp;cps_key=198c8df2ed259157187173bc7f4f32fd&amp;from=console">点我领取</a>&nbsp;&nbsp;</li></ul><h2 id="内置功能"><a href="#内置功能" class="headerlink" title="内置功能"></a>内置功能</h2><ol><li>用户管理：用户是系统操作者，该功能主要完成系统用户配置。</li><li>部门管理：配置系统组织机构（公司、部门、小组），树结构展现支持数据权限。</li><li>岗位管理：配置系统用户所属担任职务。</li><li>菜单管理：配置系统菜单，操作权限，按钮权限标识等。</li><li>角色管理：角色菜单权限分配、设置角色按机构进行数据范围权限划分。</li><li>字典管理：对系统中经常使用的一些较为固定的数据进行维护。</li><li>参数管理：对系统动态配置常用参数。</li><li>通知公告：系统通知公告信息发布维护。</li><li>操作日志：系统正常操作日志记录和查询；系统异常信息日志记录和查询。</li><li>登录日志：系统登录日志记录查询包含登录异常。</li><li>在线用户：当前系统中活跃用户状态监控。</li><li>定时任务：在线（添加、修改、删除)任务调度包含执行结果日志。</li><li>代码生成：前后端代码的生成（java、html、xml、sql）支持CRUD下载 。</li><li>系统接口：根据业务代码自动生成相关的api接口文档。</li><li>服务监控：监视当前系统CPU、内存、磁盘、堆栈等相关信息。</li><li>缓存监控：对系统的缓存信息查询，命令统计等。</li><li>在线构建器：拖动表单元素生成相应的HTML代码。</li><li>连接池监视：监视当前系统数据库连接池状态，可进行分析SQL找出系统性能瓶颈。</li></ol><h2 id="在线体验"><a href="#在线体验" class="headerlink" title="在线体验"></a>在线体验</h2><ul><li>admin/admin123  </li><li>陆陆续续收到一些打赏，为了更好的体验已用于演示服务器升级。谢谢各位小伙伴。</li></ul><p>演示地址：<a href="http://vue.ruoyi.vip/">http://vue.ruoyi.vip</a>  </p><h2 id="演示图"><a href="#演示图" class="headerlink" title="演示图"></a>演示图</h2><table>    <tbody><tr>        <td><img src="https://oscimg.oschina.net/oscnet/cd1f90be5f2684f4560c9519c0f2a232ee8.jpg"></td>        <td><img src="https://oscimg.oschina.net/oscnet/1cbcf0e6f257c7d3a063c0e3f2ff989e4b3.jpg"></td>    </tr>    <tr>        <td><img src="https://oscimg.oschina.net/oscnet/up-8074972883b5ba0622e13246738ebba237a.png"></td>        <td><img src="https://oscimg.oschina.net/oscnet/up-9f88719cdfca9af2e58b352a20e23d43b12.png"></td>    </tr>    <tr>        <td><img src="https://oscimg.oschina.net/oscnet/up-39bf2584ec3a529b0d5a3b70d15c9b37646.png"></td>        <td><img src="https://oscimg.oschina.net/oscnet/up-936ec82d1f4872e1bc980927654b6007307.png"></td>    </tr>    <tr>        <td><img src="https://oscimg.oschina.net/oscnet/up-b2d62ceb95d2dd9b3fbe157bb70d26001e9.png"></td>        <td><img src="https://oscimg.oschina.net/oscnet/up-d67451d308b7a79ad6819723396f7c3d77a.png"></td>    </tr>         <tr>        <td><img src="https://oscimg.oschina.net/oscnet/5e8c387724954459291aafd5eb52b456f53.jpg"></td>        <td><img src="https://oscimg.oschina.net/oscnet/644e78da53c2e92a95dfda4f76e6d117c4b.jpg"></td>    </tr>    <tr>        <td><img src="https://oscimg.oschina.net/oscnet/up-8370a0d02977eebf6dbf854c8450293c937.png"></td>        <td><img src="https://oscimg.oschina.net/oscnet/up-49003ed83f60f633e7153609a53a2b644f7.png"></td>    </tr>    <tr>        <td><img src="https://oscimg.oschina.net/oscnet/up-d4fe726319ece268d4746602c39cffc0621.png"></td>        <td><img src="https://oscimg.oschina.net/oscnet/up-c195234bbcd30be6927f037a6755e6ab69c.png"></td>    </tr>    <tr>        <td><img src="https://oscimg.oschina.net/oscnet/b6115bc8c31de52951982e509930b20684a.jpg"></td>        <td><img src="https://oscimg.oschina.net/oscnet/up-5e4daac0bb59612c5038448acbcef235e3a.png"></td>    </tr></tbody></table><h2 id="前后端分离交流"><a href="#前后端分离交流" class="headerlink" title="前后端分离交流"></a>前后端分离交流</h2>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
          <category> Element UI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Element UI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给Hexo文章加密</title>
      <link href="/2021/07/23/wen-jian-jia-mi/"/>
      <url>/2021/07/23/wen-jian-jia-mi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> Password </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Password </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建Github博客-CN</title>
      <link href="/2021/07/23/tu-shu-guan-li-xi-tong-cn/"/>
      <url>/2021/07/23/tu-shu-guan-li-xi-tong-cn/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hexo-theme-matery"><a href="#hexo-theme-matery" class="headerlink" title="hexo-theme-matery"></a>hexo-theme-matery</h1><p><a href="http://hits.dwyl.io/blinkfox/hexo-theme-matery"><img src="http://hits.dwyl.io/blinkfox/hexo-theme-matery.svg" alt="HitCount"></a> <a href="https://gitter.im/hexo-theme-matery/Lobby?utm_source=badge"><img src="https://img.shields.io/gitter/room/blinkfox/hexo-theme-matery.svg" alt="Gitter"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/issues"><img src="https://img.shields.io/github/issues/blinkfox/hexo-theme-matery.svg" alt="GitHub issues"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/blob/master/LICENSE"><img src="https://img.shields.io/github/license/blinkfox/hexo-theme-matery.svg" alt="GitHub license"></a> <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master"><img src="https://img.shields.io/badge/downloads-master-green.svg" alt="Download"></a> <a href="http://hexo.io/"><img src="https://img.shields.io/badge/hexo-%3E%3D%203.0-blue.svg" alt="Hexo Version"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/network"><img src="https://img.shields.io/github/forks/blinkfox/hexo-theme-matery.svg" alt="GitHub forks"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/stargazers"><img src="https://img.shields.io/github/stars/blinkfox/hexo-theme-matery.svg" alt="GitHub stars"></a></p><p><a href="README.md">🇺🇸English Document</a> | <a href="http://blinkfox.com/">国内访问示例 (http://blinkfox.com)</a> | <a href="https://blinkfox.github.io/">Github 部署演示示例 (https://blinkfox.github.io)</a></p><blockquote><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/">Gitalk</a>、<a href="https://imsun.github.io/gitment/">Gitment</a>、<a href="https://valine.js.org/">Valine</a> 和 <a href="https://disqus.com/">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 在线聊天功能。</li></ul><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p>感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。</p><ul><li><a href="https://github.com/HarborZeng">@HarborZeng</a></li><li><a href="https://github.com/shw2018">@shw2018</a></li><li><a href="https://github.com/L1cardo">@L1cardo</a></li><li><a href="https://github.com/Five-great">@Five-great</a></li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>当你看到这里的时候，应该已经有一个自己的 <a href="https://hexo.io/zh-cn/">Hexo</a> 博客了。如果还没有的话，不妨使用 Hexo 和 <a href="https://www.appinn.com/markdown/">Markdown</a> 来写博客和文章。</p><p>点击 <a href="">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>Git clone</code> 命令来下载:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span></code></pre><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 18:23:38</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token punctuation">---</span></code></pre><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"about"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> about<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token punctuation">---</span></code></pre><h3 id="新建留言板-contact-页（可选的）"><a href="#新建留言板-contact-页（可选的）" class="headerlink" title="新建留言板 contact 页（可选的）"></a>新建留言板 contact 页（可选的）</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"contact"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> contact<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token punctuation">---</span></code></pre><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h3 id="新建友情链接-friends-页（可选的）"><a href="#新建友情链接-friends-页（可选的）" class="headerlink" title="新建友情链接 friends 页（可选的）"></a>新建友情链接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情链接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> friends<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-12-12 21:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token punctuation">---</span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><h3 id="新建-404-页"><a href="#新建-404-页" class="headerlink" title="新建 404 页"></a>新建 404 页</h3><p>如果在你的博客 <code>source</code> 目录下还没有 <code>404.md</code> 文件，那么你就需要新建一个</p><p>编辑你刚刚新建的页面文件 <code>/source/404.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token number">404</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">"Oops～，我崩溃了！找不到你想要的页面 :("</span><span class="token punctuation">---</span></code></pre><h3 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h3><h4 id="配置基本菜单导航的名称、路径url和图标icon"><a href="#配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="配置基本菜单导航的名称、路径url和图标icon."></a>配置基本菜单导航的名称、路径url和图标icon.</h4><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)<br>2.图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找   </p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book</code></pre><h4 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作<br>1.在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)<br>2.在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.<br>3.注意每个二级菜单模块前要加 <code>-</code>.<br>4.注意缩进格式  </p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle<span class="token punctuation">-</span>o  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book  <span class="token key atrule">Medias</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>list    <span class="token key atrule">children</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Musics        <span class="token key atrule">url</span><span class="token punctuation">:</span> /musics        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>music      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Movies        <span class="token key atrule">url</span><span class="token punctuation">:</span> /movies        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>film      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Books        <span class="token key atrule">url</span><span class="token punctuation">:</span> /books        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>book      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Galleries        <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>image</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># default false</span>  custom_css<span class="token punctuation">:</span></code></pre><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post</code></pre><h3 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span></code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount</code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 设置文章字数统计为 true.</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 设置站点文章总字数统计为 true.</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 阅读时长.</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 阅读次数.</span></code></pre><h3 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span></code></pre><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="添加-DaoVoice-在线聊天功能（可选的）"><a href="#添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="添加 DaoVoice 在线聊天功能（可选的）"></a>添加 <a href="http://www.daovoice.io/">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="添加-Tidio-在线聊天功能（可选的）"><a href="#添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="添加 Tidio 在线聊天功能（可选的）"></a>添加 <a href="https://www.tidio.com/">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.socialLink.github)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>&lt;%<span class="token punctuation">=</span> theme.socialLink.github %<span class="token punctuation">></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fab fa-github<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span></code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，在主题的 <code>_config.yml</code> 配置文件中激活music配置即可：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 是否在首页显示音乐</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span>             <span class="token comment" spellcheck="true"># 非吸底模式有效</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">server</span><span class="token punctuation">:</span> netease   <span class="token comment" spellcheck="true"># require music platform: netease, tencent, kugou, xiami, baidu</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist    <span class="token comment" spellcheck="true"># require song, playlist, album, search, artist</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">503838841     </span><span class="token comment" spellcheck="true"># require song id / playlist id / album id / search keyword</span>  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false      </span><span class="token comment" spellcheck="true"># 开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false   </span><span class="token comment" spellcheck="true"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> '<span class="token comment" spellcheck="true">#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span>       <span class="token comment" spellcheck="true"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'random'</span>   <span class="token comment" spellcheck="true"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span>   <span class="token comment" spellcheck="true"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7       </span><span class="token comment" spellcheck="true"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">true  </span><span class="token comment" spellcheck="true"># 列表默认折叠</span></code></pre><blockquote><p><code>server</code>可选<code>netease</code>（网易云音乐），<code>tencent</code>（QQ音乐），<code>kugou</code>（酷狗音乐），<code>xiami</code>（虾米音乐），</p><p><code>baidu</code>（百度音乐）。</p><p><code>type</code>可选<code>song</code>（歌曲），<code>playlist</code>（歌单），<code>album</code>（专辑），<code>search</code>（搜索关键字），<code>artist</code>（歌手）</p><p><code>id</code>获取方法示例: 浏览器打开网易云音乐，点击我喜欢的音乐歌单，浏览器地址栏后面会有一串数字，<code>playlist</code>的<code>id</code></p><p>即为这串数字。</p></blockquote><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2">开源中国在线工具</a>、<a href="http://encode.chahuo.com/">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token punctuation">---</span></code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 赵奇<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span></code></pre><h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><img src="http://static.blinkfox.com/matery-20181202-1.png" alt="首页"></p><p><img src="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章"></p><p><img src="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-7.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-8.png" alt="首页文章列表"></p><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span><span class="token selector"><span class="token class">.bg-color</span> </span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token hexcode">#4cbf30</span> <span class="token number">0%</span>, <span class="token hexcode">#0f9d58</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span></code></pre><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h2 id="版本记录"><a href="#版本记录" class="headerlink" title="版本记录"></a>版本记录</h2><ul><li>v1.3.2<ul><li>新增了繁体字的支持；</li><li>新增了 404 页面；</li><li>其他小问题修改；</li></ul></li><li>v1.3.1<ul><li>新增了 <code>kbd</code> 样式；</li><li>修复了子目录部署时词云中链接有误的问题；</li><li>移除了 TOC 中的竖线；</li><li>修复了首页 icon 图标中的 tooltip 不显示的问题；</li><li>修复生成静态文件时，每天切换 banner 不生效的问题；</li><li>更新了 <code>miniValine</code> 中的一些配置；</li></ul></li><li>v1.3.0<ul><li>新增了支持子目录部署的功能（如：<code>Gitee</code>）；</li><li>新增了 <code>MiniValine</code> 评论系统；</li><li>新增了 <code>jsdelivr</code> 的支持；</li><li>修复了诸多发现的 bug；</li></ul></li><li>v1.2.2<ul><li>新增了自定义文章 <code>keywords</code> 的功能；</li><li>新增静态彩带点击切换的功能和配置；</li><li>将文章字数统计、彩带和站点运行时间等功能默认设置为 <code>false</code>；</li><li>修改了文章的 <code>description</code> 的 meta 属性优先读取文章的 <code>summary</code> 属性；</li><li>修改了文章标题的 HTML 标签，从 <code>div</code> 改成了 <code>h1</code> 标题；</li><li>修改了页脚年份显示不正确的问题；</li><li>去掉了站点运行时间中多余的 <code>setTimeout</code> 代码；</li></ul></li><li>v1.2.1<ul><li>新增了 TOC 的展开目录层级设置和滚动条功能，防止目录较多的时候目录溢出；</li><li>修改了首页的展示方式为以前的模式；</li><li>修复首页按钮没有边框的问题；</li><li>修复了音乐及吸底模式、视频、推荐文章等不激活时仍然生成首页卡片的问题；</li><li>修复 wordCount 插件未安装的问题，修改了部分配置；</li><li>修复音乐的 JSON 配置中有单引号的情况页面不显示的音乐的问题</li><li>修复标签云在Hexo4.0下链接失效的问题；</li></ul></li><li>v1.2.0<ul><li>新增了 <a href="http://www.daovoice.io/">DaoVoice</a>、<a href="https://www.tidio.com/">Tidio</a> 的在线聊天功能；</li><li>新增了两级菜单的功能；</li><li>新增了打字效果的副标题；</li><li>新增了网页内容预加载的功能；</li><li>新增了首页 banner 是否每日切换的配置功能；</li><li>新增了显示 ICP 备案信息的功能，默认未开启；</li><li>新增了百度分析的配置；</li><li>新增了代码块的语言显示、一键复制、显示行号等功能；</li><li>新增了首页轮播图和推荐文章可自定义配置的功能；</li><li>新增了文章页面显示更新日期；</li><li>新增了转载规则的图标；</li><li>修改了分享的布局和显示方式；</li><li>升级更新了部分依赖库的版本；</li><li>其他细节修改和优化；</li></ul></li><li>v1.1.0<ul><li>新增了 <code>emoji</code> 的支持；</li><li>新增了站点运行时间统计及配置；</li><li>新增了留言板的功能,默认未开启；</li><li>新增了 <code>Twitter</code>、<code>Facebook</code>、知乎的社交链接；</li><li>更新了 <code>Valine</code> 的版本为最新版；</li><li>其他小细节的修改；</li></ul></li><li>v1.0.4<ul><li>新增了能为每篇文章都自定义转载规则的功能；</li><li>修复上一页、下一页的自定义 <code>summary</code> 不显示的问题；</li><li>修复了友情链接显示错位的问题，改为了瀑布流的布局方式；</li><li>其他小细节 bug 的修改；</li></ul></li><li>v1.0.3<ul><li>新增了<code>TOC</code>展开、收缩的按钮和相关配置，默认显示此按钮；</li></ul></li><li>v1.0.2<ul><li>升级了 <a href="https://materializecss.com/">Materialize</a> 框架版本为<code>1.0.0</code>，重构和修改了升级过程中的部分文件或问题；</li><li>新增了首页封面的全屏轮播特效，可以将更重要的文章设置到首页轮播中；</li><li>修复首页第一个按钮是中文的问题</li><li>修复了 iPhone 上点击搜索输入获取焦点的问题；</li><li>修复了 iPhone 上输入框获取焦点后页面放大的问题；</li><li>修复一些文章或 UI 显示问题；</li></ul></li><li>v1.0.1<ul><li>调整 <code>css</code>、<code>js</code> 的文件请求路径在主题的<code>_config.yml</code>中配置，便于你更快捷的配置自己的 CDN；</li><li>新增代码是否折行为可配置，默认为折行；</li><li>默认激活 <code>TOC</code> 功能，并新增为某篇文章关闭 <code>TOC</code> 的 <code>Front-matter</code> 配置选项；</li><li>修复文章滚动时，高亮的目录选项不准确的问题；</li><li><code>IOS</code>下移除搜索框自动获得焦点属性，防止自动获得焦点后导致视图上移；</li></ul></li><li>v1.0.0<ul><li>新增了所有基础功能；</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> Web </category>
          
          <category> Nojs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Web </tag>
            
            <tag> Nojs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建Github博客-EN</title>
      <link href="/2021/07/23/tu-shu-guan-li-xi-tong-en/"/>
      <url>/2021/07/23/tu-shu-guan-li-xi-tong-en/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hexo-theme-matery"><a href="#hexo-theme-matery" class="headerlink" title="hexo-theme-matery"></a>hexo-theme-matery</h1><p><a href="http://hits.dwyl.io/blinkfox/hexo-theme-matery"><img src="http://hits.dwyl.io/blinkfox/hexo-theme-matery.svg" alt="HitCount"></a> <a href="https://gitter.im/hexo-theme-matery/Lobby?utm_source=badge"><img src="https://img.shields.io/gitter/room/blinkfox/hexo-theme-matery.svg" alt="Gitter"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/issues"><img src="https://img.shields.io/github/issues/blinkfox/hexo-theme-matery.svg" alt="GitHub issues"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/blob/master/LICENSE"><img src="https://img.shields.io/github/license/blinkfox/hexo-theme-matery.svg" alt="GitHub license"></a> <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master"><img src="https://img.shields.io/badge/downloads-master-green.svg" alt="Download"></a> <a href="http://hexo.io/"><img src="https://img.shields.io/badge/hexo-%3E%3D%203.0-blue.svg" alt="Hexo Version"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/network"><img src="https://img.shields.io/github/forks/blinkfox/hexo-theme-matery.svg" alt="GitHub forks"></a> <a href="https://github.com/blinkfox/hexo-theme-matery/stargazers"><img src="https://img.shields.io/github/stars/blinkfox/hexo-theme-matery.svg" alt="GitHub stars"></a></p><p><a href="README_CN.md">🇨🇳中文说明</a> | <a href="http://blinkfox.com/">国内访问示例(http://blinkfox.com)</a> | <a href="https://blinkfox.github.io/">Github Deploy Demo(https://blinkfox.github.io)</a></p><blockquote><p>This is a Hexo blog theme with ‘Material Design’ and responsive design.</p></blockquote><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul><li>Simple and beautiful, and post is Beautiful and readable.</li><li><a href="https://material.io/">Material Design</a>.</li><li>Responsive design,which can be displayed well on desktop, tablet, mobile phone, etc.</li><li>Home page carousel posts and changing ‘banner’ picture dynamically everday.</li><li>Blog posts list with waterflow(There will be 24 images if the articl dosn’t have  featured pictures).</li><li>Archive page with timeline.</li><li>Tags page of the <strong>word cloud</strong> and categories page of the <strong>radar chart</strong></li><li>Rich ‘About’ page (including about me, posts charts, my projects, my skills, gallery etc.)</li><li>Friendly link page for customizable data</li><li>Support post topping and rewards</li><li>Support <code>MathJax</code></li><li>TOC</li><li>Can be set append the copyright information when copying the content of the post</li><li>Can be set to do password verification when reading a post</li><li>Comment module of <a href="https://gitalk.github.io/">Gitalk</a>, <a href="https://imsun.github.io/gitment/">Gitment</a>, <a href="https://valine.js.org/">Valine</a> and <a href="https://disqus.com/">Disqus</a>.(Gitalk is recommended)</li><li>Integrated <a href="http://busuanzi.ibruce.info/">Busuanzi Statistics</a>, <code>Google Analytics</code> and post word count statistics.</li><li>Support music playback and video playback on the homepage</li><li>Support the <code>emoji</code> emoticon and use the <code>markdown emoji</code> grammar to directly generate the corresponding emoticon.</li><li>Support <a href="http://www.daovoice.io/">DaoVoice</a>, <a href="https://www.tidio.com/">Tidio</a> online chat.</li></ul><h2 id="Contributor"><a href="#Contributor" class="headerlink" title="Contributor"></a>Contributor</h2><p>Thanks to these contributors, without whom, hexo-theme-matery won’t be this perfect.</p><ul><li><a href="https://github.com/HarborZeng">@HarborZeng</a></li><li><a href="https://github.com/shw2018">@shw2018</a></li><li><a href="https://github.com/L1cardo">@L1cardo</a></li><li><a href="https://github.com/Five-great">@Five-great</a></li></ul><h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><p>You should have a <a href="https://hexo.io/zh-cn/">Hexo</a> blog when you see it here.If not,try to use the hexo and <a href="https://www.appinn.com/markdown/">Markdown</a> to write your blog and post.<br>Click <a href="">here</a> to download master branch of the last stable version of the code.After decompressing,copy the <code>hexo-theme-matery</code> folder<br>to your <code>themes</code> folder of your Hexo.Of course,you can uer <code>Git clone</code> to download in your <code>themes</code> folder.</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git</code></pre><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><h3 id="Modify-theme"><a href="#Modify-theme" class="headerlink" title="Modify theme"></a>Modify theme</h3><p>Modify the value of <code>theme</code> in <code>_config.yml</code> of Hexo’s root folder: <code>theme: hexo-theme-matery</code>.</p><h4 id="Suggestions-for-other-changes-to-the-config-yml"><a href="#Suggestions-for-other-changes-to-the-config-yml" class="headerlink" title="Suggestions for other changes to the _config.yml:"></a>Suggestions for other changes to the <code>_config.yml</code>:</h4><ul><li>Please modify the value of <code>url</code> of <code>_config.yml</code> to your website’s main <code>URL</code> (eg <code>http://xxx.github.io</code>).</li><li>Recommended modify the value of the two <code>per_page</code> to be a multiple of <code>6</code>, such as: <code>12</code>, <code>18</code>, etc. so that the posts list can be displayed well under each screen.</li><li>If you are a Chinese user, it is recommended to change the value of <code>language</code> to <code>zh-CN</code>.</li></ul><h3 id="new-categories-page"><a href="#new-categories-page" class="headerlink" title="new categories page"></a>new categories page</h3><p><code>categories</code> page is to show all of categories. If the <code>source</code> directory of your blog doesn’t have <code>categories/index.md</code> file, you need to new one like this:</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span></code></pre><p>to edit your new page files<code>/source/categories/index.md</code>, you need somethings as follows:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span></code></pre><h3 id="new-tags-page"><a href="#new-tags-page" class="headerlink" title="new tags page"></a>new tags page</h3><p><code>tags</code> page is to show all of tags. If the <code>source</code> directory of your blog doesn’t have <code>tags/index.md</code> file,you need to new one like this:</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span></code></pre><p>to edit your new page files<code>/source/tags/index.md</code>, you need somethings as follows:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-10 18:23:38</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token punctuation">---</span></code></pre><h3 id="new-about-page"><a href="#new-about-page" class="headerlink" title="new about page"></a>new about page</h3><p><code>about</code> page is to show my blog and myself information. If the <code>source</code> directory of your blog doesn’t have <code>about/index.md</code> file, you need to new one like this:</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"about"</span></code></pre><p>to edit your new page files<code>/source/about/index.md</code>, you need somethings as follows:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> about<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token punctuation">---</span></code></pre><h3 id="new-contact-page-Optional"><a href="#new-contact-page-Optional" class="headerlink" title="new contact page (Optional)"></a>new contact page (Optional)</h3><p><code>contact</code> page is to show contact information. If the <code>source</code> directory of your blog doesn’t have <code>contact/index.md</code> file, you need to new one like this:</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"contact"</span></code></pre><p>to edit your new page files<code>/source/contact/index.md</code>, you need somethings as follows:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> contact<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token punctuation">---</span></code></pre><blockquote><p><strong>Note</strong>：The message board depends on a third-party comment system, please <strong>activate</strong> your comment system to be effective. And in the theme <code>_config.yml</code> file, the “<strong>menu</strong>“ of the <code>19</code> to <code>21</code> line is configured, and the comment about the message board cloud be canceled.</p></blockquote><h3 id="new-friends-link-page-Optional"><a href="#new-friends-link-page-Optional" class="headerlink" title="new friends link page (Optional)"></a>new friends link page (Optional)</h3><p>The <code>friends</code> page is a page for displaying <strong>Friendly Links</strong> information. If you don’t have a <code>friends/index.md</code> file in your blog’s <code>source</code> directory, then you need to create a new one. The command is as follows:</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span></code></pre><p>Edit the file <code>/source/friends/index.md</code> you just created, at least you need the following:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> friends<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-12-12 21:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token punctuation">---</span></code></pre><p>Also, create a new <code>_data</code> directory in your blog’s <code>source</code> directory and a new <code>friends.json</code> file in the <code>_data</code> directory. The contents of the file are as follows:</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"MaJang"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"I am not a master, just looking for the master's footsteps."</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Read More"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Blinkfox"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"Hello, I'm blinkfox, I like programming."</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Visit Blog"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"Ordinary steps can also go out of the great journey."</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"Read More"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><h3 id="new-404-page"><a href="#new-404-page" class="headerlink" title="new 404 page"></a>new 404 page</h3><p>If the <code>source</code> directory of your blog doesn’t have <code>404.md</code> file, you need to new one</p><p>to edit your new page files<code>/source/404.md</code>, you need somethings as follows:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token number">404</span><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-05-30 00:00:00</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"404"</span><span class="token key atrule">description</span><span class="token punctuation">:</span> <span class="token string">"Cannot find the page you want :("</span><span class="token punctuation">---</span></code></pre><h3 id="Menu-navigation-configuration"><a href="#Menu-navigation-configuration" class="headerlink" title="Menu navigation configuration"></a>Menu navigation configuration</h3><h4 id="Configure-the-name-of-the-basic-menu-navigation-path-url-and-icon-icon"><a href="#Configure-the-name-of-the-basic-menu-navigation-path-url-and-icon-icon" class="headerlink" title="Configure the name of the basic menu navigation, path url and icon icon."></a>Configure the name of the basic menu navigation, path url and icon icon.</h4><ol><li>The menu navigation name can be Chinese or English (eg: <code>Index</code> or <code>Home</code>)</li><li>Icon icon can be found in <a href="https://fontawesome.com/icons">Font Awesome</a></li></ol><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book</code></pre><h4 id="Secondary-menu-configuration-method"><a href="#Secondary-menu-configuration-method" class="headerlink" title="Secondary menu configuration method"></a>Secondary menu configuration method</h4><p>If you need a secondary menu, you can do the following on the basis of the original basic menu navigation.</p><ol><li>Add the <code>children</code> keyword to the first level menu that needs to add a secondary menu (eg: add <code>children</code> under the <code>About</code> menu)</li><li>Create a secondary menu name, path url and icon icon under <code>children</code>.</li><li>Note that each secondary menu module must be preceded by <code>-</code>.</li><li>Note the indentation format.</li></ol><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book  <span class="token key atrule">Medias</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>list    <span class="token key atrule">children</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Musics        <span class="token key atrule">url</span><span class="token punctuation">:</span> /musics        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>music      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Movies        <span class="token key atrule">url</span><span class="token punctuation">:</span> /movies        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>film      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Books        <span class="token key atrule">url</span><span class="token punctuation">:</span> /books        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>book      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Galleries        <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>image</code></pre><h3 id="Code-highlight"><a href="#Code-highlight" class="headerlink" title="Code highlight"></a>Code highlight</h3><p>Hexo theme uses Hexo’s plugin <a href="https://github.com/ele828/hexo-prism-plugin">hexo-prism-plugin</a> to show the code highlight instead of its own theme.The Installation commands are as follows:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin</code></pre><p>Then,modify the value of <code>highlight.enable</code> to <code>false</code> in <code>_config.yml</code> file of Hexo root folder, and add the configuration of <code>prism</code> plugin as follows:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># default false</span>  custom_css<span class="token punctuation">:</span></code></pre><h3 id="Search"><a href="#Search" class="headerlink" title="Search"></a>Search</h3><p>The theme uses the Hexo plugin <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> to search the content,and the Installation commands are as follows:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save</code></pre><p>Add configuration of <code>_config.yml</code> file in Hexo root folder as follows：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post</code></pre><h3 id="Translate-Chinese-Link-to-Pinyin-Recommend"><a href="#Translate-Chinese-Link-to-Pinyin-Recommend" class="headerlink" title="Translate Chinese Link to Pinyin (Recommend)"></a>Translate Chinese Link to Pinyin (Recommend)</h3><p>Defualt permalinks of Hexo will include Chinese if your atrticle’s title is Chinese. But it’s adverse to <code>SEO</code>, and <code>gitment</code> comments don’t suport Chinese Link as well. We can use the <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> of Hexo plugin to generate permalinks of Chinese Pinyin when generating posts.</p><p>Installation commands are as follows：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save</code></pre><p>Add such configurations in <code>_config.yml</code> file of Hexo:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span></code></pre><blockquote><p><strong>Note</strong>: <a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> can genarate non-Chinese link in addtion to this plugin.</p></blockquote><h3 id="Post-word-count-statistics-plugin-Recommend"><a href="#Post-word-count-statistics-plugin-Recommend" class="headerlink" title="Post word count statistics plugin (Recommend)"></a>Post word count statistics plugin (Recommend)</h3><p>If you want to display the post word count and reading time information in the post detail page, you can install the <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a> plugin.</p><p>Installation commands are as follows：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount</code></pre><p>Then just activate the following configuration items in the theme <code>_config.yml</code> file:</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># set true.</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># set true.</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># set true.</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># set true.</span></code></pre><h3 id="Add-emoji-support-Optional"><a href="#Add-emoji-support-Optional" class="headerlink" title="Add emoji support (Optional)"></a>Add emoji support (Optional)</h3><p>This theme adds support for the <code>emoji</code> emoticon, using the Hexo plugin for <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> to support the generation of the <code>emoji</code> expression, the corresponding <code>markdown emoji</code> syntax (<code>::</code>, for example: <code>:smile:</code>) is converted into a <code>emoji</code> expression that jumps. The installation command is as follows:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save</code></pre><p>Add configuration of <code>_config.yml</code> file in Hexo root folder as follows：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span></code></pre><p>Execute <code>hexo clean &amp;&amp; hexo g</code> to regenerate the blog file, and then you can see the expression you wrote in the <code>emoji</code> grammar in the corresponding position in the article.</p><h3 id="Add-RSS-feed-support-Optional"><a href="#Add-RSS-feed-support-Optional" class="headerlink" title="Add RSS feed support (Optional)"></a>Add RSS feed support (Optional)</h3><p>The theme uses the Hexo plugin <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> to support <code>RSS</code> feed , and the Installation commands are as follows:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save</code></pre><p>Add configuration of <code>_config.yml</code> file in Hexo root folder as follows：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p>Execute <code>hexo clean &amp;&amp; hexo g</code> to regenerate the blog file, and then you can see the <code>atom.xml</code> file in the <code>public</code> folder, indicating that you have successfully installed.</p><h3 id="DaoVoice-online-chat-Optional"><a href="#DaoVoice-online-chat-Optional" class="headerlink" title="DaoVoice online chat (Optional)"></a><a href="http://www.daovoice.io/">DaoVoice</a> online chat (Optional)</h3><p>Go to the official website of <a href="http://www.daovoice.io/">DaoVoice</a>, register and get the <code>app_id</code>. Fill the <code>app_id</code> into the the theme <code>_config.yml</code> file.</p><h3 id="Tidio-online-chat-Optional"><a href="#Tidio-online-chat-Optional" class="headerlink" title="Tidio online chat (Optional)"></a><a href="https://www.tidio.com/">Tidio</a> online chat (Optional)</h3><p>Go to the official website of <a href="https://www.tidio.com/">Tidio</a>, register and get the <code>Public Key</code>. Fill the <code>Public Key</code> into the the theme <code>_config.yml</code> file.</p><h3 id="Modify-website-footer"><a href="#Modify-website-footer" class="headerlink" title="Modify website footer"></a>Modify website footer</h3><p>Website footer may need to be customized, and it is not convenient to make configuration information, So need to modify and process it by yourself. The changes are in the <code>/layout/_partial/footer.ejs</code> file, including the site, the theme used, the amount of traffic and so on.</p><h3 id="Modify-social-links"><a href="#Modify-social-links" class="headerlink" title="Modify social links"></a>Modify social links</h3><p>In the theme <code>_config.yml</code> file, the configurations of <code>QQ</code>, <code>GitHub</code> and mailbox and more are supported by default. In the <code>/layout/_partial/social-link.ejs</code> file of the theme, you can add or modify the social link address as you need. To add a link, please refer to the following code:</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.socialLink.github)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>&lt;%<span class="token punctuation">=</span> theme.socialLink.github %<span class="token punctuation">></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fab fa-github<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span></code></pre><p>You can search social icon such as <code>fab fa-github</code> in <a href="https://fontawesome.com/icons">Font Awesome</a>. There are common social icons you can reference:</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>Note</strong>: The version of <code>Font Awesome</code> is <code>5.11.0</code>.</p></blockquote><h3 id="Configure-music-player-optional"><a href="#Configure-music-player-optional" class="headerlink" title="Configure music player (optional)"></a>Configure music player (optional)</h3><p>To support music playing, you just need activate the <code>_config.yml</code> file of music playing configuration.</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Whether to display the musics</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span>            <span class="token comment" spellcheck="true"># non-fixed mode works</span>    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> Listen to music  <span class="token key atrule">server</span><span class="token punctuation">:</span> netease   <span class="token comment" spellcheck="true"># require music platform: netease, tencent, kugou, xiami, baidu</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> playlist    <span class="token comment" spellcheck="true"># require song, playlist, album, search, artist</span>  <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token number">503838841     </span><span class="token comment" spellcheck="true"># require song id / playlist id / album id / search keyword</span>  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false      </span><span class="token comment" spellcheck="true"># enable fixed mode</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false   </span><span class="token comment" spellcheck="true"># audio atuoplay</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> '<span class="token comment" spellcheck="true">#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span>       <span class="token comment" spellcheck="true"># player loop play, values: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'random'</span>   <span class="token comment" spellcheck="true"># player play order, values: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span>   <span class="token comment" spellcheck="true"># values: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7       </span><span class="token comment" spellcheck="true"># default volume, notice that player will remember user setting, default volume will not work after user set volume themselves</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">true  </span><span class="token comment" spellcheck="true"># indicate whether list should folded at first</span></code></pre><blockquote><p><code>server</code> values :  <code>netease</code> (NetEase  cloud music) , <code>tencent</code> (QQMusic) , <code>kugou</code> (KuGouMusic) , <code>xiami</code> </p><p>(XiamMusic) , <code>baidu</code> (BaiduMusic)</p><p><code>type</code> values : <code>song</code>  ,   <code>playlist</code> , <code>album</code> , <code>search</code> , <code>artist</code> </p><p>For example to get the <code>id</code>:open NetEase cloud music in the browser , click the playlist of my love , there will a string of </p><p>numbers  in the browser`s address bar  ,  the <code>playlist</code>`s <code>id</code> just is the string of numbers.</p></blockquote><h2 id="Post-Front-matter"><a href="#Post-Front-matter" class="headerlink" title="Post Front-matter"></a>Post Front-matter</h2><h3 id="Detailed-Front-matter-options"><a href="#Detailed-Front-matter-options" class="headerlink" title="Detailed Front-matter options"></a>Detailed Front-matter options</h3><p>Everything in the Front-matter option is <strong>not required</strong>. But I still recommend at least filling in the values of <code>title</code> and <code>date</code>.</p><table><thead><tr><th>Options</th><th>Defaults</th><th>Description</th></tr></thead><tbody><tr><td>title</td><td>Markdown’s file title</td><td>Post title, it is highly recommended to fill in this option</td></tr><tr><td>date</td><td>Date and time when the file created</td><td>Publish time, it is highly recommended to fill in this option, and it is best to ensure that it is globally unique</td></tr><tr><td>author</td><td><code>author</code> in root <code>_config.yml</code></td><td>Post author</td></tr><tr><td>img</td><td>a value in <code>featureImages</code></td><td>Post feature image，For exampl: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>Recommended post (whether the post is topped), if the <code>top</code> value is <code>true</code>, it will be recommended as a homepage post.</td></tr><tr><td>cover</td><td><code>false</code></td><td>The <code>v1.0.2</code> version is added to indicate whether the post needs to be added to the homepage carousel cover.</td></tr><tr><td>coverImg</td><td>null</td><td>The new version of <code>v1.0.2</code> indicates that the post needs to display the image path on the cover of the homepage. If not, the default image of the post is used by default.</td></tr><tr><td>password</td><td>null</td><td>The post read the password. If you want to set the reading verification password for the article, you can set the value of <code>password</code>, which must be encrypted with <code>SHA256</code> to prevent others from seeing it. The premise is that the <code>verifyPassword</code> option is activated in the theme’s <code>config.yml</code></td></tr><tr><td>toc</td><td><code>true</code></td><td>Whether TOC is turned on or not, you can turn off the TOC function for an article. The premise is that the <code>toc</code> option is activated in the theme’s <code>config.yml</code></td></tr><tr><td>mathjax</td><td><code>false</code></td><td>Whether to enable math formula support, whether this article starts <code>mathjax</code>, and you need to open it in the theme <code>_config.yml</code> file.</td></tr><tr><td>summary</td><td>null</td><td>Post summary, custom post summary content, if the attribute has a value, the post card summary will display the text, otherwise the program will automatically intercept part of the article as a summary</td></tr><tr><td>categories</td><td>null</td><td>Article classification, the classification of this topic represents a macroscopically large classification, only one article is recommended for one classification.</td></tr><tr><td>tags</td><td>null</td><td>Post label, a post can have multiple labels</td></tr><tr><td>keywords</td><td>Post Title</td><td>Post key Words With SEO</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>Post reprint policy, value could be one of cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint and pay</td></tr></tbody></table><blockquote><p><strong>Note</strong>: </p><ol><li>post’s featured piature will take remainder if not writing the <code>img</code> property,and chose the featured picture of theme to let all of post’s picture <strong>have their own characteristics</strong>.</li><li>The value of <code>date</code> should try to ensure that each article is unique, because <code>Gitalk</code> and <code>Gitment</code> recognize <code>id</code> in this topic are uniquely identified by the value of <code>date</code>.</li><li>If you want to set the ability to read the verification password for the article, you should not only set the value of the password with SHA256 encryption in Front-matter, but also activate the configuration in the theme <code>_config.yml</code>.</li><li>you can define reprint policy for a single article in the front-matter of the specific md file using this key: reprintPolicy</li></ol></blockquote><p>The following are examples of the post’s <code>Front-matter</code>.</p><h3 id="The-simplest-example"><a href="#The-simplest-example" class="headerlink" title="The simplest example"></a>The simplest example</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme Theme introduction<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token punctuation">---</span></code></pre><h3 id="The-most-comprehensive-example"><a href="#The-most-comprehensive-example" class="headerlink" title="The most comprehensive example"></a>The most comprehensive example</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme Theme introduction<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> Qi Zhao<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> This is the content of your custom post summary. If there is a value for this attribute<span class="token punctuation">,</span> the post card summary will display the text<span class="token punctuation">,</span> otherwise the program will automatically intercept part of the post content as a summary.<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span></code></pre><h2 id="Screenshot"><a href="#Screenshot" class="headerlink" title="Screenshot"></a>Screenshot</h2><h3 id="Home"><a href="#Home" class="headerlink" title="Home"></a>Home</h3><p><img src="http://static.blinkfox.com/matery-20181202-1.png" alt="首页"></p><p><img src="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章"></p><p><img src="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-7.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-8.png" alt="首页文章列表"></p><h2 id="Custom-modification"><a href="#Custom-modification" class="headerlink" title="Custom modification"></a>Custom modification</h2><p>You can modify some custom modification in <code>_config.yml</code> as follows:</p><ul><li>Menu</li><li>My dream</li><li>Home music player and video player configuration</li><li>Whether to display the title of the recommended posts</li><li><code>favicon</code> and <code>Logo</code></li><li>profiles</li><li>TOC</li><li>post rewards</li><li>Append copyright information when copying article content</li><li>MathJax</li><li>Post word count, reading times</li><li>the ‘love’ effect of clicking on the page</li><li>My Projects</li><li>My Skills</li><li>My Gallery</li><li>Gitalk, Gitment, Valine and Disqus</li><li><a href="http://busuanzi.ibruce.info/">Busuanzi Statistics</a> And Google Analytics</li><li>The map of default featured pictures. The theme will take remainde according to <code>hashcode</code> of post title if the post dose not set featured piactures.</li></ul><p><strong>I think everyone should have their own style and feature of blog</strong>。if you are not satisfiled with functions and theme color,you can modify by yourself,and more free functions and deatil need to be modified by modify source code when it is hard to be finished in <code>_config.yml</code>.</p><h3 id="modeing-theme-color"><a href="#modeing-theme-color" class="headerlink" title="modeing theme color"></a>modeing theme color</h3><p>Search <code>.bg-color</code> to modify background color in <code>/source/css/matery.css</code> in theme file：</p><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* The overall background color, including navigation, mobile navigation, footer, tab, etc.. */</span><span class="token selector"><span class="token class">.bg-color</span> </span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token hexcode">#4cbf30</span> <span class="token number">0%</span>, <span class="token hexcode">#0f9d58</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">/* Dynamically switch background colors. */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* Dynamically switch background colors. */</span><span class="token punctuation">}</span></code></pre><h3 id="Modify-banner-picture-and-post’s-featured-pictures"><a href="#Modify-banner-picture-and-post’s-featured-pictures" class="headerlink" title="Modify banner picture and post’s featured pictures"></a>Modify banner picture and post’s featured pictures</h3><p>You can change <code>banner</code> pictures in <code>/source/medias/banner</code> as you like .Theme code can switch  dynamically every day and just need 7 pictures.If you master <code>JavaScript</code>,you can change it to your favorite swithing logic,such as Random switching.The code of switching <code>banner</code>is in <code>&lt;script&gt;&lt;/script&gt;</code> of <code>/layout/_partial/bg-cover-content.ejs</code>file.</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>There are 24 featured pictures in <code>/source/medias/featureimages</code>,you can add or delete,and modify it in <code>_config.yml</code> at the sametime.</p><h2 id="Changelog"><a href="#Changelog" class="headerlink" title="Changelog"></a>Changelog</h2><ul><li>v1.3.2<ul><li>Added support for traditional characters;</li><li>Added 404 page;</li><li>Fixed other minor issues；</li></ul></li><li>v1.3.1<ul><li>Added <code>kbd</code> style;</li><li>Fixed an issue with incorrect links in the word cloud when deploying subdirectories;</li><li>Removed vertical lines in TOC;</li><li>Fixed the problem that the <code>tooltip</code> in the home icon is not displayed;</li><li>Fixed the issue that switching banners every day does not take effect when generating static files;</li><li>Updated some configurations in <code>miniValine</code>;</li></ul></li><li>v1.3.0<ul><li>new supporting subdirectory deployment（eg: <code>Gitee</code>）；</li><li>new <code>MiniValine</code> comment system；</li><li>new <code>jsdelivr</code> supported；</li><li>Fixed many bugs；</li></ul></li><li>v1.2.2<ul><li>Add the function of customizing post <code>keywords</code>;<br>&nbsp;&nbsp;- Add the function and configuration of static ribbon click switch;<br>&nbsp;&nbsp;- Set the word count, ribbon and site running time as <code>false</code> by default;<br>&nbsp;&nbsp;- Modify the meta attribute of the post’s <code>description</code> to read the post’s <code>summary</code> attribute first;<br>&nbsp;&nbsp;- Modified HTML tag of article title from <code>div</code> to<code> h1</code> title;<br>&nbsp;&nbsp;- Fixed the problem of incorrect footer <code>year</code> display;<br>&nbsp;&nbsp;- Removed redundant <code>setTimeout</code> js code from site runtime;</li></ul></li><li>v1.2.1<ul><li>Added TOC’s expand directory level settings and scroll bar function to prevent directory overflow when there are many directories;</li><li>Modified the display mode of the homepage to the previous mode;</li><li>Fixed the problem that the home button has no border;</li><li>Fixed an issue where the homepage card was still generated when the music and bottom suction modes, videos, recommended articles, etc. were not activated;</li><li>Fixed the problem that wordCount plugin is not installed, and modified some configurations;</li><li>Fixed the issue that the page does not display music when there are single quotes in the JSON configuration of the music;</li><li>Fixed the problem of tag cloud link failure under Hexo4.0;</li></ul></li><li>v1.2.0<ul><li>Added online chat function of <a href="http://www.daovoice.io/">DaoVoice</a> and <a href="https://www.tidio.com/">Tidio</a>;</li><li>Added the ability to have two levels of menus;</li><li>Added a subtitle for typing effects;</li><li>Added the ability to preload web content;</li><li>Added the configuration function of the home banner whether to switch daily;</li><li>Added the ability to display ICP filing information, which is not enabled by default;</li><li>Added configuration for Baidu analysis;</li><li>Added language display, one-click copy, display line number and other functions of the code block;</li><li>Added the ability to customize the configuration of the home page car map and recommended articles;</li><li>Added article page to display update date;</li><li>Added an icon for the reload rule;</li><li>Modified the layout and display of the sharing;</li><li>Upgraded and updated versions of some dependent libraries;</li><li>other details to modify and optimize;</li></ul></li><li>v1.1.0<ul><li>Added support for <code>emoji</code>;</li><li>Added site run time statistics and configuration;</li><li>Added the function of message board, it is not enabled by default;</li><li>Added <code>Twitter</code>, <code>Facebook</code>, and <code>zhihu</code> social links;</li><li>Updated the version of <code>Valine</code> to the latest version;</li><li>modification of other minor details;</li></ul></li><li>v1.0.4<ul><li>Added the ability to customize the reprint rules for each post;</li><li>Fix the problem that the custom summary of the previous page and the next page does not display;</li><li>Fixed the problem that the link of the friends link was misplaced and changed to the layout of the waterfall stream;</li><li>Other minor bugs fixes;</li></ul></li><li>v1.0.3<ul><li>Added <code>TOC</code> expansion, shrink button and related configuration, this button is displayed by default;</li></ul></li><li>v1.0.2<ul><li>Upgraded the <a href="https://materializecss.com/">Materialize</a> framework version to <code>1.0.0</code>, refactoring and modifying some files or problems during the upgrade process;</li><li>Added a full-screen carousel effect on the front cover of the home page to set more important posts to the home page carousel;</li><li>Fix the first button on the front page is Chinese;</li><li>Fixed an issue where clicking search input on the iPhone to get focus;</li><li>Fixed an issue where the page was enlarged after the input box on the iPhone got focus;</li><li>Fix some posts or UI display issues;</li></ul></li><li>v1.0.1<ul><li>Adjust the file request path of <code>css</code> and <code>js</code> in the <code>_config.yml</code> of the theme, so that you can quickly configure their own CDN;</li><li>Whether the new code is configurable or not, the default is a line break;</li><li>The <code>TOC</code> function is activated by default, and the <code>Front-matter</code> configuration option for <code>TOC</code> is turned off for a post;</li><li>Fixed an issue where the highlighted directory option was inaccurate when scrolling through the post;</li><li>Remove the search box under <code>IOS</code> to automatically get the focus attribute, preventing the view from moving up after automatically getting the focus;</li></ul></li><li>v1.0.0<ul><li>Added all the basic features;</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> Web </category>
          
          <category> Nojs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Web </tag>
            
            <tag> Nojs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nmp速度优化</title>
      <link href="/2021/07/22/nmp-su-du-you-hua/"/>
      <url>/2021/07/22/nmp-su-du-you-hua/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="nmp速度优化"><a href="#nmp速度优化" class="headerlink" title="nmp速度优化"></a>nmp速度优化</h2><blockquote><p>为啥要进行npm优化？因为利用nmp下载插件的下载速度着实是有点慢。<br>由于下面内容会安装较多的插件，建议先更改npm仓库地址，以便能更快的安装插件</p></blockquote><ul><li>阿里的淘宝团队在国内做了个跟npm仓库一样的镜像叫cnpm。</li><li><code>淘宝镜像</code>与npm官方包的同步频率目前为10分钟一次，来保证尽量与官方服务同步。</li><li>所以二者可以说是一样，不用担心有什么差别。</li></ul><hr><p><strong>通过改变地址来使用淘宝镜像（推介）</strong><br>npm的默认仓库地址是 <a href="https://registry.npmjs.org/">https://registry.npmjs.org/</a><br>可以使用以下命令查看当前npm的仓库地址</p><pre class=" language-csharp"><code class="language-csharp"><span class="token number">1</span> npm config <span class="token keyword">get</span> registry</code></pre><p>可以使用以下命令来改变默认下载地址，从而达到不安装cnpm就能采用淘宝镜像的目的，然后使用上面的get命令查看是否设置成功。</p><pre class=" language-csharp"><code class="language-csharp"><span class="token number">1</span> npm config <span class="token keyword">set</span> registry https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org</code></pre><hr><p><strong>安装CNPM</strong><br>安装cnpm，命令：</p><pre class=" language-csharp"><code class="language-csharp"><span class="token number">1</span> npm install <span class="token operator">-</span>g cnpm <span class="token operator">--</span>registry<span class="token operator">=</span>https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org</code></pre><p>安装后，使用以下命令测试是否安装成功</p><pre class=" language-csharp"><code class="language-csharp"><span class="token number">1</span> cnpm <span class="token operator">-</span>v</code></pre><p>成功后，以后都使用<code>cnpm</code>代替以前<code>npm</code>来执行命令！</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片懒加载</title>
      <link href="/2021/07/22/tu-pian-lan-jia-zai/"/>
      <url>/2021/07/22/tu-pian-lan-jia-zai/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>参考：<a href="https://blog.csdn.net/alex8046/article/details/50388050">图片预加载与图片懒加载（缓载）的区别与实现</a></p><ul><li>图片预加载：顾名思义，图片预加载就是在网页全部加载之前，提前加载图片。当用户需要查看时可直接从本地缓存中渲染，以提供给用户更好的体验，减少等待的时间。否则，如果一个页面的内容过于庞大，没有使用预加载技术的页面就会长时间的展现为一片空白，这样浏览者可能以为图片预览慢而没兴趣浏览，把网页关掉，这时，就需要图片预加载。当然这种做法实际上牺牲了服务器的性能换取了更好的用户体验。</li><li>图片懒加载（缓载）：延迟加载图片或符合某些条件时才加载某些图片。这样做的好处是减少不必要的访问数据库或延迟访问数据库的次数，因为每次访问数据库都是比较耗时的即只有真正使用该对象的数据时才会创建。懒加载的主要目的是作为服务器前端的优化，减少请求数或延迟请求数。</li></ul><p><strong>预加载与懒加载的区别之处：</strong><br>两者的行为是相反的，一个是提前加载，一个是迟缓甚至不加载。懒加载对服务器前端有一定的缓解压力作用，预载则会增加服务器前端压力。</p><p>使用图片懒加载需要安装插件：hexo-lazyload-image<br>在站点根目录执行下面的命令：</p><pre class=" language-csharp"><code class="language-csharp">$ npm install hexo<span class="token operator">-</span>lazyload<span class="token operator">-</span>image <span class="token operator">--</span>save</code></pre><p>之后在站点配置文件下添加下面的代码：</p><pre class=" language-csharp"><code class="language-csharp"><span class="token number">1</span> lazyload<span class="token punctuation">:</span><span class="token number">2</span>   enable<span class="token punctuation">:</span> <span class="token keyword">true</span>  # 是否开启图片懒加载<span class="token number">3</span>   onlypost<span class="token punctuation">:</span> <span class="token keyword">false</span>  # 是否只对文章的图片做懒加载<span class="token number">4</span>   loadingImg<span class="token punctuation">:</span> # eg <span class="token punctuation">.</span><span class="token operator">/</span>images<span class="token operator">/</span>loading<span class="token punctuation">.</span>gif</code></pre><p>最后执行hexo clean &amp;&amp; hexo g &amp;&amp; hexo s就可以看到效果了。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>炫彩个人博客</title>
      <link href="/2021/07/20/xuan-cai-ge-ren-bo-ke/"/>
      <url>/2021/07/20/xuan-cai-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>欢迎来到<a href="https://anzhiruoxi123.github.io/">鸿鹄会</a>让我们一起学习吧！<br>我的邮箱<a href="https://anzhiruoxi123.github.io/">2779372950@qq.com</a></p><h2 id="最快速地搭建炫丽的个人网站or博客"><a href="#最快速地搭建炫丽的个人网站or博客" class="headerlink" title="最快速地搭建炫丽的个人网站or博客"></a>最快速地搭建炫丽的个人网站or博客</h2><h4 id="1-nodejs，Git环境搭建："><a href="#1-nodejs，Git环境搭建：" class="headerlink" title="1.nodejs，Git环境搭建："></a>1.nodejs，Git环境搭建：</h4><ul><li><a href="https://blog.csdn.net/qq_43285335/article/details/90696126">nodejs搭建教程:</a></li><li>注意了，像Git这种服务器在国外的东西，它的官网下载这个软件会非常慢，建议直接在百度上搜<br>索git下载与安装，各种软件园都能直接快速下载，留一下版本最好不要太旧就行。</li><li><a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">git搭建教程：</a></li><li><a href="https://jingyan.baidu.com/article/e8cdb32b0ce12137042bad51.html">补充参考文档（可能你会用到）：</a></li><li><a href="https://www.cnblogs.com/luyuandatabase/p/12145707.html">配置淘宝云</a><h4 id="2-注册GitHub账号并创建仓库"><a href="#2-注册GitHub账号并创建仓库" class="headerlink" title="2.注册GitHub账号并创建仓库"></a>2.注册GitHub账号并创建仓库</h4></li><li>1.注册就不用我说了，创建仓库视频里有，然后这个也很简单，不会就百度（应该没人去百度<br>的，太简单了）</li><li>2.格式要求：gfyuan.github.io</li><li>3.下面两个东西选其一我在视频里面没有演示，因为我早已经弄好了，你们看着弄。</li><li>4.<a href="https://www.xuanfengge.com/using-ssh-key-link-github-photo-tour.html">参考文档（可能用到）——GitHub的ssh密匙添加：</a></li><li>5.<a href="https://www.jianshu.com/p/3f4b2ede5a93">参考文档（可能用到）——Gitee的ssh密匙添加：</a><h4 id="3-快速利用hexo搭建博客："><a href="#3-快速利用hexo搭建博客：" class="headerlink" title="3.快速利用hexo搭建博客："></a>3.快速利用hexo搭建博客：</h4></li><li>1.<a href="https://hexoscript.gitbook.io/hexo-script/">脚本教程</a></li><li>2.<a href="https://blog.csdn.net/jspnetcn/article/details/104111651">matery主题安装及优化</a><br><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md">matery主题官网：</a><h4 id="博客搭建完成"><a href="#博客搭建完成" class="headerlink" title="博客搭建完成"></a>博客搭建完成</h4><a href="https://anzhiruoxi123.github.io/">我的博客</a><h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4></li><li>自行下载</li><li>vs code</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>注册验证</title>
      <link href="/2020/10/15/zhu-ce-yan-zheng/"/>
      <url>/2020/10/15/zhu-ce-yan-zheng/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>欢迎来到<a href="https://anzhiruoxi123.github.io/">鸿鹄会</a>让我们一起学习吧！<br>我的邮箱<a href="https://anzhiruoxi123.github.io/">2779372950@qq.com</a></p><h5 id="编写程序，模拟输出简单的非刷新文件进度条。"><a href="#编写程序，模拟输出简单的非刷新文件进度条。" class="headerlink" title="编写程序，模拟输出简单的非刷新文件进度条。"></a>编写程序，模拟输出简单的非刷新文件进度条。</h5><h6 id="要求按照要求执行百分百将整个计划为100个单位，每执行10-输出一次进度条，每行输出包含进度百分百。"><a href="#要求按照要求执行百分百将整个计划为100个单位，每执行10-输出一次进度条，每行输出包含进度百分百。" class="headerlink" title="要求按照要求执行百分百将整个计划为100个单位，每执行10%输出一次进度条，每行输出包含进度百分百。"></a>要求按照要求执行百分百将整个计划为100个单位，每执行10%输出一次进度条，每行输出包含进度百分百。</h6><h6 id="代表已经完成部分（）和未完成部分（-）的两种字符，以及一个跟随完整度前进的小箭头，如下：-10-gt-…………"><a href="#代表已经完成部分（）和未完成部分（-）的两种字符，以及一个跟随完整度前进的小箭头，如下：-10-gt-…………" class="headerlink" title="代表已经完成部分（）和未完成部分（..）的两种字符，以及一个跟随完整度前进的小箭头，如下：%10[->………….]"></a>代表已经完成部分（<strong>）和未完成部分（..）的两种字符，以及一个跟随完整度前进的小箭头，如下：%10[</strong>-&gt;………….]</h6><pre class=" language-csharp"><code class="language-csharp">$ import time$ scsle<span class="token operator">=</span><span class="token number">10</span>$ <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"===========开始执行==========="</span><span class="token punctuation">)</span>$ i<span class="token operator">=</span><span class="token number">0</span>$ <span class="token keyword">while</span> i<span class="token operator">&lt;=</span><span class="token number">10</span><span class="token punctuation">:</span>$     a <span class="token operator">=</span> <span class="token string">"**"</span><span class="token operator">*</span>i$     b <span class="token operator">=</span> <span class="token string">".."</span><span class="token operator">*</span><span class="token punctuation">(</span>scsle<span class="token operator">-</span>i<span class="token punctuation">)</span>$     c <span class="token operator">=</span> <span class="token punctuation">(</span>i<span class="token operator">/</span>scsle<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span>$     <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"%{:^3.0f}[{}->{}]"</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>$     time<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>$     i<span class="token operator">+</span><span class="token operator">=</span><span class="token number">1</span>$ <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"===========执行结束==========="</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文本进度条</title>
      <link href="/2020/10/15/wen-ben-jin-du-tiao/"/>
      <url>/2020/10/15/wen-ben-jin-du-tiao/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>欢迎来到<a href="https://anzhiruoxi123.github.io/">鸿鹄会</a>让我们一起学习吧！<br>我的邮箱<a href="https://anzhiruoxi123.github.io/">2779372950@qq.com</a></p><h4 id="编程一个注册验证程序，设定如下条件"><a href="#编程一个注册验证程序，设定如下条件" class="headerlink" title="编程一个注册验证程序，设定如下条件"></a>编程一个注册验证程序，设定如下条件</h4><h5 id="（1）用户名（以“—”开头，3-30个字符"><a href="#（1）用户名（以“—”开头，3-30个字符" class="headerlink" title="（1）用户名（以“—”开头，3-30个字符"></a>（1）用户名（以“—”开头，3-30个字符</h5><h5 id="（2）密码（有下划线，数字，字母共同组成，8-16个字符）"><a href="#（2）密码（有下划线，数字，字母共同组成，8-16个字符）" class="headerlink" title="（2）密码（有下划线，数字，字母共同组成，8-16个字符）"></a>（2）密码（有下划线，数字，字母共同组成，8-16个字符）</h5><pre class=" language-csharp"><code class="language-csharp">$ import re$ user_name <span class="token operator">=</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名（以“—”开头，3-30个字符）"</span><span class="token punctuation">)</span>$ password <span class="token operator">=</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token string">"请输入密码（有下划线，数字，字母共同组成，8-16个字符）："</span><span class="token punctuation">)</span>$ <span class="token keyword">if</span> user_name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">'_'</span><span class="token punctuation">:</span>$     <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"用户名请以下划线开头"</span><span class="token punctuation">)</span>$ elif <span class="token number">3</span> <span class="token operator">></span> <span class="token function">len</span><span class="token punctuation">(</span>user_name<span class="token punctuation">)</span> or <span class="token number">30</span> <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>user_name<span class="token punctuation">)</span><span class="token punctuation">:</span>$     <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"用户名长度超出限定"</span><span class="token punctuation">)</span>$ # elif <span class="token number">8</span> <span class="token operator">></span> <span class="token function">len</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span> or <span class="token number">16</span> <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">:</span>$ #     <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"密码长度超出限定限制"</span><span class="token punctuation">)</span>$ elif password<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>$     <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"密码中未有下滑线"</span><span class="token punctuation">)</span>$ <span class="token keyword">else</span><span class="token punctuation">:</span>$     password <span class="token operator">=</span> password<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">,</span> <span class="token string">'1'</span><span class="token punctuation">)</span>$     ret <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token string">"^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]{8,16})$"</span><span class="token punctuation">,</span> password<span class="token punctuation">)</span>$     <span class="token keyword">if</span> ret<span class="token punctuation">:</span>$        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"恭喜您，登录成功！用户名："</span><span class="token punctuation">,</span> user_name<span class="token punctuation">,</span> <span class="token string">"密码："</span><span class="token punctuation">,</span> password<span class="token punctuation">)</span>$     <span class="token keyword">else</span><span class="token punctuation">:</span>$         <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"密码未按要求，注册失败！"</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>索引和视图</title>
      <link href="/2020/10/15/suo-yin-he-shi-tu/"/>
      <url>/2020/10/15/suo-yin-he-shi-tu/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>欢迎来到<a href="https://anzhiruoxi123.github.io/">鸿鹄会</a>让我们一起学习吧！<br>我的邮箱<a href="https://anzhiruoxi123.github.io/">2779372950@qq.com</a></p><h6 id="1-使用SQL语句ALTER-TABLE分别删除studentsdb数据库的student-info表、grade表、curriculum表的主键索引。"><a href="#1-使用SQL语句ALTER-TABLE分别删除studentsdb数据库的student-info表、grade表、curriculum表的主键索引。" class="headerlink" title="1. 使用SQL语句ALTER TABLE分别删除studentsdb数据库的student_info表、grade表、curriculum表的主键索引。"></a>1. 使用SQL语句ALTER TABLE分别删除studentsdb数据库的student_info表、grade表、curriculum表的主键索引。</h6><pre class=" language-csharp"><code class="language-csharp"> ALTER TABLE student_info DROP PRIMARY KEY ALTER TABLE grade DROP PRIMARY KEY ALTER TABLE curriculum DROP PRIMARY KEY </code></pre><h6 id="2-使用SQL语句为curriculum表的课程编号创建唯一性索引，命名为cno-idx。"><a href="#2-使用SQL语句为curriculum表的课程编号创建唯一性索引，命名为cno-idx。" class="headerlink" title="2. 使用SQL语句为curriculum表的课程编号创建唯一性索引，命名为cno_idx。"></a>2. 使用SQL语句为curriculum表的课程编号创建唯一性索引，命名为cno_idx。</h6><pre class=" language-csharp"><code class="language-csharp">SELECT <span class="token operator">*</span> FROM curriculum a<span class="token punctuation">;</span>CREATE UNIQUE INDEX  cno_idx    ON <span class="token function">curriculum</span><span class="token punctuation">(</span>课程编号<span class="token punctuation">)</span></code></pre><h6 id="3-使用SQL语句为grade表的“分数”字段创建一个普通索引，命名为grade-idx。"><a href="#3-使用SQL语句为grade表的“分数”字段创建一个普通索引，命名为grade-idx。" class="headerlink" title="3. 使用SQL语句为grade表的“分数”字段创建一个普通索引，命名为grade_idx。"></a>3. 使用SQL语句为grade表的“分数”字段创建一个普通索引，命名为grade_idx。</h6><pre class=" language-csharp"><code class="language-csharp"> CREATE  INDEX  grade_idx     ON <span class="token function">grade</span><span class="token punctuation">(</span>分数<span class="token punctuation">)</span></code></pre><h6 id="4-使用SQL语句为grade表的“学号”和“课程编号”字段创建一个复合唯一索引，命名为grade-sid-cid-idx。"><a href="#4-使用SQL语句为grade表的“学号”和“课程编号”字段创建一个复合唯一索引，命名为grade-sid-cid-idx。" class="headerlink" title="4. 使用SQL语句为grade表的“学号”和“课程编号”字段创建一个复合唯一索引，命名为grade_sid_cid_idx。"></a>4. 使用SQL语句为grade表的“学号”和“课程编号”字段创建一个复合唯一索引，命名为grade_sid_cid_idx。</h6><pre class=" language-csharp"><code class="language-csharp">CREATE INDEX  grade_sid_cid_idx    ON <span class="token function">grade</span><span class="token punctuation">(</span>学号<span class="token punctuation">,</span>课程编号<span class="token punctuation">)</span></code></pre><h6 id="5-查看grade表上的索引信息。"><a href="#5-查看grade表上的索引信息。" class="headerlink" title="5. 查看grade表上的索引信息。"></a>5. 查看grade表上的索引信息。</h6><pre class=" language-csharp"><code class="language-csharp">SHOW INDEX FROM grade</code></pre><h6 id="6-使用SQL语句删除索引grade-idx。再次查看grade表上的索引信息。"><a href="#6-使用SQL语句删除索引grade-idx。再次查看grade表上的索引信息。" class="headerlink" title="6. 使用SQL语句删除索引grade_idx。再次查看grade表上的索引信息。"></a>6. 使用SQL语句删除索引grade_idx。再次查看grade表上的索引信息。</h6><pre class=" language-csharp"><code class="language-csharp">DROP INDEX grade_idx ON gradeSHOW INDEX FROM grade</code></pre><h6 id="7-使用SQL语句CREATE-VIEW建立一个名为v-stu-c的视图，显示学生的学号、姓名、所学课程的课程编号，并利用视图查询学号为0003的学生情况。"><a href="#7-使用SQL语句CREATE-VIEW建立一个名为v-stu-c的视图，显示学生的学号、姓名、所学课程的课程编号，并利用视图查询学号为0003的学生情况。" class="headerlink" title="7. 使用SQL语句CREATE VIEW建立一个名为v_stu_c的视图，显示学生的学号、姓名、所学课程的课程编号，并利用视图查询学号为0003的学生情况。"></a>7. 使用SQL语句CREATE VIEW建立一个名为v_stu_c的视图，显示学生的学号、姓名、所学课程的课程编号，并利用视图查询学号为0003的学生情况。</h6><pre class=" language-csharp"><code class="language-csharp">CREATE VIEW v_stu_cAS SELECT student_info<span class="token punctuation">.</span>`学号`<span class="token punctuation">,</span>student_info<span class="token punctuation">.</span>`姓名`<span class="token punctuation">,</span>grade<span class="token punctuation">.</span>课程编号 FROM student_info<span class="token punctuation">,</span>grade WHERE student_info<span class="token punctuation">.</span>`学号`<span class="token operator">=</span> grade<span class="token punctuation">.</span>`学号`SELECT <span class="token operator">*</span> FROM v_stu_c    WHERE 学号<span class="token operator">=</span><span class="token string">'0003'</span></code></pre><h6 id="8-基于student-info表、curriculum表和grade表，建立一个名为v-stu-g的视图，视图包括所有学生的学号、姓名、课程名称、分数。使用视图v-stu-g查询学号为0001的学生的课程平均分。"><a href="#8-基于student-info表、curriculum表和grade表，建立一个名为v-stu-g的视图，视图包括所有学生的学号、姓名、课程名称、分数。使用视图v-stu-g查询学号为0001的学生的课程平均分。" class="headerlink" title="8. 基于student_info表、curriculum表和grade表，建立一个名为v_stu_g的视图，视图包括所有学生的学号、姓名、课程名称、分数。使用视图v_stu_g查询学号为0001的学生的课程平均分。"></a>8. 基于student_info表、curriculum表和grade表，建立一个名为v_stu_g的视图，视图包括所有学生的学号、姓名、课程名称、分数。使用视图v_stu_g查询学号为0001的学生的课程平均分。</h6><pre class=" language-csharp"><code class="language-csharp">CREATE VIEW v_stu_gAS SELECT student_info<span class="token punctuation">.</span>`学号`<span class="token punctuation">,</span>student_info<span class="token punctuation">.</span>`姓名`<span class="token punctuation">,</span>课程名称<span class="token punctuation">,</span>grade<span class="token punctuation">.</span>`分数` FROM curriculum<span class="token punctuation">,</span>grade<span class="token punctuation">,</span>student_info     WHERE student_info<span class="token punctuation">.</span>`学号`<span class="token operator">=</span>grade<span class="token punctuation">.</span>`学号`AND grade<span class="token punctuation">.</span>`课程编号`<span class="token operator">=</span>curriculum<span class="token punctuation">.</span>`课程编号`SELECT <span class="token function">AVG</span><span class="token punctuation">(</span>分数<span class="token punctuation">)</span> FROM v_stu_g    WHERE 学号<span class="token operator">=</span><span class="token string">'0001'</span></code></pre><h6 id="9-使用SQL语句修改视图v-stu-g，显示学生的学号、姓名、性别。"><a href="#9-使用SQL语句修改视图v-stu-g，显示学生的学号、姓名、性别。" class="headerlink" title="9. 使用SQL语句修改视图v_stu_g，显示学生的学号、姓名、性别。"></a>9. 使用SQL语句修改视图v_stu_g，显示学生的学号、姓名、性别。</h6><pre class=" language-csharp"><code class="language-csharp">ALTER VIEW v_stu_gAS SELECT student_info<span class="token punctuation">.</span>`学号`<span class="token punctuation">,</span>student_info<span class="token punctuation">.</span>`姓名`<span class="token punctuation">,</span>student_info<span class="token punctuation">.</span>`性别` FROM student_infoSELECT <span class="token operator">*</span> FROM v_stu_g</code></pre><h6 id="10-利用视图v-stu-g为student-info表添加一行数据：学号为0010、姓名为陈婷婷、性别为女。"><a href="#10-利用视图v-stu-g为student-info表添加一行数据：学号为0010、姓名为陈婷婷、性别为女。" class="headerlink" title="10.利用视图v_stu_g为student_info表添加一行数据：学号为0010、姓名为陈婷婷、性别为女。"></a>10.利用视图v_stu_g为student_info表添加一行数据：学号为0010、姓名为陈婷婷、性别为女。</h6><pre class=" language-csharp"><code class="language-csharp">INSERT INTO <span class="token function">v_stu_g</span><span class="token punctuation">(</span>学号<span class="token punctuation">,</span>姓名<span class="token punctuation">,</span>性别<span class="token punctuation">)</span> <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0010'</span><span class="token punctuation">,</span><span class="token string">'陈婷婷'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">)</span>SELECT <span class="token operator">*</span> FROM v_stu_g</code></pre><h6 id="11-利用视图v-stu-g删除学号为0010的学生记录。"><a href="#11-利用视图v-stu-g删除学号为0010的学生记录。" class="headerlink" title="11.利用视图v_stu_g删除学号为0010的学生记录。"></a>11.利用视图v_stu_g删除学号为0010的学生记录。</h6><pre class=" language-csharp"><code class="language-csharp">DELETE FROM v_stu_g WHERE 学号<span class="token operator">=</span><span class="token string">'0010'</span>SELECT <span class="token operator">*</span> FROM v_stu_g</code></pre><h6 id="12-利用视图v-stu-g修改姓名为张青平的学生的高等数学的分数为87。"><a href="#12-利用视图v-stu-g修改姓名为张青平的学生的高等数学的分数为87。" class="headerlink" title="12.利用视图v_stu_g修改姓名为张青平的学生的高等数学的分数为87。"></a>12.利用视图v_stu_g修改姓名为张青平的学生的高等数学的分数为87。</h6><pre class=" language-csharp"><code class="language-csharp">UPDATE grade SET  分数<span class="token operator">=</span><span class="token string">'87'</span>WHERE 学号<span class="token operator">=</span><span class="token punctuation">(</span>SELECT 学号 FROM v_stu_g WHERE 姓名<span class="token operator">=</span><span class="token string">'张青平'</span> <span class="token punctuation">)</span> AND 课程编号<span class="token operator">=</span><span class="token punctuation">(</span>SELECT 课程编号 FROM curriculum WHERE 课程名称<span class="token operator">=</span><span class="token string">'高等数学'</span><span class="token punctuation">)</span>SELECT <span class="token operator">*</span> FROM grade</code></pre><h6 id="13-使用SQL语句删除视图v-stu-c和v-stu-g。"><a href="#13-使用SQL语句删除视图v-stu-c和v-stu-g。" class="headerlink" title="13.使用SQL语句删除视图v_stu_c和v_stu_g。"></a>13.使用SQL语句删除视图v_stu_c和v_stu_g。</h6><pre class=" language-csharp"><code class="language-csharp">DROP v_stu_c<span class="token punctuation">,</span>v_stu_g<span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库基本查询</title>
      <link href="/2020/10/10/shu-ju-ku-ji-ben-cha-xun/"/>
      <url>/2020/10/10/shu-ju-ku-ji-ben-cha-xun/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>欢迎来到<a href="https://anzhiruoxi123.github.io/">鸿鹄会</a>让我们一起学习吧！<br>我的邮箱<a href="https://anzhiruoxi123.github.io/">2779372950@qq.com</a></p><h4 id="一、在studentsdb数据库中使用SELECT语句进行基本查询。"><a href="#一、在studentsdb数据库中使用SELECT语句进行基本查询。" class="headerlink" title="一、在studentsdb数据库中使用SELECT语句进行基本查询。"></a>一、在studentsdb数据库中使用SELECT语句进行基本查询。</h4><h6 id="1-在student-info表中，查询每个学生的学号、姓名、出生日期信息。"><a href="#1-在student-info表中，查询每个学生的学号、姓名、出生日期信息。" class="headerlink" title="(1)在student_info表中，查询每个学生的学号、姓名、出生日期信息。"></a>(1)在student_info表中，查询每个学生的学号、姓名、出生日期信息。</h6><pre class=" language-csharp"><code class="language-csharp">SELECT c<span class="token punctuation">.</span>`学号`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`姓名`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`出生日期` FROM student_info c<span class="token punctuation">;</span></code></pre><h6 id="2-查询student-info表学号为-0002的学生的姓名和家庭住址。"><a href="#2-查询student-info表学号为-0002的学生的姓名和家庭住址。" class="headerlink" title="(2)查询student_info表学号为 0002的学生的姓名和家庭住址。"></a>(2)查询student_info表学号为 0002的学生的姓名和家庭住址。</h6><pre class=" language-csharp"><code class="language-csharp">SELECT c<span class="token punctuation">.</span>`姓名`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`家族住址` FROM student_info c <span class="token keyword">where</span> c<span class="token punctuation">.</span>`学号`<span class="token operator">=</span><span class="token string">'0002'</span><span class="token punctuation">;</span></code></pre><h6 id="3-查询student-info表所有出生日期在95年以后的女同学的姓名和出生日期。"><a href="#3-查询student-info表所有出生日期在95年以后的女同学的姓名和出生日期。" class="headerlink" title="(3)查询student_info表所有出生日期在95年以后的女同学的姓名和出生日期。"></a>(3)查询student_info表所有出生日期在95年以后的女同学的姓名和出生日期。</h6><pre class=" language-csharp"><code class="language-csharp">SELECT c<span class="token punctuation">.</span>`姓名`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`出生日期` FROM student_info c WHERE c<span class="token punctuation">.</span>`出生日期` <span class="token operator">></span> <span class="token string">'1995-01-01'</span>AND c<span class="token punctuation">.</span>`性别`<span class="token operator">=</span><span class="token string">'女'</span><span class="token punctuation">;</span></code></pre><h4 id="二、使用select语句进行条件查询。"><a href="#二、使用select语句进行条件查询。" class="headerlink" title="二、使用select语句进行条件查询。"></a>二、使用select语句进行条件查询。</h4><h6 id="1-在grade表中查询分数在70-80范围内的学生的学号、课程编号和成绩。"><a href="#1-在grade表中查询分数在70-80范围内的学生的学号、课程编号和成绩。" class="headerlink" title="(1)在grade表中查询分数在70-80范围内的学生的学号、课程编号和成绩。"></a>(1)在grade表中查询分数在70-80范围内的学生的学号、课程编号和成绩。</h6><pre class=" language-csharp"><code class="language-csharp">SELECT <span class="token operator">*</span> FROM grade dSELECT d<span class="token punctuation">.</span>`学号`<span class="token punctuation">,</span>d<span class="token punctuation">.</span>`课程编号`<span class="token punctuation">,</span>d<span class="token punctuation">.</span>`分数` FROM grade d  WHERE d<span class="token punctuation">.</span>`分数` BETWEEN <span class="token number">70</span> AND <span class="token number">80</span><span class="token punctuation">;</span></code></pre><h6 id="2-在grade表中查询课程编号为0002的学生的平均成绩。"><a href="#2-在grade表中查询课程编号为0002的学生的平均成绩。" class="headerlink" title="(2)在grade表中查询课程编号为0002的学生的平均成绩。"></a>(2)在grade表中查询课程编号为0002的学生的平均成绩。</h6><pre class=" language-csharp"><code class="language-csharp">SELECT <span class="token function">AVG</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>`分数`<span class="token punctuation">)</span> AS 分数 FROM grade d WHERE d<span class="token punctuation">.</span>`课程编号`<span class="token operator">=</span><span class="token number">0002</span><span class="token punctuation">;</span></code></pre><h6 id="3-在grade表中查询选修课程编号为0003的人数和该课程有成绩的人数。"><a href="#3-在grade表中查询选修课程编号为0003的人数和该课程有成绩的人数。" class="headerlink" title="(3)在grade表中查询选修课程编号为0003的人数和该课程有成绩的人数。"></a>(3)在grade表中查询选修课程编号为0003的人数和该课程有成绩的人数。</h6><pre class=" language-csharp"><code class="language-csharp">SELECT <span class="token function">COUNT</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>`分数`<span class="token punctuation">)</span> FROM grade d WHERE d<span class="token punctuation">.</span>`课程编号`<span class="token operator">=</span><span class="token number">0003</span><span class="token punctuation">;</span></code></pre><h6 id="4-查询student-info的姓名和出生日期，查询结果按出生日期从大到小排序。"><a href="#4-查询student-info的姓名和出生日期，查询结果按出生日期从大到小排序。" class="headerlink" title="(4)查询student_info的姓名和出生日期，查询结果按出生日期从大到小排序。"></a>(4)查询student_info的姓名和出生日期，查询结果按出生日期从大到小排序。</h6><pre class=" language-csharp"><code class="language-csharp">SELECT c<span class="token punctuation">.</span>`姓名`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`出生日期` FROM student_info c  ORDER BY c<span class="token punctuation">.</span>`出生日期` DESC<span class="token punctuation">;</span></code></pre><h6 id="5-查询所有姓名“张”的学生的学号和姓名。"><a href="#5-查询所有姓名“张”的学生的学号和姓名。" class="headerlink" title="(5)查询所有姓名“张”的学生的学号和姓名。"></a>(5)查询所有姓名“张”的学生的学号和姓名。</h6><pre class=" language-csharp"><code class="language-csharp">SELECT c<span class="token punctuation">.</span>`学号`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`姓名` FROM student_info c WHERE c<span class="token punctuation">.</span>`姓名` LIKE <span class="token string">'张%'</span><span class="token punctuation">;</span></code></pre><h4 id="三、对student-info表，查询学生的学号、姓名、性别、出生日期及家庭住址，查询结果先按照性别的由小到大排序，性别相同的再按学号由大到小排序。"><a href="#三、对student-info表，查询学生的学号、姓名、性别、出生日期及家庭住址，查询结果先按照性别的由小到大排序，性别相同的再按学号由大到小排序。" class="headerlink" title="三、对student_info表，查询学生的学号、姓名、性别、出生日期及家庭住址，查询结果先按照性别的由小到大排序，性别相同的再按学号由大到小排序。"></a>三、对student_info表，查询学生的学号、姓名、性别、出生日期及家庭住址，查询结果先按照性别的由小到大排序，性别相同的再按学号由大到小排序。</h4><pre class=" language-csharp"><code class="language-csharp">SELECT c<span class="token punctuation">.</span>`学号`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`姓名`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`性别`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`出生日期`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`家族住址` FROM student_info c  ORDER BY c<span class="token punctuation">.</span>`性别`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`学号`DESC<span class="token punctuation">;</span></code></pre><h4 id="四、使用GROUP-BY子句查询grade表中各个学生的平均成绩。"><a href="#四、使用GROUP-BY子句查询grade表中各个学生的平均成绩。" class="headerlink" title="四、使用GROUP BY子句查询grade表中各个学生的平均成绩。"></a>四、使用GROUP BY子句查询grade表中各个学生的平均成绩。</h4><pre class=" language-csharp"><code class="language-csharp">SELECT <span class="token function">AVG</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>`分数`<span class="token punctuation">)</span> AS 平均成绩 FROM grade d<span class="token punctuation">;</span></code></pre><h4 id="五使用UNION运算符针student-info表中姓“刘”的学生的学号、姓名与姓“张”的学生的学号、姓名返回在一个表中。"><a href="#五使用UNION运算符针student-info表中姓“刘”的学生的学号、姓名与姓“张”的学生的学号、姓名返回在一个表中。" class="headerlink" title="五使用UNION运算符针student_info表中姓“刘”的学生的学号、姓名与姓“张”的学生的学号、姓名返回在一个表中。"></a>五使用UNION运算符针student_info表中姓“刘”的学生的学号、姓名与姓“张”的学生的学号、姓名返回在一个表中。</h4><pre class=" language-csharp"><code class="language-csharp">SELECT c<span class="token punctuation">.</span>`学号`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`姓名` FROM  student_info c WHERE c<span class="token punctuation">.</span>`姓名` LIKE <span class="token string">'刘%'</span>UNIONSELECT c<span class="token punctuation">.</span>`学号`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`姓名` FROM  student_info c WHERE c<span class="token punctuation">.</span>`姓名` LIKE <span class="token string">'张%'</span><span class="token punctuation">;</span></code></pre><h4 id="六嵌套查询"><a href="#六嵌套查询" class="headerlink" title="六嵌套查询"></a>六嵌套查询</h4><h6 id="1-在student-info表中查找与“刘东阳”性别相同的所有学生的姓名、出生日期。"><a href="#1-在student-info表中查找与“刘东阳”性别相同的所有学生的姓名、出生日期。" class="headerlink" title="(1)在student_info表中查找与“刘东阳”性别相同的所有学生的姓名、出生日期。"></a>(1)在student_info表中查找与“刘东阳”性别相同的所有学生的姓名、出生日期。</h6><pre class=" language-csharp"><code class="language-csharp">SELECT c<span class="token punctuation">.</span>`姓名`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`出生日期` FROM student_info c WHERE c<span class="token punctuation">.</span>`性别`<span class="token operator">=</span><span class="token punctuation">(</span>SELECT c<span class="token punctuation">.</span>`性别` FROM student_info c WHERE c<span class="token punctuation">.</span>`姓名`<span class="token operator">=</span><span class="token string">'刘东阳'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h6 id="2-使用IN子查询查找所修课程编号为0002、0005的学生学号、姓名、性别。"><a href="#2-使用IN子查询查找所修课程编号为0002、0005的学生学号、姓名、性别。" class="headerlink" title="(2)使用IN子查询查找所修课程编号为0002、0005的学生学号、姓名、性别。"></a>(2)使用IN子查询查找所修课程编号为0002、0005的学生学号、姓名、性别。</h6><pre class=" language-csharp"><code class="language-csharp">SELECT c<span class="token punctuation">.</span>`学号`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`姓名`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`性别` FROM student_info c WHERE c<span class="token punctuation">.</span>`学号` <span class="token function">IN</span>   <span class="token punctuation">(</span> SELECT d<span class="token punctuation">.</span>`学号` FROM grade d WHERE  d<span class="token punctuation">.</span>`课程编号` <span class="token function">IN</span><span class="token punctuation">(</span><span class="token string">'0002'</span><span class="token punctuation">,</span><span class="token string">'0005'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h6 id="3-使用ANY子查询查找学号为0001的学生的分数比0002号的学生的最低分数高的课程编号和分数。"><a href="#3-使用ANY子查询查找学号为0001的学生的分数比0002号的学生的最低分数高的课程编号和分数。" class="headerlink" title="(3)使用ANY子查询查找学号为0001的学生的分数比0002号的学生的最低分数高的课程编号和分数。"></a>(3)使用ANY子查询查找学号为0001的学生的分数比0002号的学生的最低分数高的课程编号和分数。</h6><pre class=" language-csharp"><code class="language-csharp">SELECT d<span class="token punctuation">.</span>`学号`<span class="token punctuation">,</span>d<span class="token punctuation">.</span>`课程编号`<span class="token punctuation">,</span>d<span class="token punctuation">.</span>`分数` FROM grade d WHERE d<span class="token punctuation">.</span>`学号`<span class="token operator">=</span><span class="token string">'0001'</span> AND  d<span class="token punctuation">.</span>`分数` <span class="token operator">></span> <span class="token function">ANY</span><span class="token punctuation">(</span>SELECT d<span class="token punctuation">.</span>`分数` FROM grade d WHERE d<span class="token punctuation">.</span>`学号`<span class="token operator">=</span><span class="token number">0002</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h6 id="4-使用ALL子查询查找学号为0001的学生的分数比学号为0002的学生的最高成绩还要高的课程编号和分数。"><a href="#4-使用ALL子查询查找学号为0001的学生的分数比学号为0002的学生的最高成绩还要高的课程编号和分数。" class="headerlink" title="(4)使用ALL子查询查找学号为0001的学生的分数比学号为0002的学生的最高成绩还要高的课程编号和分数。"></a>(4)使用ALL子查询查找学号为0001的学生的分数比学号为0002的学生的最高成绩还要高的课程编号和分数。</h6><pre><code>SELECT d.`学号`,d.`课程编号`,d.`分数` FROM grade d WHERE d.`学号`='0001' AND  d.`分数` &gt; ALL(SELECT d.`分数` FROM grade d WHERE d.`学号`=0002);</code></pre><h4 id="七、连接查询"><a href="#七、连接查询" class="headerlink" title="七、连接查询"></a>七、连接查询</h4><h6 id="1-查询分数在80-90范围内的学生的学号、姓名、分数。"><a href="#1-查询分数在80-90范围内的学生的学号、姓名、分数。" class="headerlink" title="(1)查询分数在80-90范围内的学生的学号、姓名、分数。"></a>(1)查询分数在80-90范围内的学生的学号、姓名、分数。</h6><pre class=" language-csharp"><code class="language-csharp">SELECT c<span class="token punctuation">.</span>`学号`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`姓名`<span class="token punctuation">,</span>d<span class="token punctuation">.</span>`分数` FROM student_info c<span class="token punctuation">,</span> grade d WHERE c<span class="token punctuation">.</span>`学号` <span class="token operator">=</span> d<span class="token punctuation">.</span>`学号` AND d<span class="token punctuation">.</span>`分数` BETWEEN <span class="token number">80</span> AND <span class="token number">90</span><span class="token punctuation">;</span></code></pre><h6 id="2-使用INNER-JOIN连接方式查询学习“数据库原理及应用”课程的学生学号、姓名、分数。"><a href="#2-使用INNER-JOIN连接方式查询学习“数据库原理及应用”课程的学生学号、姓名、分数。" class="headerlink" title="(2)使用INNER JOIN连接方式查询学习“数据库原理及应用”课程的学生学号、姓名、分数。"></a>(2)使用INNER JOIN连接方式查询学习“数据库原理及应用”课程的学生学号、姓名、分数。</h6><pre class=" language-csharp"><code class="language-csharp"><span class="token preprocessor property"># SELECT e.`课程名称` FROM curriculum e</span>SELECT c<span class="token punctuation">.</span>`学号`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`姓名`<span class="token punctuation">,</span>d<span class="token punctuation">.</span>`分数` FROM student_info c INNER JOIN grade d ON c<span class="token punctuation">.</span>`学号`<span class="token operator">=</span>d<span class="token punctuation">.</span>`学号` INNER JOIN curriculum e ON d<span class="token punctuation">.</span>`课程编号`<span class="token operator">=</span>e<span class="token punctuation">.</span>`课程编号`  WHERE e<span class="token punctuation">.</span>`课程名称`<span class="token operator">=</span><span class="token string">"数据库原理及应用"</span><span class="token punctuation">;</span></code></pre><h6 id="3-查询每个学生所选课程的最高成绩，要求列出学号、姓名、最高成绩。"><a href="#3-查询每个学生所选课程的最高成绩，要求列出学号、姓名、最高成绩。" class="headerlink" title="(3)查询每个学生所选课程的最高成绩，要求列出学号、姓名、最高成绩。"></a>(3)查询每个学生所选课程的最高成绩，要求列出学号、姓名、最高成绩。</h6><pre class=" language-csharp"><code class="language-csharp">SELECT c<span class="token punctuation">.</span>`学号`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`姓名`<span class="token punctuation">,</span><span class="token function">max</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>`分数`<span class="token punctuation">)</span>AS 最高成绩 FROM student_info c<span class="token punctuation">,</span>grade d WHERE c<span class="token punctuation">.</span>`学号`<span class="token operator">=</span>d<span class="token punctuation">.</span>`学号` GROUP BY c<span class="token punctuation">.</span>`学号`<span class="token punctuation">;</span></code></pre><h6 id="4-使用左外连接查询每个学生的总成绩，要求列出学号、姓名、总成绩，没有选修课程的学生的总成绩为空。"><a href="#4-使用左外连接查询每个学生的总成绩，要求列出学号、姓名、总成绩，没有选修课程的学生的总成绩为空。" class="headerlink" title="(4)使用左外连接查询每个学生的总成绩，要求列出学号、姓名、总成绩，没有选修课程的学生的总成绩为空。"></a>(4)使用左外连接查询每个学生的总成绩，要求列出学号、姓名、总成绩，没有选修课程的学生的总成绩为空。</h6><pre class=" language-csharp"><code class="language-csharp">SELECT c<span class="token punctuation">.</span>`学号`<span class="token punctuation">,</span>c<span class="token punctuation">.</span>`姓名`<span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>`分数`<span class="token punctuation">)</span>总成绩 FROM student_info c  LEFT OUTER JOIN grade d ON c<span class="token punctuation">.</span>`学号`<span class="token operator">=</span>d<span class="token punctuation">.</span>`学号`GROUP BY c<span class="token punctuation">.</span>`学号`<span class="token punctuation">;</span></code></pre><h6 id="5-为grade表添加数据行：学号为0004、课程编号为0006、分数为76。"><a href="#5-为grade表添加数据行：学号为0004、课程编号为0006、分数为76。" class="headerlink" title="(5)为grade表添加数据行：学号为0004、课程编号为0006、分数为76。"></a>(5)为grade表添加数据行：学号为0004、课程编号为0006、分数为76。</h6><h6 id="使用右外连接查询所有课程的选修情况，要求列出课程编号、课程名称、选修人数，curriculum表中没有的课程列值为空。"><a href="#使用右外连接查询所有课程的选修情况，要求列出课程编号、课程名称、选修人数，curriculum表中没有的课程列值为空。" class="headerlink" title="使用右外连接查询所有课程的选修情况，要求列出课程编号、课程名称、选修人数，curriculum表中没有的课程列值为空。"></a>使用右外连接查询所有课程的选修情况，要求列出课程编号、课程名称、选修人数，curriculum表中没有的课程列值为空。</h6><pre class=" language-csharp"><code class="language-csharp">INSERT INTO grade <span class="token function">VALUES</span> <span class="token punctuation">(</span><span class="token string">'0004'</span><span class="token punctuation">,</span><span class="token string">'0006'</span><span class="token punctuation">,</span><span class="token string">'76'</span><span class="token punctuation">)</span> SELECT d<span class="token punctuation">.</span>`课程编号`<span class="token punctuation">,</span>e<span class="token punctuation">.</span>`课程名称`<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>选修人数 FROM grade d RIGHT OUTER JOIN curriculum e ON d<span class="token punctuation">.</span>`课程编号`<span class="token operator">=</span>e<span class="token punctuation">.</span>`课程编号` GROUP BY d<span class="token punctuation">.</span>`课程编号`<span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>while和for应用</title>
      <link href="/2020/10/10/while-he-for-ying-yong/"/>
      <url>/2020/10/10/while-he-for-ying-yong/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>欢迎来到<a href="https://anzhiruoxi123.github.io/">鸿鹄会</a>让我们一起学习吧！<br>我的邮箱<a href="https://anzhiruoxi123.github.io/">2779372950@qq.com</a></p><h4 id="使用while循环输出2-100之间的素数"><a href="#使用while循环输出2-100之间的素数" class="headerlink" title="使用while循环输出2~100之间的素数"></a>使用while循环输出2~100之间的素数</h4><pre class=" language-csharp"><code class="language-csharp">i <span class="token operator">=</span> <span class="token number">2</span><span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>   j <span class="token operator">=</span> <span class="token number">2</span>   <span class="token keyword">while</span><span class="token punctuation">(</span>j <span class="token operator">&lt;=</span> <span class="token punctuation">(</span>i<span class="token operator">/</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token keyword">if</span> <span class="token function">not</span><span class="token punctuation">(</span>i<span class="token operator">%</span>j<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">break</span> #在python中<span class="token keyword">false</span> <span class="token operator">==</span> <span class="token number">0</span>或空，<span class="token keyword">true</span> <span class="token operator">==</span><span class="token number">1</span>或非空。                          <span class="token preprocessor property"># i%j取余数，当余数是0(能整除)是false，加上not变成true。不能整除相反。</span>      j <span class="token operator">=</span> j <span class="token operator">+</span> <span class="token number">1</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">></span> i<span class="token operator">/</span>j<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">" 是素数"</span><span class="token punctuation">)</span>   i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span></code></pre><h4 id="使用while循环打印九九乘法表"><a href="#使用while循环打印九九乘法表" class="headerlink" title="使用while循环打印九九乘法表"></a>使用while循环打印九九乘法表</h4><pre class=" language-csharp"><code class="language-csharp">i<span class="token operator">=</span><span class="token number">0</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">while</span> i<span class="token operator">&lt;</span><span class="token number">9</span><span class="token punctuation">:</span>    i<span class="token operator">+</span><span class="token operator">=</span><span class="token number">1</span>    <span class="token keyword">while</span> j<span class="token operator">&lt;</span><span class="token number">9</span><span class="token punctuation">:</span>        j<span class="token operator">+</span><span class="token operator">=</span><span class="token number">1</span>        <span class="token function">print</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span><span class="token string">"x"</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token string">"="</span><span class="token punctuation">,</span>i<span class="token operator">*</span>j<span class="token punctuation">,</span><span class="token string">" "</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> i<span class="token operator">==</span>j<span class="token punctuation">:</span>            j<span class="token operator">=</span><span class="token number">0</span>            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>            <span class="token keyword">break</span></code></pre><h4 id="使用for循环打印一个正立实心等腰三角形"><a href="#使用for循环打印一个正立实心等腰三角形" class="headerlink" title="使用for循环打印一个正立实心等腰三角形"></a>使用for循环打印一个正立实心等腰三角形</h4><pre class=" language-csharp"><code class="language-csharp"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span> <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token function">print</span><span class="token punctuation">(</span>end<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">-</span> i<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库标准语言sql</title>
      <link href="/2020/10/10/shu-ju-ku-biao-zhun-yu-yan-sql/"/>
      <url>/2020/10/10/shu-ju-ku-biao-zhun-yu-yan-sql/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>欢迎来到<a href="https://anzhiruoxi123.github.io/">鸿鹄会</a>让我们一起学习吧！<br>我的邮箱<a href="https://anzhiruoxi123.github.io/">2779372950@qq.com</a></p><h5 id="1-使用SQL语句创建数据库1-使用SQL语句创建数据库studentsdb。"><a href="#1-使用SQL语句创建数据库1-使用SQL语句创建数据库studentsdb。" class="headerlink" title="1. 使用SQL语句创建数据库1. 使用SQL语句创建数据库studentsdb。"></a>1. 使用SQL语句创建数据库1. 使用SQL语句创建数据库studentsdb。</h5><pre class=" language-csharp"><code class="language-csharp">CREATE DATABASE Studentsdb</code></pre><h5 id="2-使用SQL语句选择studentsdb为当前使用数据库。"><a href="#2-使用SQL语句选择studentsdb为当前使用数据库。" class="headerlink" title="2. 使用SQL语句选择studentsdb为当前使用数据库。"></a>2. 使用SQL语句选择studentsdb为当前使用数据库。</h5><pre class=" language-csharp"><code class="language-csharp">USE Studentsdb</code></pre><h5 id="3-使用SQL语句在studentsdb数据库创建数据表student-info、curriculum、grade，三个表的数据结构如表1-表3所示。"><a href="#3-使用SQL语句在studentsdb数据库创建数据表student-info、curriculum、grade，三个表的数据结构如表1-表3所示。" class="headerlink" title="3. 使用SQL语句在studentsdb数据库创建数据表student_info、curriculum、grade，三个表的数据结构如表1-表3所示。"></a>3. 使用SQL语句在studentsdb数据库创建数据表student_info、curriculum、grade，三个表的数据结构如表1-表3所示。</h5><pre class=" language-csharp"><code class="language-csharp">CREATE TABLE <span class="token function">student_info</span><span class="token punctuation">(</span>学号 <span class="token function">CHAR</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> NOT NULL PRIMARY KEY<span class="token punctuation">,</span>姓名 <span class="token function">CHAR</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> NOT NULL<span class="token punctuation">,</span>性别 <span class="token function">CHAR</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">,</span>studentsdb出生日期 DATE<span class="token punctuation">,</span>家庭住址 <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>CREATE TABLE <span class="token function">curriculum</span><span class="token punctuation">(</span>课程编号 <span class="token function">CHAR</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> NOT NULL PRIMARY KEY<span class="token punctuation">,</span>课程名称 <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>学分 INT<span class="token punctuation">)</span><span class="token punctuation">;</span>CREATE TABLE <span class="token function">grade</span><span class="token punctuation">(</span>学号 <span class="token function">CHAR</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> NOT <span class="token keyword">null</span><span class="token punctuation">,</span>课程编号 <span class="token function">CHAR</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> NOT NULL<span class="token punctuation">,</span>分数 INT<span class="token punctuation">,</span>PRIMARY <span class="token function">KEY</span><span class="token punctuation">(</span>学号<span class="token punctuation">,</span>课程编号<span class="token punctuation">)</span><span class="token punctuation">)</span>；</code></pre><h5 id="4-使用SQL语句INSERT向studentsdb数据库的student-info、curriculum、grade表插入数据，各表数据如表4-表6所示。"><a href="#4-使用SQL语句INSERT向studentsdb数据库的student-info、curriculum、grade表插入数据，各表数据如表4-表6所示。" class="headerlink" title="4. 使用SQL语句INSERT向studentsdb数据库的student_info、curriculum、grade表插入数据，各表数据如表4-表6所示。"></a>4. 使用SQL语句INSERT向studentsdb数据库的student_info、curriculum、grade表插入数据，各表数据如表4-表6所示。</h5><pre class=" language-csharp"><code class="language-csharp">INSERT INTO student_info <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0001'</span><span class="token punctuation">,</span><span class="token string">'张青平'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'2000-10-01'</span><span class="token punctuation">,</span><span class="token string">'衡阳东风路77号'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO student_info <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0002'</span><span class="token punctuation">,</span><span class="token string">'刘东阳'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'1998-12-09'</span><span class="token punctuation">,</span><span class="token string">'东阳市八一北路33号'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO student_info <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0003'</span><span class="token punctuation">,</span><span class="token string">'马晓夏'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'1995-05-12'</span><span class="token punctuation">,</span><span class="token string">'长岭市五一路963号'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO student_info <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0004'</span><span class="token punctuation">,</span><span class="token string">'钱忠理'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'1994-09-23'</span><span class="token punctuation">,</span><span class="token string">'滨海市洞庭大道279号'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO student_info <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0005'</span><span class="token punctuation">,</span><span class="token string">'孙海洋'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'1995-04-03'</span><span class="token punctuation">,</span><span class="token string">'长岛市解放路27号'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO student_info <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0006'</span><span class="token punctuation">,</span><span class="token string">'郭小斌'</span><span class="token punctuation">,</span><span class="token string">'男'</span><span class="token punctuation">,</span><span class="token string">'1997-11-10'</span><span class="token punctuation">,</span><span class="token string">'南山市红旗路113号'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO student_info <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0007'</span><span class="token punctuation">,</span><span class="token string">'肖月玲'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'1996-12-07'</span><span class="token punctuation">,</span><span class="token string">'东方市南京路11号'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO student_info <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0008'</span><span class="token punctuation">,</span><span class="token string">'张玲珑'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'1997-12-24'</span><span class="token punctuation">,</span><span class="token string">'滨江市新建路97号'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO curriculum <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0001'</span><span class="token punctuation">,</span><span class="token string">'计算机应用基础'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO curriculum <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0002'</span><span class="token punctuation">,</span><span class="token string">'C语言程序设计'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO curriculum <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0003'</span><span class="token punctuation">,</span><span class="token string">'数据库原理及应用'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO curriculum <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0004'</span><span class="token punctuation">,</span><span class="token string">'英语'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO curriculum <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0005'</span><span class="token punctuation">,</span><span class="token string">'数学'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO grade <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0001'</span><span class="token punctuation">,</span><span class="token string">'0001'</span><span class="token punctuation">,</span><span class="token string">'80'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO grade <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0001'</span><span class="token punctuation">,</span><span class="token string">'0002'</span><span class="token punctuation">,</span><span class="token string">'91'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO grade <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0001'</span><span class="token punctuation">,</span><span class="token string">'0003'</span><span class="token punctuation">,</span><span class="token string">'88'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO grade <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0001'</span><span class="token punctuation">,</span><span class="token string">'0004'</span><span class="token punctuation">,</span><span class="token string">'85'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO grade <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0001'</span><span class="token punctuation">,</span><span class="token string">'0005'</span><span class="token punctuation">,</span><span class="token string">'77'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO grade <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0002'</span><span class="token punctuation">,</span><span class="token string">'0001'</span><span class="token punctuation">,</span><span class="token string">'73'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO grade <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0002'</span><span class="token punctuation">,</span><span class="token string">'0002'</span><span class="token punctuation">,</span><span class="token string">'68'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO grade <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0002'</span><span class="token punctuation">,</span><span class="token string">'0003'</span><span class="token punctuation">,</span><span class="token string">'80'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO grade <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0002'</span><span class="token punctuation">,</span><span class="token string">'0004'</span><span class="token punctuation">,</span><span class="token string">'79'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO grade <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0002'</span><span class="token punctuation">,</span><span class="token string">'0005'</span><span class="token punctuation">,</span><span class="token string">'73'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO grade <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0003'</span><span class="token punctuation">,</span><span class="token string">'0001'</span><span class="token punctuation">,</span><span class="token string">'84'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO grade <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0003'</span><span class="token punctuation">,</span><span class="token string">'0002'</span><span class="token punctuation">,</span><span class="token string">'92'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO grade <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0003'</span><span class="token punctuation">,</span><span class="token string">'0003'</span><span class="token punctuation">,</span><span class="token string">'81'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO grade <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0003'</span><span class="token punctuation">,</span><span class="token string">'0004'</span><span class="token punctuation">,</span><span class="token string">'82'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>INSERT INTO grade <span class="token function">VALUES</span><span class="token punctuation">(</span><span class="token string">'0003'</span><span class="token punctuation">,</span><span class="token string">'0005'</span><span class="token punctuation">,</span><span class="token string">'75'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h5 id="5-使用SQL语句ALTER-TABLE修改curriculum表的“课程名称”列，使之为空。"><a href="#5-使用SQL语句ALTER-TABLE修改curriculum表的“课程名称”列，使之为空。" class="headerlink" title="5. 使用SQL语句ALTER TABLE修改curriculum表的“课程名称”列，使之为空。"></a>5. 使用SQL语句ALTER TABLE修改curriculum表的“课程名称”列，使之为空。</h5><pre class=" language-csharp"><code class="language-csharp">ALTER TABLE curriculumMODIFY COLUMN 课程名称 <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> NULL<span class="token punctuation">;</span></code></pre><h5 id="6-使用SQL语句ALTER-TABLE修改grade表的“分数”列，使其数据类型为decimal-5-2-。"><a href="#6-使用SQL语句ALTER-TABLE修改grade表的“分数”列，使其数据类型为decimal-5-2-。" class="headerlink" title="6. 使用SQL语句ALTER TABLE修改grade表的“分数”列，使其数据类型为decimal(5,2)。"></a>6. 使用SQL语句ALTER TABLE修改grade表的“分数”列，使其数据类型为decimal(5,2)。</h5><pre class=" language-csharp"><code class="language-csharp">ALTER TABLE grade MODIFY COLUMN 分数 <span class="token function">DECIMAL</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h5 id="7-使用SQL语句ALTER-TABLE为student-info表添加一个名为“备注”的数据列，其数据类型为varchar-50-。"><a href="#7-使用SQL语句ALTER-TABLE为student-info表添加一个名为“备注”的数据列，其数据类型为varchar-50-。" class="headerlink" title="7. 使用SQL语句ALTER TABLE为student_info表添加一个名为“备注”的数据列，其数据类型为varchar(50)。"></a>7. 使用SQL语句ALTER TABLE为student_info表添加一个名为“备注”的数据列，其数据类型为varchar(50)。</h5><pre class=" language-csharp"><code class="language-csharp">ALTER TABLE student_infoADD 备注 <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h5 id="8-使用SQL语句创建数据库studb，并在此数据库下创建表stu，表结构与数据与studentsdb的student-info表相同。"><a href="#8-使用SQL语句创建数据库studb，并在此数据库下创建表stu，表结构与数据与studentsdb的student-info表相同。" class="headerlink" title="8. 使用SQL语句创建数据库studb，并在此数据库下创建表stu，表结构与数据与studentsdb的student_info表相同。"></a>8. 使用SQL语句创建数据库studb，并在此数据库下创建表stu，表结构与数据与studentsdb的student_info表相同。</h5><pre class=" language-csharp"><code class="language-csharp">CREATE DATABASE studb<span class="token punctuation">;</span>USE studb<span class="token punctuation">;</span>CREATE TABLE stuAS <span class="token keyword">select</span><span class="token operator">*</span>FROM studentsdb<span class="token punctuation">.</span>student_info<span class="token punctuation">;</span></code></pre><h5 id="9-使用SQL语句删除表stu中学号为0004的记录。"><a href="#9-使用SQL语句删除表stu中学号为0004的记录。" class="headerlink" title="9. 使用SQL语句删除表stu中学号为0004的记录。"></a>9. 使用SQL语句删除表stu中学号为0004的记录。</h5><pre class=" language-csharp"><code class="language-csharp">SET SQL_SAFE_updates<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>DELETE FROM stu WHERE 学号<span class="token operator">=</span><span class="token string">'0004'</span><span class="token punctuation">;</span></code></pre><h5 id="10-使用SQL语句更新表stud中学号为0002的家庭住址为“滨江市新建路96号”。"><a href="#10-使用SQL语句更新表stud中学号为0002的家庭住址为“滨江市新建路96号”。" class="headerlink" title="10.使用SQL语句更新表stud中学号为0002的家庭住址为“滨江市新建路96号”。"></a>10.使用SQL语句更新表stud中学号为0002的家庭住址为“滨江市新建路96号”。</h5><pre class=" language-csharp"><code class="language-csharp">UPDATE stu SET 家庭住址<span class="token operator">=</span><span class="token string">'滨江市新建路96号'</span>WHERE 学号<span class="token operator">=</span><span class="token string">'0002'</span><span class="token punctuation">;</span></code></pre><h5 id="11-删除表stud的“备注”列。"><a href="#11-删除表stud的“备注”列。" class="headerlink" title="11.删除表stud的“备注”列。"></a>11.删除表stud的“备注”列。</h5><pre class=" language-csharp"><code class="language-csharp">ALTER TABLE stu drop column 备注；DROP COLUMN 备注<span class="token punctuation">;</span></code></pre><h5 id="12-删除表stud。"><a href="#12-删除表stud。" class="headerlink" title="12.删除表stud。"></a>12.删除表stud。</h5><pre class=" language-csharp"><code class="language-csharp">DROP TABLE stu<span class="token punctuation">;</span></code></pre><h5 id="13-删除数据库studb"><a href="#13-删除数据库studb" class="headerlink" title="13.删除数据库studb"></a>13.删除数据库studb</h5><pre class=" language-csharp"><code class="language-csharp">DROP DATABASE studb<span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>看板娘</title>
      <link href="/2020/10/04/kan-ban-niang/"/>
      <url>/2020/10/04/kan-ban-niang/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p> csharp</p><h1 id="title-Hexo-添加-Live2D看板娘"><a href="#title-Hexo-添加-Live2D看板娘" class="headerlink" title="title: Hexo 添加　Live2D看板娘"></a>title: Hexo 添加　Live2D看板娘</h1><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><h6 id="首先进入Hexo博客根目录安装live2d插件"><a href="#首先进入Hexo博客根目录安装live2d插件" class="headerlink" title="首先进入Hexo博客根目录安装live2d插件"></a>首先进入Hexo博客根目录安装live2d插件</h6><pre class=" language-csharp"><code class="language-csharp">$ npm install <span class="token operator">--</span>save hexo<span class="token operator">-</span>helper<span class="token operator">-</span>live2d</code></pre><h6 id="接着，修改根目录下的-config-yml-文件"><a href="#接着，修改根目录下的-config-yml-文件" class="headerlink" title="接着，修改根目录下的 _config.yml 文件"></a>接着，修改根目录下的 _config.yml 文件</h6><h6 id="添加自定义配置-下面提供我的配置做参考-："><a href="#添加自定义配置-下面提供我的配置做参考-：" class="headerlink" title="添加自定义配置(下面提供我的配置做参考)："></a>添加自定义配置(下面提供我的配置做参考)：</h6><pre class=" language-csharp"><code class="language-csharp"><span class="token preprocessor property">## live2d</span>live2d<span class="token punctuation">:</span>   enable<span class="token punctuation">:</span> <span class="token keyword">true</span>   scriptFrom<span class="token punctuation">:</span> local   pluginRootPath<span class="token punctuation">:</span> live2dw<span class="token operator">/</span>   pluginJsPath<span class="token punctuation">:</span> lib<span class="token operator">/</span>   pluginModelPath<span class="token punctuation">:</span> assets<span class="token operator">/</span>   tagMode<span class="token punctuation">:</span> <span class="token keyword">false</span>   debug<span class="token punctuation">:</span> <span class="token keyword">false</span>   model<span class="token punctuation">:</span>       use<span class="token punctuation">:</span> live2d<span class="token operator">-</span>widget<span class="token operator">-</span>model<span class="token operator">-</span>z16       scale<span class="token punctuation">:</span> <span class="token number">1</span>       hHeadPos<span class="token punctuation">:</span> <span class="token number">0.5</span>       vHeadPos<span class="token punctuation">:</span> <span class="token number">0.618</span>   display<span class="token punctuation">:</span>       superSample<span class="token punctuation">:</span> <span class="token number">2</span>       width<span class="token punctuation">:</span> <span class="token number">150</span>       height<span class="token punctuation">:</span> <span class="token number">300</span>       position<span class="token punctuation">:</span> right       hOffset<span class="token punctuation">:</span> <span class="token number">0</span>       vOffset<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">20</span>   mobile<span class="token punctuation">:</span>       show<span class="token punctuation">:</span> <span class="token keyword">true</span>       scale<span class="token punctuation">:</span> <span class="token number">0.5</span>  react<span class="token punctuation">:</span>      opacityDefault<span class="token punctuation">:</span> <span class="token number">0.7</span>      opacityOnHover<span class="token punctuation">:</span> <span class="token number">0.2</span></code></pre><h6 id="细心一点肯定能发现-model-use-后的字符串就是看板娘模型的名字"><a href="#细心一点肯定能发现-model-use-后的字符串就是看板娘模型的名字" class="headerlink" title="细心一点肯定能发现　model.use 后的字符串就是看板娘模型的名字"></a>细心一点肯定能发现　model.use 后的字符串就是看板娘模型的名字</h6><h6 id="现在你就可以进入-模型预览-挑选自己喜欢的看板娘啦"><a href="#现在你就可以进入-模型预览-挑选自己喜欢的看板娘啦" class="headerlink" title="现在你就可以进入 模型预览 挑选自己喜欢的看板娘啦"></a>现在你就可以进入 <a href="">模型预览</a> 挑选自己喜欢的看板娘啦</h6><h6 id="现在假设你所挑选的看板娘也是z16"><a href="#现在假设你所挑选的看板娘也是z16" class="headerlink" title="现在假设你所挑选的看板娘也是z16"></a>现在假设你所挑选的看板娘也是z16</h6><h6 id="你有几种方式让看板娘进驻你的Hexo博客，这里只提供最方便的一种-命令安装-。"><a href="#你有几种方式让看板娘进驻你的Hexo博客，这里只提供最方便的一种-命令安装-。" class="headerlink" title="你有几种方式让看板娘进驻你的Hexo博客，这里只提供最方便的一种(命令安装)。"></a>你有几种方式让看板娘进驻你的Hexo博客，这里只提供最方便的一种(命令安装)。</h6><h6 id="进入博客根目录输入以下命令："><a href="#进入博客根目录输入以下命令：" class="headerlink" title="进入博客根目录输入以下命令："></a>进入博客根目录输入以下命令：</h6><pre class=" language-csharp"><code class="language-csharp">$ npm install live2d<span class="token operator">-</span>widget<span class="token operator">-</span>model<span class="token operator">-</span>z16</code></pre><h6 id="再将-config-yml-中-model-use检查-一遍确保与你安装的名称一致"><a href="#再将-config-yml-中-model-use检查-一遍确保与你安装的名称一致" class="headerlink" title="再将 _config.yml 中 model.use检查 一遍确保与你安装的名称一致"></a>再将 _config.yml 中 model.use检查 一遍确保与你安装的名称一致</h6><h6 id="到此处看板娘进驻成功"><a href="#到此处看板娘进驻成功" class="headerlink" title="到此处看板娘进驻成功"></a>到此处看板娘进驻成功</h6><h6 id="以下是Hexo常规操作，熟悉的小伙伴就不用继续了"><a href="#以下是Hexo常规操作，熟悉的小伙伴就不用继续了" class="headerlink" title="以下是Hexo常规操作，熟悉的小伙伴就不用继续了"></a>以下是Hexo常规操作，熟悉的小伙伴就不用继续了</h6><pre class=" language-csharp"><code class="language-csharp">$ git  <span class="token keyword">add</span>  <span class="token punctuation">.</span>$ git  commit  <span class="token operator">-</span>m  <span class="token string">"添加看板娘"</span>$ Hexo  s   # 本地查看</code></pre><h6 id="打开浏览器输入127-0-0-1-4000-进入博客页面查看"><a href="#打开浏览器输入127-0-0-1-4000-进入博客页面查看" class="headerlink" title="打开浏览器输入127.0.0.1:4000 进入博客页面查看"></a>打开浏览器输入127.0.0.1:4000 进入博客页面查看</h6>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>循环和判断</title>
      <link href="/2020/10/04/xun-huan-he-pan-duan/"/>
      <url>/2020/10/04/xun-huan-he-pan-duan/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>欢迎来到<a href="https://anzhiruoxi123.github.io/">鸿鹄会</a>让我们一起学习吧！<br>我的邮箱<a href="https://anzhiruoxi123.github.io/">2779372950@qq.com</a></p><h6 id="编写程序计算如下数列的值：‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪1-2-3-4…966，其中，所有数字为整数，从1开始递增，奇数为正，偶数为负"><a href="#编写程序计算如下数列的值：‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪1-2-3-4…966，其中，所有数字为整数，从1开始递增，奇数为正，偶数为负" class="headerlink" title="编写程序计算如下数列的值：‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪1-2+3-4…966，其中，所有数字为整数，从1开始递增，奇数为正，偶数为负"></a>编写程序计算如下数列的值：‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪1-2+3-4…966，其中，所有数字为整数，从1开始递增，奇数为正，偶数为负</h6><pre class=" language-csharp"><code class="language-csharp">$ s<span class="token operator">=</span><span class="token number">0</span>$ <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">967</span><span class="token punctuation">)</span><span class="token punctuation">:</span>$    <span class="token keyword">if</span> x<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>$        x<span class="token operator">=</span><span class="token operator">-</span>x$    s<span class="token operator">+</span><span class="token operator">=</span>x$ <span class="token function">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span></code></pre><h3 id="水仙花数"><a href="#水仙花数" class="headerlink" title="水仙花数"></a>水仙花数</h3><h6 id="“水仙花数”指三位整数，其各位数字的3次方和等于该数本身。例如：A的3次方-B的3次方-C的3次方-ABC。"><a href="#“水仙花数”指三位整数，其各位数字的3次方和等于该数本身。例如：A的3次方-B的3次方-C的3次方-ABC。" class="headerlink" title="“水仙花数”指三位整数，其各位数字的3次方和等于该数本身。例如：A的3次方+B的3次方+C的3次方=ABC。"></a>“水仙花数”指三位整数，其各位数字的3次方和等于该数本身。例如：A的3次方+B的3次方+C的3次方=ABC。</h6><pre class=" language-csharp"><code class="language-csharp">$ <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>$    a<span class="token operator">=</span>i<span class="token operator">%</span><span class="token number">10</span>#个位$    b<span class="token operator">=</span><span class="token keyword">int</span><span class="token punctuation">(</span>i<span class="token operator">%</span><span class="token number">100</span><span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">)</span>#十位$    c<span class="token operator">=</span><span class="token keyword">int</span><span class="token punctuation">(</span>i<span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">)</span>#百位$    <span class="token keyword">if</span> a<span class="token operator">*</span><span class="token operator">*</span><span class="token number">3</span><span class="token operator">+</span>b<span class="token operator">*</span><span class="token operator">*</span><span class="token number">3</span><span class="token operator">+</span>c<span class="token operator">*</span><span class="token operator">*</span><span class="token number">3</span><span class="token operator">==</span>i<span class="token punctuation">:</span>$        <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></code></pre><h5 id="给用户三次输入用户名和密码的机会，要求如下："><a href="#给用户三次输入用户名和密码的机会，要求如下：" class="headerlink" title="给用户三次输入用户名和密码的机会，要求如下："></a>给用户三次输入用户名和密码的机会，要求如下：</h5><p>‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪<br>####### 1）如输入第一行输入用户名为‘Kate’,第二行输入密码为‘666666’，输出‘登录成功！’，退出程序；<br>‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‮‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬<br>####### 2）当一共有3次输入用户名或密码不正确输出“3次用户名或者密码均有误！退出程序。”</p><pre class=" language-csharp"><code class="language-csharp">$  cnt <span class="token operator">=</span> <span class="token number">0</span>$  <span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>$    name <span class="token operator">=</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token string">"童鞋请输入您的用户名"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>$    <span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">'Kate'</span> and password <span class="token operator">==</span> <span class="token string">'666666'</span><span class="token punctuation">:</span>$        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"恭喜你登录成功！"</span><span class="token punctuation">)</span>$        <span class="token keyword">break</span>$    <span class="token keyword">else</span><span class="token punctuation">:</span>$        cnt <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">1</span>$        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"用户名或者密码均有误！请重新输入"</span><span class="token punctuation">)</span>$        <span class="token keyword">if</span> cnt <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>$            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"3次用户名或者密码均有误！退出程序。"</span><span class="token punctuation">)</span>$            <span class="token keyword">break</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>404</title>
      <link href="/2017/07/19/404/"/>
      <url>/2017/07/19/404/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
